// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: building.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "building.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* building_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  building_reflection_ = NULL;
const ::google::protobuf::Descriptor* building_t_building_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  building_t_building_reflection_ = NULL;
const ::google::protobuf::Descriptor* newRoleAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  newRoleAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* newRoleAttr_t_newRoleAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  newRoleAttr_t_newRoleAttr_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_building_2eproto() {
  protobuf_AddDesc_building_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "building.proto");
  GOOGLE_CHECK(file != NULL);
  building_descriptor_ = file->message_type(0);
  static const int building_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building, datas_),
  };
  building_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      building_descriptor_,
      building::default_instance_,
      building_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(building));
  building_t_building_descriptor_ = building_descriptor_->nested_type(0);
  static const int building_t_building_offsets_[42] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, tbxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, dependid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, maxcap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, guestproduce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, buildgridinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, infotype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, buildspineres_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, buildkind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, premisebuild_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, effectpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, effectrange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, guestreduce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, happyincrease_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, selltime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, premiselevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, premisebuild2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, merriness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, requiregold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, requireitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, require_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, requireitem2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, require2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, requireitem3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, require3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, requireitem4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, require4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, produceitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, produce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, produceitem2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, produce2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, produceitem3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, produce3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, functiondescribe_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, functionvalues_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, personrequire_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, iconpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, description_),
  };
  building_t_building_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      building_t_building_descriptor_,
      building_t_building::default_instance_,
      building_t_building_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(building_t_building));
  newRoleAttr_descriptor_ = file->message_type(1);
  static const int newRoleAttr_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr, datas_),
  };
  newRoleAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      newRoleAttr_descriptor_,
      newRoleAttr::default_instance_,
      newRoleAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(newRoleAttr));
  newRoleAttr_t_newRoleAttr_descriptor_ = newRoleAttr_descriptor_->nested_type(0);
  static const int newRoleAttr_t_newRoleAttr_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, tbxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, initbuild_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, gem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, guest_),
  };
  newRoleAttr_t_newRoleAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      newRoleAttr_t_newRoleAttr_descriptor_,
      newRoleAttr_t_newRoleAttr::default_instance_,
      newRoleAttr_t_newRoleAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(newRoleAttr_t_newRoleAttr));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_building_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    building_descriptor_, &building::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    building_t_building_descriptor_, &building_t_building::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    newRoleAttr_descriptor_, &newRoleAttr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    newRoleAttr_t_newRoleAttr_descriptor_, &newRoleAttr_t_newRoleAttr::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_building_2eproto() {
  delete building::default_instance_;
  delete building_reflection_;
  delete building_t_building::default_instance_;
  delete building_t_building_reflection_;
  delete newRoleAttr::default_instance_;
  delete newRoleAttr_reflection_;
  delete newRoleAttr_t_newRoleAttr::default_instance_;
  delete newRoleAttr_t_newRoleAttr_reflection_;
}

void protobuf_AddDesc_building_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016building.proto\022\002pb\"\364\006\n\010building\022&\n\005dat"
    "as\030\001 \003(\0132\027.pb.building.t_building\032\277\006\n\nt_"
    "building\022\r\n\005tbxid\030\001 \002(\r\022\n\n\002id\030\002 \002(\r\022\020\n\010d"
    "ependID\030\003 \002(\r\022\014\n\004name\030\004 \002(\t\022\r\n\005level\030\005 \002"
    "(\r\022\016\n\006MaxCap\030\006 \002(\r\022\024\n\014GuestProduce\030\007 \002(\r"
    "\022\025\n\rbuildGridInfo\030\010 \002(\t\022\020\n\010infoType\030\t \002("
    "\r\022\025\n\rbuildSpineRes\030\n \002(\t\022\021\n\tbuildKind\030\013 "
    "\002(\t\022\024\n\014premiseBuild\030\014 \002(\r\022\021\n\teffectPic\030\r"
    " \002(\t\022\023\n\013effectRange\030\016 \002(\t\022\023\n\013guestReduce"
    "\030\017 \002(\t\022\025\n\rhappyIncrease\030\020 \002(\r\022\020\n\010sellTim"
    "e\030\021 \002(\t\022\024\n\014premiseLevel\030\022 \002(\r\022\025\n\rpremise"
    "Build2\030\023 \002(\t\022\021\n\tmerriness\030\024 \002(\r\022\023\n\013requi"
    "reGold\030\025 \002(\r\022\023\n\013requireItem\030\026 \002(\r\022\017\n\007req"
    "uire\030\027 \002(\r\022\024\n\014requireItem2\030\030 \002(\r\022\020\n\010requ"
    "ire2\030\031 \002(\r\022\024\n\014requireItem3\030\032 \002(\r\022\020\n\010requ"
    "ire3\030\033 \002(\r\022\024\n\014requireItem4\030\034 \002(\r\022\020\n\010requ"
    "ire4\030\035 \002(\r\022\023\n\013produceItem\030\036 \002(\t\022\017\n\007produ"
    "ce\030\037 \002(\r\022\024\n\014produceItem2\030  \002(\r\022\020\n\010produc"
    "e2\030! \002(\r\022\024\n\014produceItem3\030\" \002(\r\022\020\n\010produc"
    "e3\030# \002(\r\022\014\n\004time\030$ \002(\r\022\030\n\020functionDescri"
    "be\030% \002(\t\022\026\n\016functionValues\030& \002(\r\022\014\n\004type"
    "\030\' \002(\t\022\025\n\rpersonRequire\030( \002(\t\022\017\n\007iconPic"
    "\030) \002(\t\022\023\n\013description\030* \002(\t\"\244\001\n\013newRoleA"
    "ttr\022,\n\005datas\030\001 \003(\0132\035.pb.newRoleAttr.t_ne"
    "wRoleAttr\032g\n\rt_newRoleAttr\022\r\n\005tbxid\030\001 \002("
    "\r\022\n\n\002id\030\002 \002(\r\022\021\n\tinitBuild\030\003 \002(\t\022\014\n\004gold"
    "\030\004 \002(\r\022\013\n\003gem\030\005 \002(\r\022\r\n\005guest\030\006 \002(\r", 1074);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "building.proto", &protobuf_RegisterTypes);
  building::default_instance_ = new building();
  building_t_building::default_instance_ = new building_t_building();
  newRoleAttr::default_instance_ = new newRoleAttr();
  newRoleAttr_t_newRoleAttr::default_instance_ = new newRoleAttr_t_newRoleAttr();
  building::default_instance_->InitAsDefaultInstance();
  building_t_building::default_instance_->InitAsDefaultInstance();
  newRoleAttr::default_instance_->InitAsDefaultInstance();
  newRoleAttr_t_newRoleAttr::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_building_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_building_2eproto {
  StaticDescriptorInitializer_building_2eproto() {
    protobuf_AddDesc_building_2eproto();
  }
} static_descriptor_initializer_building_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int building_t_building::kTbxidFieldNumber;
const int building_t_building::kIdFieldNumber;
const int building_t_building::kDependIDFieldNumber;
const int building_t_building::kNameFieldNumber;
const int building_t_building::kLevelFieldNumber;
const int building_t_building::kMaxCapFieldNumber;
const int building_t_building::kGuestProduceFieldNumber;
const int building_t_building::kBuildGridInfoFieldNumber;
const int building_t_building::kInfoTypeFieldNumber;
const int building_t_building::kBuildSpineResFieldNumber;
const int building_t_building::kBuildKindFieldNumber;
const int building_t_building::kPremiseBuildFieldNumber;
const int building_t_building::kEffectPicFieldNumber;
const int building_t_building::kEffectRangeFieldNumber;
const int building_t_building::kGuestReduceFieldNumber;
const int building_t_building::kHappyIncreaseFieldNumber;
const int building_t_building::kSellTimeFieldNumber;
const int building_t_building::kPremiseLevelFieldNumber;
const int building_t_building::kPremiseBuild2FieldNumber;
const int building_t_building::kMerrinessFieldNumber;
const int building_t_building::kRequireGoldFieldNumber;
const int building_t_building::kRequireItemFieldNumber;
const int building_t_building::kRequireFieldNumber;
const int building_t_building::kRequireItem2FieldNumber;
const int building_t_building::kRequire2FieldNumber;
const int building_t_building::kRequireItem3FieldNumber;
const int building_t_building::kRequire3FieldNumber;
const int building_t_building::kRequireItem4FieldNumber;
const int building_t_building::kRequire4FieldNumber;
const int building_t_building::kProduceItemFieldNumber;
const int building_t_building::kProduceFieldNumber;
const int building_t_building::kProduceItem2FieldNumber;
const int building_t_building::kProduce2FieldNumber;
const int building_t_building::kProduceItem3FieldNumber;
const int building_t_building::kProduce3FieldNumber;
const int building_t_building::kTimeFieldNumber;
const int building_t_building::kFunctionDescribeFieldNumber;
const int building_t_building::kFunctionValuesFieldNumber;
const int building_t_building::kTypeFieldNumber;
const int building_t_building::kPersonRequireFieldNumber;
const int building_t_building::kIconPicFieldNumber;
const int building_t_building::kDescriptionFieldNumber;
#endif  // !_MSC_VER

building_t_building::building_t_building()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void building_t_building::InitAsDefaultInstance() {
}

building_t_building::building_t_building(const building_t_building& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void building_t_building::SharedCtor() {
  _cached_size_ = 0;
  tbxid_ = 0u;
  id_ = 0u;
  dependid_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0u;
  maxcap_ = 0u;
  guestproduce_ = 0u;
  buildgridinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  infotype_ = 0u;
  buildspineres_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  buildkind_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  premisebuild_ = 0u;
  effectpic_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  effectrange_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  guestreduce_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  happyincrease_ = 0u;
  selltime_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  premiselevel_ = 0u;
  premisebuild2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  merriness_ = 0u;
  requiregold_ = 0u;
  requireitem_ = 0u;
  require_ = 0u;
  requireitem2_ = 0u;
  require2_ = 0u;
  requireitem3_ = 0u;
  require3_ = 0u;
  requireitem4_ = 0u;
  require4_ = 0u;
  produceitem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  produce_ = 0u;
  produceitem2_ = 0u;
  produce2_ = 0u;
  produceitem3_ = 0u;
  produce3_ = 0u;
  time_ = 0u;
  functiondescribe_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  functionvalues_ = 0u;
  type_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  personrequire_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iconpic_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

building_t_building::~building_t_building() {
  SharedDtor();
}

void building_t_building::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (buildgridinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete buildgridinfo_;
  }
  if (buildspineres_ != &::google::protobuf::internal::kEmptyString) {
    delete buildspineres_;
  }
  if (buildkind_ != &::google::protobuf::internal::kEmptyString) {
    delete buildkind_;
  }
  if (effectpic_ != &::google::protobuf::internal::kEmptyString) {
    delete effectpic_;
  }
  if (effectrange_ != &::google::protobuf::internal::kEmptyString) {
    delete effectrange_;
  }
  if (guestreduce_ != &::google::protobuf::internal::kEmptyString) {
    delete guestreduce_;
  }
  if (selltime_ != &::google::protobuf::internal::kEmptyString) {
    delete selltime_;
  }
  if (premisebuild2_ != &::google::protobuf::internal::kEmptyString) {
    delete premisebuild2_;
  }
  if (produceitem_ != &::google::protobuf::internal::kEmptyString) {
    delete produceitem_;
  }
  if (functiondescribe_ != &::google::protobuf::internal::kEmptyString) {
    delete functiondescribe_;
  }
  if (type_ != &::google::protobuf::internal::kEmptyString) {
    delete type_;
  }
  if (personrequire_ != &::google::protobuf::internal::kEmptyString) {
    delete personrequire_;
  }
  if (iconpic_ != &::google::protobuf::internal::kEmptyString) {
    delete iconpic_;
  }
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (this != default_instance_) {
  }
}

void building_t_building::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* building_t_building::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return building_t_building_descriptor_;
}

const building_t_building& building_t_building::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_building_2eproto();
  return *default_instance_;
}

building_t_building* building_t_building::default_instance_ = NULL;

building_t_building* building_t_building::New() const {
  return new building_t_building;
}

void building_t_building::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tbxid_ = 0u;
    id_ = 0u;
    dependid_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    level_ = 0u;
    maxcap_ = 0u;
    guestproduce_ = 0u;
    if (has_buildgridinfo()) {
      if (buildgridinfo_ != &::google::protobuf::internal::kEmptyString) {
        buildgridinfo_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    infotype_ = 0u;
    if (has_buildspineres()) {
      if (buildspineres_ != &::google::protobuf::internal::kEmptyString) {
        buildspineres_->clear();
      }
    }
    if (has_buildkind()) {
      if (buildkind_ != &::google::protobuf::internal::kEmptyString) {
        buildkind_->clear();
      }
    }
    premisebuild_ = 0u;
    if (has_effectpic()) {
      if (effectpic_ != &::google::protobuf::internal::kEmptyString) {
        effectpic_->clear();
      }
    }
    if (has_effectrange()) {
      if (effectrange_ != &::google::protobuf::internal::kEmptyString) {
        effectrange_->clear();
      }
    }
    if (has_guestreduce()) {
      if (guestreduce_ != &::google::protobuf::internal::kEmptyString) {
        guestreduce_->clear();
      }
    }
    happyincrease_ = 0u;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (has_selltime()) {
      if (selltime_ != &::google::protobuf::internal::kEmptyString) {
        selltime_->clear();
      }
    }
    premiselevel_ = 0u;
    if (has_premisebuild2()) {
      if (premisebuild2_ != &::google::protobuf::internal::kEmptyString) {
        premisebuild2_->clear();
      }
    }
    merriness_ = 0u;
    requiregold_ = 0u;
    requireitem_ = 0u;
    require_ = 0u;
    requireitem2_ = 0u;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    require2_ = 0u;
    requireitem3_ = 0u;
    require3_ = 0u;
    requireitem4_ = 0u;
    require4_ = 0u;
    if (has_produceitem()) {
      if (produceitem_ != &::google::protobuf::internal::kEmptyString) {
        produceitem_->clear();
      }
    }
    produce_ = 0u;
    produceitem2_ = 0u;
  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    produce2_ = 0u;
    produceitem3_ = 0u;
    produce3_ = 0u;
    time_ = 0u;
    if (has_functiondescribe()) {
      if (functiondescribe_ != &::google::protobuf::internal::kEmptyString) {
        functiondescribe_->clear();
      }
    }
    functionvalues_ = 0u;
    if (has_type()) {
      if (type_ != &::google::protobuf::internal::kEmptyString) {
        type_->clear();
      }
    }
    if (has_personrequire()) {
      if (personrequire_ != &::google::protobuf::internal::kEmptyString) {
        personrequire_->clear();
      }
    }
  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (has_iconpic()) {
      if (iconpic_ != &::google::protobuf::internal::kEmptyString) {
        iconpic_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::kEmptyString) {
        description_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool building_t_building::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tbxid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbxid_)));
          set_has_tbxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_dependID;
        break;
      }

      // required uint32 dependID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dependID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dependid_)));
          set_has_dependid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_name;
        break;
      }

      // required string name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // required uint32 level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_MaxCap;
        break;
      }

      // required uint32 MaxCap = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_MaxCap:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxcap_)));
          set_has_maxcap();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_GuestProduce;
        break;
      }

      // required uint32 GuestProduce = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GuestProduce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guestproduce_)));
          set_has_guestproduce();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_buildGridInfo;
        break;
      }

      // required string buildGridInfo = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buildGridInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buildgridinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buildgridinfo().data(), this->buildgridinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_infoType;
        break;
      }

      // required uint32 infoType = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_infoType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &infotype_)));
          set_has_infotype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_buildSpineRes;
        break;
      }

      // required string buildSpineRes = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buildSpineRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buildspineres()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buildspineres().data(), this->buildspineres().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_buildKind;
        break;
      }

      // required string buildKind = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buildKind:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buildkind()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buildkind().data(), this->buildkind().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_premiseBuild;
        break;
      }

      // required uint32 premiseBuild = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_premiseBuild:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &premisebuild_)));
          set_has_premisebuild();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_effectPic;
        break;
      }

      // required string effectPic = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effectPic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectpic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effectpic().data(), this->effectpic().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_effectRange;
        break;
      }

      // required string effectRange = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effectRange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectrange()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effectrange().data(), this->effectrange().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_guestReduce;
        break;
      }

      // required string guestReduce = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_guestReduce:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guestreduce()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->guestreduce().data(), this->guestreduce().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_happyIncrease;
        break;
      }

      // required uint32 happyIncrease = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_happyIncrease:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &happyincrease_)));
          set_has_happyincrease();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_sellTime;
        break;
      }

      // required string sellTime = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sellTime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_selltime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->selltime().data(), this->selltime().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_premiseLevel;
        break;
      }

      // required uint32 premiseLevel = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_premiseLevel:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &premiselevel_)));
          set_has_premiselevel();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_premiseBuild2;
        break;
      }

      // required string premiseBuild2 = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_premiseBuild2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_premisebuild2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->premisebuild2().data(), this->premisebuild2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_merriness;
        break;
      }

      // required uint32 merriness = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_merriness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &merriness_)));
          set_has_merriness();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_requireGold;
        break;
      }

      // required uint32 requireGold = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requireGold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requiregold_)));
          set_has_requiregold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_requireItem;
        break;
      }

      // required uint32 requireItem = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requireItem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requireitem_)));
          set_has_requireitem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_require;
        break;
      }

      // required uint32 require = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_require:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &require_)));
          set_has_require();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_requireItem2;
        break;
      }

      // required uint32 requireItem2 = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requireItem2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requireitem2_)));
          set_has_requireitem2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_require2;
        break;
      }

      // required uint32 require2 = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_require2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &require2_)));
          set_has_require2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(208)) goto parse_requireItem3;
        break;
      }

      // required uint32 requireItem3 = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requireItem3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requireitem3_)));
          set_has_requireitem3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(216)) goto parse_require3;
        break;
      }

      // required uint32 require3 = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_require3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &require3_)));
          set_has_require3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(224)) goto parse_requireItem4;
        break;
      }

      // required uint32 requireItem4 = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requireItem4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requireitem4_)));
          set_has_requireitem4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(232)) goto parse_require4;
        break;
      }

      // required uint32 require4 = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_require4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &require4_)));
          set_has_require4();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_produceItem;
        break;
      }

      // required string produceItem = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_produceItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_produceitem()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->produceitem().data(), this->produceitem().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(248)) goto parse_produce;
        break;
      }

      // required uint32 produce = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_produce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &produce_)));
          set_has_produce();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(256)) goto parse_produceItem2;
        break;
      }

      // required uint32 produceItem2 = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_produceItem2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &produceitem2_)));
          set_has_produceitem2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(264)) goto parse_produce2;
        break;
      }

      // required uint32 produce2 = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_produce2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &produce2_)));
          set_has_produce2();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(272)) goto parse_produceItem3;
        break;
      }

      // required uint32 produceItem3 = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_produceItem3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &produceitem3_)));
          set_has_produceitem3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(280)) goto parse_produce3;
        break;
      }

      // required uint32 produce3 = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_produce3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &produce3_)));
          set_has_produce3();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(288)) goto parse_time;
        break;
      }

      // required uint32 time = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_functionDescribe;
        break;
      }

      // required string functionDescribe = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_functionDescribe:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_functiondescribe()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->functiondescribe().data(), this->functiondescribe().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(304)) goto parse_functionValues;
        break;
      }

      // required uint32 functionValues = 38;
      case 38: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_functionValues:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &functionvalues_)));
          set_has_functionvalues();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(314)) goto parse_type;
        break;
      }

      // required string type = 39;
      case 39: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(322)) goto parse_personRequire;
        break;
      }

      // required string personRequire = 40;
      case 40: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_personRequire:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_personrequire()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->personrequire().data(), this->personrequire().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(330)) goto parse_iconPic;
        break;
      }

      // required string iconPic = 41;
      case 41: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iconPic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconpic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iconpic().data(), this->iconpic().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(338)) goto parse_description;
        break;
      }

      // required string description = 42;
      case 42: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void building_t_building::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tbxid(), output);
  }

  // required uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // required uint32 dependID = 3;
  if (has_dependid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dependid(), output);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->name(), output);
  }

  // required uint32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // required uint32 MaxCap = 6;
  if (has_maxcap()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->maxcap(), output);
  }

  // required uint32 GuestProduce = 7;
  if (has_guestproduce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->guestproduce(), output);
  }

  // required string buildGridInfo = 8;
  if (has_buildgridinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildgridinfo().data(), this->buildgridinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->buildgridinfo(), output);
  }

  // required uint32 infoType = 9;
  if (has_infotype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->infotype(), output);
  }

  // required string buildSpineRes = 10;
  if (has_buildspineres()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildspineres().data(), this->buildspineres().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->buildspineres(), output);
  }

  // required string buildKind = 11;
  if (has_buildkind()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildkind().data(), this->buildkind().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->buildkind(), output);
  }

  // required uint32 premiseBuild = 12;
  if (has_premisebuild()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->premisebuild(), output);
  }

  // required string effectPic = 13;
  if (has_effectpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectpic().data(), this->effectpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->effectpic(), output);
  }

  // required string effectRange = 14;
  if (has_effectrange()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectrange().data(), this->effectrange().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->effectrange(), output);
  }

  // required string guestReduce = 15;
  if (has_guestreduce()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->guestreduce().data(), this->guestreduce().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->guestreduce(), output);
  }

  // required uint32 happyIncrease = 16;
  if (has_happyincrease()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->happyincrease(), output);
  }

  // required string sellTime = 17;
  if (has_selltime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->selltime().data(), this->selltime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      17, this->selltime(), output);
  }

  // required uint32 premiseLevel = 18;
  if (has_premiselevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->premiselevel(), output);
  }

  // required string premiseBuild2 = 19;
  if (has_premisebuild2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->premisebuild2().data(), this->premisebuild2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      19, this->premisebuild2(), output);
  }

  // required uint32 merriness = 20;
  if (has_merriness()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->merriness(), output);
  }

  // required uint32 requireGold = 21;
  if (has_requiregold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->requiregold(), output);
  }

  // required uint32 requireItem = 22;
  if (has_requireitem()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->requireitem(), output);
  }

  // required uint32 require = 23;
  if (has_require()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->require(), output);
  }

  // required uint32 requireItem2 = 24;
  if (has_requireitem2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->requireitem2(), output);
  }

  // required uint32 require2 = 25;
  if (has_require2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->require2(), output);
  }

  // required uint32 requireItem3 = 26;
  if (has_requireitem3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->requireitem3(), output);
  }

  // required uint32 require3 = 27;
  if (has_require3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->require3(), output);
  }

  // required uint32 requireItem4 = 28;
  if (has_requireitem4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->requireitem4(), output);
  }

  // required uint32 require4 = 29;
  if (has_require4()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(29, this->require4(), output);
  }

  // required string produceItem = 30;
  if (has_produceitem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->produceitem().data(), this->produceitem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->produceitem(), output);
  }

  // required uint32 produce = 31;
  if (has_produce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->produce(), output);
  }

  // required uint32 produceItem2 = 32;
  if (has_produceitem2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->produceitem2(), output);
  }

  // required uint32 produce2 = 33;
  if (has_produce2()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->produce2(), output);
  }

  // required uint32 produceItem3 = 34;
  if (has_produceitem3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->produceitem3(), output);
  }

  // required uint32 produce3 = 35;
  if (has_produce3()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->produce3(), output);
  }

  // required uint32 time = 36;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->time(), output);
  }

  // required string functionDescribe = 37;
  if (has_functiondescribe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->functiondescribe().data(), this->functiondescribe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      37, this->functiondescribe(), output);
  }

  // required uint32 functionValues = 38;
  if (has_functionvalues()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(38, this->functionvalues(), output);
  }

  // required string type = 39;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      39, this->type(), output);
  }

  // required string personRequire = 40;
  if (has_personrequire()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->personrequire().data(), this->personrequire().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      40, this->personrequire(), output);
  }

  // required string iconPic = 41;
  if (has_iconpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconpic().data(), this->iconpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      41, this->iconpic(), output);
  }

  // required string description = 42;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      42, this->description(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* building_t_building::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tbxid(), target);
  }

  // required uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // required uint32 dependID = 3;
  if (has_dependid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dependid(), target);
  }

  // required string name = 4;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // required uint32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // required uint32 MaxCap = 6;
  if (has_maxcap()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->maxcap(), target);
  }

  // required uint32 GuestProduce = 7;
  if (has_guestproduce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->guestproduce(), target);
  }

  // required string buildGridInfo = 8;
  if (has_buildgridinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildgridinfo().data(), this->buildgridinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->buildgridinfo(), target);
  }

  // required uint32 infoType = 9;
  if (has_infotype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->infotype(), target);
  }

  // required string buildSpineRes = 10;
  if (has_buildspineres()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildspineres().data(), this->buildspineres().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->buildspineres(), target);
  }

  // required string buildKind = 11;
  if (has_buildkind()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildkind().data(), this->buildkind().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->buildkind(), target);
  }

  // required uint32 premiseBuild = 12;
  if (has_premisebuild()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->premisebuild(), target);
  }

  // required string effectPic = 13;
  if (has_effectpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectpic().data(), this->effectpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->effectpic(), target);
  }

  // required string effectRange = 14;
  if (has_effectrange()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectrange().data(), this->effectrange().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->effectrange(), target);
  }

  // required string guestReduce = 15;
  if (has_guestreduce()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->guestreduce().data(), this->guestreduce().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->guestreduce(), target);
  }

  // required uint32 happyIncrease = 16;
  if (has_happyincrease()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->happyincrease(), target);
  }

  // required string sellTime = 17;
  if (has_selltime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->selltime().data(), this->selltime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->selltime(), target);
  }

  // required uint32 premiseLevel = 18;
  if (has_premiselevel()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->premiselevel(), target);
  }

  // required string premiseBuild2 = 19;
  if (has_premisebuild2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->premisebuild2().data(), this->premisebuild2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->premisebuild2(), target);
  }

  // required uint32 merriness = 20;
  if (has_merriness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->merriness(), target);
  }

  // required uint32 requireGold = 21;
  if (has_requiregold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->requiregold(), target);
  }

  // required uint32 requireItem = 22;
  if (has_requireitem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->requireitem(), target);
  }

  // required uint32 require = 23;
  if (has_require()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->require(), target);
  }

  // required uint32 requireItem2 = 24;
  if (has_requireitem2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->requireitem2(), target);
  }

  // required uint32 require2 = 25;
  if (has_require2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->require2(), target);
  }

  // required uint32 requireItem3 = 26;
  if (has_requireitem3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(26, this->requireitem3(), target);
  }

  // required uint32 require3 = 27;
  if (has_require3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(27, this->require3(), target);
  }

  // required uint32 requireItem4 = 28;
  if (has_requireitem4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(28, this->requireitem4(), target);
  }

  // required uint32 require4 = 29;
  if (has_require4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(29, this->require4(), target);
  }

  // required string produceItem = 30;
  if (has_produceitem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->produceitem().data(), this->produceitem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->produceitem(), target);
  }

  // required uint32 produce = 31;
  if (has_produce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(31, this->produce(), target);
  }

  // required uint32 produceItem2 = 32;
  if (has_produceitem2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(32, this->produceitem2(), target);
  }

  // required uint32 produce2 = 33;
  if (has_produce2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(33, this->produce2(), target);
  }

  // required uint32 produceItem3 = 34;
  if (has_produceitem3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(34, this->produceitem3(), target);
  }

  // required uint32 produce3 = 35;
  if (has_produce3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(35, this->produce3(), target);
  }

  // required uint32 time = 36;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(36, this->time(), target);
  }

  // required string functionDescribe = 37;
  if (has_functiondescribe()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->functiondescribe().data(), this->functiondescribe().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        37, this->functiondescribe(), target);
  }

  // required uint32 functionValues = 38;
  if (has_functionvalues()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(38, this->functionvalues(), target);
  }

  // required string type = 39;
  if (has_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        39, this->type(), target);
  }

  // required string personRequire = 40;
  if (has_personrequire()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->personrequire().data(), this->personrequire().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->personrequire(), target);
  }

  // required string iconPic = 41;
  if (has_iconpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconpic().data(), this->iconpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        41, this->iconpic(), target);
  }

  // required string description = 42;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        42, this->description(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int building_t_building::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tbxid = 1;
    if (has_tbxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tbxid());
    }

    // required uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 dependID = 3;
    if (has_dependid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dependid());
    }

    // required string name = 4;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required uint32 level = 5;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 MaxCap = 6;
    if (has_maxcap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxcap());
    }

    // required uint32 GuestProduce = 7;
    if (has_guestproduce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guestproduce());
    }

    // required string buildGridInfo = 8;
    if (has_buildgridinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buildgridinfo());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required uint32 infoType = 9;
    if (has_infotype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->infotype());
    }

    // required string buildSpineRes = 10;
    if (has_buildspineres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buildspineres());
    }

    // required string buildKind = 11;
    if (has_buildkind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buildkind());
    }

    // required uint32 premiseBuild = 12;
    if (has_premisebuild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->premisebuild());
    }

    // required string effectPic = 13;
    if (has_effectpic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectpic());
    }

    // required string effectRange = 14;
    if (has_effectrange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectrange());
    }

    // required string guestReduce = 15;
    if (has_guestreduce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->guestreduce());
    }

    // required uint32 happyIncrease = 16;
    if (has_happyincrease()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->happyincrease());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required string sellTime = 17;
    if (has_selltime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->selltime());
    }

    // required uint32 premiseLevel = 18;
    if (has_premiselevel()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->premiselevel());
    }

    // required string premiseBuild2 = 19;
    if (has_premisebuild2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->premisebuild2());
    }

    // required uint32 merriness = 20;
    if (has_merriness()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->merriness());
    }

    // required uint32 requireGold = 21;
    if (has_requiregold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requiregold());
    }

    // required uint32 requireItem = 22;
    if (has_requireitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requireitem());
    }

    // required uint32 require = 23;
    if (has_require()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->require());
    }

    // required uint32 requireItem2 = 24;
    if (has_requireitem2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requireitem2());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required uint32 require2 = 25;
    if (has_require2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->require2());
    }

    // required uint32 requireItem3 = 26;
    if (has_requireitem3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requireitem3());
    }

    // required uint32 require3 = 27;
    if (has_require3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->require3());
    }

    // required uint32 requireItem4 = 28;
    if (has_requireitem4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requireitem4());
    }

    // required uint32 require4 = 29;
    if (has_require4()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->require4());
    }

    // required string produceItem = 30;
    if (has_produceitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->produceitem());
    }

    // required uint32 produce = 31;
    if (has_produce()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->produce());
    }

    // required uint32 produceItem2 = 32;
    if (has_produceitem2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->produceitem2());
    }

  }
  if (_has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    // required uint32 produce2 = 33;
    if (has_produce2()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->produce2());
    }

    // required uint32 produceItem3 = 34;
    if (has_produceitem3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->produceitem3());
    }

    // required uint32 produce3 = 35;
    if (has_produce3()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->produce3());
    }

    // required uint32 time = 36;
    if (has_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

    // required string functionDescribe = 37;
    if (has_functiondescribe()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->functiondescribe());
    }

    // required uint32 functionValues = 38;
    if (has_functionvalues()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->functionvalues());
    }

    // required string type = 39;
    if (has_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type());
    }

    // required string personRequire = 40;
    if (has_personrequire()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->personrequire());
    }

  }
  if (_has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    // required string iconPic = 41;
    if (has_iconpic()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconpic());
    }

    // required string description = 42;
    if (has_description()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void building_t_building::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const building_t_building* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const building_t_building*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void building_t_building::MergeFrom(const building_t_building& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tbxid()) {
      set_tbxid(from.tbxid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_dependid()) {
      set_dependid(from.dependid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_maxcap()) {
      set_maxcap(from.maxcap());
    }
    if (from.has_guestproduce()) {
      set_guestproduce(from.guestproduce());
    }
    if (from.has_buildgridinfo()) {
      set_buildgridinfo(from.buildgridinfo());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_infotype()) {
      set_infotype(from.infotype());
    }
    if (from.has_buildspineres()) {
      set_buildspineres(from.buildspineres());
    }
    if (from.has_buildkind()) {
      set_buildkind(from.buildkind());
    }
    if (from.has_premisebuild()) {
      set_premisebuild(from.premisebuild());
    }
    if (from.has_effectpic()) {
      set_effectpic(from.effectpic());
    }
    if (from.has_effectrange()) {
      set_effectrange(from.effectrange());
    }
    if (from.has_guestreduce()) {
      set_guestreduce(from.guestreduce());
    }
    if (from.has_happyincrease()) {
      set_happyincrease(from.happyincrease());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_selltime()) {
      set_selltime(from.selltime());
    }
    if (from.has_premiselevel()) {
      set_premiselevel(from.premiselevel());
    }
    if (from.has_premisebuild2()) {
      set_premisebuild2(from.premisebuild2());
    }
    if (from.has_merriness()) {
      set_merriness(from.merriness());
    }
    if (from.has_requiregold()) {
      set_requiregold(from.requiregold());
    }
    if (from.has_requireitem()) {
      set_requireitem(from.requireitem());
    }
    if (from.has_require()) {
      set_require(from.require());
    }
    if (from.has_requireitem2()) {
      set_requireitem2(from.requireitem2());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_require2()) {
      set_require2(from.require2());
    }
    if (from.has_requireitem3()) {
      set_requireitem3(from.requireitem3());
    }
    if (from.has_require3()) {
      set_require3(from.require3());
    }
    if (from.has_requireitem4()) {
      set_requireitem4(from.requireitem4());
    }
    if (from.has_require4()) {
      set_require4(from.require4());
    }
    if (from.has_produceitem()) {
      set_produceitem(from.produceitem());
    }
    if (from.has_produce()) {
      set_produce(from.produce());
    }
    if (from.has_produceitem2()) {
      set_produceitem2(from.produceitem2());
    }
  }
  if (from._has_bits_[32 / 32] & (0xffu << (32 % 32))) {
    if (from.has_produce2()) {
      set_produce2(from.produce2());
    }
    if (from.has_produceitem3()) {
      set_produceitem3(from.produceitem3());
    }
    if (from.has_produce3()) {
      set_produce3(from.produce3());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_functiondescribe()) {
      set_functiondescribe(from.functiondescribe());
    }
    if (from.has_functionvalues()) {
      set_functionvalues(from.functionvalues());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_personrequire()) {
      set_personrequire(from.personrequire());
    }
  }
  if (from._has_bits_[40 / 32] & (0xffu << (40 % 32))) {
    if (from.has_iconpic()) {
      set_iconpic(from.iconpic());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void building_t_building::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void building_t_building::CopyFrom(const building_t_building& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool building_t_building::IsInitialized() const {
  if ((_has_bits_[0] & 0xffffffff) != 0xffffffff) return false;
  if ((_has_bits_[1] & 0x000003ff) != 0x000003ff) return false;

  return true;
}

void building_t_building::Swap(building_t_building* other) {
  if (other != this) {
    std::swap(tbxid_, other->tbxid_);
    std::swap(id_, other->id_);
    std::swap(dependid_, other->dependid_);
    std::swap(name_, other->name_);
    std::swap(level_, other->level_);
    std::swap(maxcap_, other->maxcap_);
    std::swap(guestproduce_, other->guestproduce_);
    std::swap(buildgridinfo_, other->buildgridinfo_);
    std::swap(infotype_, other->infotype_);
    std::swap(buildspineres_, other->buildspineres_);
    std::swap(buildkind_, other->buildkind_);
    std::swap(premisebuild_, other->premisebuild_);
    std::swap(effectpic_, other->effectpic_);
    std::swap(effectrange_, other->effectrange_);
    std::swap(guestreduce_, other->guestreduce_);
    std::swap(happyincrease_, other->happyincrease_);
    std::swap(selltime_, other->selltime_);
    std::swap(premiselevel_, other->premiselevel_);
    std::swap(premisebuild2_, other->premisebuild2_);
    std::swap(merriness_, other->merriness_);
    std::swap(requiregold_, other->requiregold_);
    std::swap(requireitem_, other->requireitem_);
    std::swap(require_, other->require_);
    std::swap(requireitem2_, other->requireitem2_);
    std::swap(require2_, other->require2_);
    std::swap(requireitem3_, other->requireitem3_);
    std::swap(require3_, other->require3_);
    std::swap(requireitem4_, other->requireitem4_);
    std::swap(require4_, other->require4_);
    std::swap(produceitem_, other->produceitem_);
    std::swap(produce_, other->produce_);
    std::swap(produceitem2_, other->produceitem2_);
    std::swap(produce2_, other->produce2_);
    std::swap(produceitem3_, other->produceitem3_);
    std::swap(produce3_, other->produce3_);
    std::swap(time_, other->time_);
    std::swap(functiondescribe_, other->functiondescribe_);
    std::swap(functionvalues_, other->functionvalues_);
    std::swap(type_, other->type_);
    std::swap(personrequire_, other->personrequire_);
    std::swap(iconpic_, other->iconpic_);
    std::swap(description_, other->description_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata building_t_building::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = building_t_building_descriptor_;
  metadata.reflection = building_t_building_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int building::kDatasFieldNumber;
#endif  // !_MSC_VER

building::building()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void building::InitAsDefaultInstance() {
}

building::building(const building& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void building::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

building::~building() {
  SharedDtor();
}

void building::SharedDtor() {
  if (this != default_instance_) {
  }
}

void building::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* building::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return building_descriptor_;
}

const building& building::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_building_2eproto();
  return *default_instance_;
}

building* building::default_instance_ = NULL;

building* building::New() const {
  return new building;
}

void building::Clear() {
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool building::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.building.t_building datas = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_datas;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void building::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .pb.building.t_building datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* building::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .pb.building.t_building datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int building::ByteSize() const {
  int total_size = 0;

  // repeated .pb.building.t_building datas = 1;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void building::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const building* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const building*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void building::MergeFrom(const building& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void building::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void building::CopyFrom(const building& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool building::IsInitialized() const {

  for (int i = 0; i < datas_size(); i++) {
    if (!this->datas(i).IsInitialized()) return false;
  }
  return true;
}

void building::Swap(building* other) {
  if (other != this) {
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata building::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = building_descriptor_;
  metadata.reflection = building_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int newRoleAttr_t_newRoleAttr::kTbxidFieldNumber;
const int newRoleAttr_t_newRoleAttr::kIdFieldNumber;
const int newRoleAttr_t_newRoleAttr::kInitBuildFieldNumber;
const int newRoleAttr_t_newRoleAttr::kGoldFieldNumber;
const int newRoleAttr_t_newRoleAttr::kGemFieldNumber;
const int newRoleAttr_t_newRoleAttr::kGuestFieldNumber;
#endif  // !_MSC_VER

newRoleAttr_t_newRoleAttr::newRoleAttr_t_newRoleAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void newRoleAttr_t_newRoleAttr::InitAsDefaultInstance() {
}

newRoleAttr_t_newRoleAttr::newRoleAttr_t_newRoleAttr(const newRoleAttr_t_newRoleAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void newRoleAttr_t_newRoleAttr::SharedCtor() {
  _cached_size_ = 0;
  tbxid_ = 0u;
  id_ = 0u;
  initbuild_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  gold_ = 0u;
  gem_ = 0u;
  guest_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

newRoleAttr_t_newRoleAttr::~newRoleAttr_t_newRoleAttr() {
  SharedDtor();
}

void newRoleAttr_t_newRoleAttr::SharedDtor() {
  if (initbuild_ != &::google::protobuf::internal::kEmptyString) {
    delete initbuild_;
  }
  if (this != default_instance_) {
  }
}

void newRoleAttr_t_newRoleAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* newRoleAttr_t_newRoleAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return newRoleAttr_t_newRoleAttr_descriptor_;
}

const newRoleAttr_t_newRoleAttr& newRoleAttr_t_newRoleAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_building_2eproto();
  return *default_instance_;
}

newRoleAttr_t_newRoleAttr* newRoleAttr_t_newRoleAttr::default_instance_ = NULL;

newRoleAttr_t_newRoleAttr* newRoleAttr_t_newRoleAttr::New() const {
  return new newRoleAttr_t_newRoleAttr;
}

void newRoleAttr_t_newRoleAttr::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tbxid_ = 0u;
    id_ = 0u;
    if (has_initbuild()) {
      if (initbuild_ != &::google::protobuf::internal::kEmptyString) {
        initbuild_->clear();
      }
    }
    gold_ = 0u;
    gem_ = 0u;
    guest_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool newRoleAttr_t_newRoleAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tbxid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbxid_)));
          set_has_tbxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_initBuild;
        break;
      }

      // required string initBuild = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_initBuild:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initbuild()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->initbuild().data(), this->initbuild().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_gold;
        break;
      }

      // required uint32 gold = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gold_)));
          set_has_gold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_gem;
        break;
      }

      // required uint32 gem = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_gem:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gem_)));
          set_has_gem();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_guest;
        break;
      }

      // required uint32 guest = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guest:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guest_)));
          set_has_guest();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void newRoleAttr_t_newRoleAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tbxid(), output);
  }

  // required uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // required string initBuild = 3;
  if (has_initbuild()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->initbuild().data(), this->initbuild().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->initbuild(), output);
  }

  // required uint32 gold = 4;
  if (has_gold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gold(), output);
  }

  // required uint32 gem = 5;
  if (has_gem()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gem(), output);
  }

  // required uint32 guest = 6;
  if (has_guest()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->guest(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* newRoleAttr_t_newRoleAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tbxid(), target);
  }

  // required uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // required string initBuild = 3;
  if (has_initbuild()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->initbuild().data(), this->initbuild().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->initbuild(), target);
  }

  // required uint32 gold = 4;
  if (has_gold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gold(), target);
  }

  // required uint32 gem = 5;
  if (has_gem()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gem(), target);
  }

  // required uint32 guest = 6;
  if (has_guest()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->guest(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int newRoleAttr_t_newRoleAttr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tbxid = 1;
    if (has_tbxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tbxid());
    }

    // required uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required string initBuild = 3;
    if (has_initbuild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initbuild());
    }

    // required uint32 gold = 4;
    if (has_gold()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gold());
    }

    // required uint32 gem = 5;
    if (has_gem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gem());
    }

    // required uint32 guest = 6;
    if (has_guest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guest());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void newRoleAttr_t_newRoleAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const newRoleAttr_t_newRoleAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const newRoleAttr_t_newRoleAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void newRoleAttr_t_newRoleAttr::MergeFrom(const newRoleAttr_t_newRoleAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tbxid()) {
      set_tbxid(from.tbxid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_initbuild()) {
      set_initbuild(from.initbuild());
    }
    if (from.has_gold()) {
      set_gold(from.gold());
    }
    if (from.has_gem()) {
      set_gem(from.gem());
    }
    if (from.has_guest()) {
      set_guest(from.guest());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void newRoleAttr_t_newRoleAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void newRoleAttr_t_newRoleAttr::CopyFrom(const newRoleAttr_t_newRoleAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool newRoleAttr_t_newRoleAttr::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;

  return true;
}

void newRoleAttr_t_newRoleAttr::Swap(newRoleAttr_t_newRoleAttr* other) {
  if (other != this) {
    std::swap(tbxid_, other->tbxid_);
    std::swap(id_, other->id_);
    std::swap(initbuild_, other->initbuild_);
    std::swap(gold_, other->gold_);
    std::swap(gem_, other->gem_);
    std::swap(guest_, other->guest_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata newRoleAttr_t_newRoleAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = newRoleAttr_t_newRoleAttr_descriptor_;
  metadata.reflection = newRoleAttr_t_newRoleAttr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int newRoleAttr::kDatasFieldNumber;
#endif  // !_MSC_VER

newRoleAttr::newRoleAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void newRoleAttr::InitAsDefaultInstance() {
}

newRoleAttr::newRoleAttr(const newRoleAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void newRoleAttr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

newRoleAttr::~newRoleAttr() {
  SharedDtor();
}

void newRoleAttr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void newRoleAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* newRoleAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return newRoleAttr_descriptor_;
}

const newRoleAttr& newRoleAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_building_2eproto();
  return *default_instance_;
}

newRoleAttr* newRoleAttr::default_instance_ = NULL;

newRoleAttr* newRoleAttr::New() const {
  return new newRoleAttr;
}

void newRoleAttr::Clear() {
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool newRoleAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.newRoleAttr.t_newRoleAttr datas = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_datas;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void newRoleAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .pb.newRoleAttr.t_newRoleAttr datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* newRoleAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .pb.newRoleAttr.t_newRoleAttr datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int newRoleAttr::ByteSize() const {
  int total_size = 0;

  // repeated .pb.newRoleAttr.t_newRoleAttr datas = 1;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void newRoleAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const newRoleAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const newRoleAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void newRoleAttr::MergeFrom(const newRoleAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void newRoleAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void newRoleAttr::CopyFrom(const newRoleAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool newRoleAttr::IsInitialized() const {

  for (int i = 0; i < datas_size(); i++) {
    if (!this->datas(i).IsInitialized()) return false;
  }
  return true;
}

void newRoleAttr::Swap(newRoleAttr* other) {
  if (other != this) {
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata newRoleAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = newRoleAttr_descriptor_;
  metadata.reflection = newRoleAttr_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
