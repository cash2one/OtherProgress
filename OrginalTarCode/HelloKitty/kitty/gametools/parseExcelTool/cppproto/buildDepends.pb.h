// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: buildDepends.proto

#ifndef PROTOBUF_buildDepends_2eproto__INCLUDED
#define PROTOBUF_buildDepends_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_buildDepends_2eproto();
void protobuf_AssignDesc_buildDepends_2eproto();
void protobuf_ShutdownFile_buildDepends_2eproto();

class buildDepends;
class buildDepends_t_buildDepends;

// ===================================================================

class buildDepends_t_buildDepends : public ::google::protobuf::Message {
 public:
  buildDepends_t_buildDepends();
  virtual ~buildDepends_t_buildDepends();

  buildDepends_t_buildDepends(const buildDepends_t_buildDepends& from);

  inline buildDepends_t_buildDepends& operator=(const buildDepends_t_buildDepends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buildDepends_t_buildDepends& default_instance();

  void Swap(buildDepends_t_buildDepends* other);

  // implements Message ----------------------------------------------

  buildDepends_t_buildDepends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buildDepends_t_buildDepends& from);
  void MergeFrom(const buildDepends_t_buildDepends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tbxid = 1;
  inline bool has_tbxid() const;
  inline void clear_tbxid();
  static const int kTbxidFieldNumber = 1;
  inline ::google::protobuf::uint32 tbxid() const;
  inline void set_tbxid(::google::protobuf::uint32 value);

  // required string id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // required string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string info = 4;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 4;
  inline const ::std::string& info() const;
  inline void set_info(const ::std::string& value);
  inline void set_info(const char* value);
  inline void set_info(const char* value, size_t size);
  inline ::std::string* mutable_info();
  inline ::std::string* release_info();
  inline void set_allocated_info(::std::string* info);

  // @@protoc_insertion_point(class_scope:pb.buildDepends.t_buildDepends)
 private:
  inline void set_has_tbxid();
  inline void clear_has_tbxid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;
  ::std::string* name_;
  ::std::string* info_;
  ::google::protobuf::uint32 tbxid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_buildDepends_2eproto();
  friend void protobuf_AssignDesc_buildDepends_2eproto();
  friend void protobuf_ShutdownFile_buildDepends_2eproto();

  void InitAsDefaultInstance();
  static buildDepends_t_buildDepends* default_instance_;
};
// -------------------------------------------------------------------

class buildDepends : public ::google::protobuf::Message {
 public:
  buildDepends();
  virtual ~buildDepends();

  buildDepends(const buildDepends& from);

  inline buildDepends& operator=(const buildDepends& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buildDepends& default_instance();

  void Swap(buildDepends* other);

  // implements Message ----------------------------------------------

  buildDepends* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buildDepends& from);
  void MergeFrom(const buildDepends& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef buildDepends_t_buildDepends t_buildDepends;

  // accessors -------------------------------------------------------

  // repeated .pb.buildDepends.t_buildDepends datas = 1;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 1;
  inline const ::pb::buildDepends_t_buildDepends& datas(int index) const;
  inline ::pb::buildDepends_t_buildDepends* mutable_datas(int index);
  inline ::pb::buildDepends_t_buildDepends* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::buildDepends_t_buildDepends >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::buildDepends_t_buildDepends >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:pb.buildDepends)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::buildDepends_t_buildDepends > datas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_buildDepends_2eproto();
  friend void protobuf_AssignDesc_buildDepends_2eproto();
  friend void protobuf_ShutdownFile_buildDepends_2eproto();

  void InitAsDefaultInstance();
  static buildDepends* default_instance_;
};
// ===================================================================


// ===================================================================

// buildDepends_t_buildDepends

// required uint32 tbxid = 1;
inline bool buildDepends_t_buildDepends::has_tbxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void buildDepends_t_buildDepends::set_has_tbxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void buildDepends_t_buildDepends::clear_has_tbxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void buildDepends_t_buildDepends::clear_tbxid() {
  tbxid_ = 0u;
  clear_has_tbxid();
}
inline ::google::protobuf::uint32 buildDepends_t_buildDepends::tbxid() const {
  return tbxid_;
}
inline void buildDepends_t_buildDepends::set_tbxid(::google::protobuf::uint32 value) {
  set_has_tbxid();
  tbxid_ = value;
}

// required string id = 2;
inline bool buildDepends_t_buildDepends::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void buildDepends_t_buildDepends::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void buildDepends_t_buildDepends::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void buildDepends_t_buildDepends::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& buildDepends_t_buildDepends::id() const {
  return *id_;
}
inline void buildDepends_t_buildDepends::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void buildDepends_t_buildDepends::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void buildDepends_t_buildDepends::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* buildDepends_t_buildDepends::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* buildDepends_t_buildDepends::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void buildDepends_t_buildDepends::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string name = 3;
inline bool buildDepends_t_buildDepends::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void buildDepends_t_buildDepends::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void buildDepends_t_buildDepends::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void buildDepends_t_buildDepends::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& buildDepends_t_buildDepends::name() const {
  return *name_;
}
inline void buildDepends_t_buildDepends::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void buildDepends_t_buildDepends::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void buildDepends_t_buildDepends::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* buildDepends_t_buildDepends::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* buildDepends_t_buildDepends::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void buildDepends_t_buildDepends::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string info = 4;
inline bool buildDepends_t_buildDepends::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void buildDepends_t_buildDepends::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void buildDepends_t_buildDepends::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void buildDepends_t_buildDepends::clear_info() {
  if (info_ != &::google::protobuf::internal::kEmptyString) {
    info_->clear();
  }
  clear_has_info();
}
inline const ::std::string& buildDepends_t_buildDepends::info() const {
  return *info_;
}
inline void buildDepends_t_buildDepends::set_info(const ::std::string& value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void buildDepends_t_buildDepends::set_info(const char* value) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(value);
}
inline void buildDepends_t_buildDepends::set_info(const char* value, size_t size) {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  info_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* buildDepends_t_buildDepends::mutable_info() {
  set_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    info_ = new ::std::string;
  }
  return info_;
}
inline ::std::string* buildDepends_t_buildDepends::release_info() {
  clear_has_info();
  if (info_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = info_;
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void buildDepends_t_buildDepends::set_allocated_info(::std::string* info) {
  if (info_ != &::google::protobuf::internal::kEmptyString) {
    delete info_;
  }
  if (info) {
    set_has_info();
    info_ = info;
  } else {
    clear_has_info();
    info_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// buildDepends

// repeated .pb.buildDepends.t_buildDepends datas = 1;
inline int buildDepends::datas_size() const {
  return datas_.size();
}
inline void buildDepends::clear_datas() {
  datas_.Clear();
}
inline const ::pb::buildDepends_t_buildDepends& buildDepends::datas(int index) const {
  return datas_.Get(index);
}
inline ::pb::buildDepends_t_buildDepends* buildDepends::mutable_datas(int index) {
  return datas_.Mutable(index);
}
inline ::pb::buildDepends_t_buildDepends* buildDepends::add_datas() {
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::buildDepends_t_buildDepends >&
buildDepends::datas() const {
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::buildDepends_t_buildDepends >*
buildDepends::mutable_datas() {
  return &datas_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_buildDepends_2eproto__INCLUDED
