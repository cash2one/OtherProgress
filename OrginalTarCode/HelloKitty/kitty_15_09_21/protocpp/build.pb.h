// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: build.proto

#ifndef PROTOBUF_build_2eproto__INCLUDED
#define PROTOBUF_build_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_build_2eproto();
void protobuf_AssignDesc_build_2eproto();
void protobuf_ShutdownFile_build_2eproto();

class Point;
class WareHouseBuildBase;
class BuildBase;
class ReqAllBuild;
class AckFlushAllBuild;
class ReqOneBuild;
class AckFlushOneBuild;
class ReqBuildUpGrade;
class ReqBuildMovePlace;
class ReqBuildBuilding;
class ReqBuildRoad;
class ReqClearRoad;
class AckBuildOpReturnSuccess;
class AckBuildOpReturnFail;
class ReqPickUpBuid;
class AckRemoveBuid;
class ReqPickOutBuid;
class ReqClickRewardBuid;
class Worker;
class ReqWorker;
class AckUpdateWorker;
class AckWorker;
class ReqResetWorker;
class ReqRecycleItem;
class ProduceBase;
class ReqBuildProduce;
class BuildProduce;
class AckBuildProduce;
class AckUpdateRubbish;
class BufferData;
class BufferInfo;
class AckUpdateBuffer;

enum BuildStatueType {
  Build_Status_Normal = 1,
  Build_Status_Wait_Click = 2,
  Build_Status_Stop = 4
};
bool BuildStatueType_IsValid(int value);
const BuildStatueType BuildStatueType_MIN = Build_Status_Normal;
const BuildStatueType BuildStatueType_MAX = Build_Status_Stop;
const int BuildStatueType_ARRAYSIZE = BuildStatueType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildStatueType_descriptor();
inline const ::std::string& BuildStatueType_Name(BuildStatueType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildStatueType_descriptor(), value);
}
inline bool BuildStatueType_Parse(
    const ::std::string& name, BuildStatueType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildStatueType>(
    BuildStatueType_descriptor(), name, value);
}
enum BuildSuccessCodeType {
  Build_Up_Grade = 0,
  Build_Move = 1,
  Build_Building = 2,
  Build_Rotation = 3
};
bool BuildSuccessCodeType_IsValid(int value);
const BuildSuccessCodeType BuildSuccessCodeType_MIN = Build_Up_Grade;
const BuildSuccessCodeType BuildSuccessCodeType_MAX = Build_Rotation;
const int BuildSuccessCodeType_ARRAYSIZE = BuildSuccessCodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildSuccessCodeType_descriptor();
inline const ::std::string& BuildSuccessCodeType_Name(BuildSuccessCodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildSuccessCodeType_descriptor(), value);
}
inline bool BuildSuccessCodeType_Parse(
    const ::std::string& name, BuildSuccessCodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildSuccessCodeType>(
    BuildSuccessCodeType_descriptor(), name, value);
}
enum BuildFailCodeType {
  Build_Occcupy = 0,
  Build_Premise_Limit = 1,
  Build_Error = 2,
  Build_Full_Level = 3,
  Build_Type_Enough = 4
};
bool BuildFailCodeType_IsValid(int value);
const BuildFailCodeType BuildFailCodeType_MIN = Build_Occcupy;
const BuildFailCodeType BuildFailCodeType_MAX = Build_Type_Enough;
const int BuildFailCodeType_ARRAYSIZE = BuildFailCodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BuildFailCodeType_descriptor();
inline const ::std::string& BuildFailCodeType_Name(BuildFailCodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BuildFailCodeType_descriptor(), value);
}
inline bool BuildFailCodeType_Parse(
    const ::std::string& name, BuildFailCodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BuildFailCodeType>(
    BuildFailCodeType_descriptor(), name, value);
}
enum BufferSrcType {
  BST_Item = 0,
  BST_Build = 1,
  BST_Divine = 2
};
bool BufferSrcType_IsValid(int value);
const BufferSrcType BufferSrcType_MIN = BST_Item;
const BufferSrcType BufferSrcType_MAX = BST_Divine;
const int BufferSrcType_ARRAYSIZE = BufferSrcType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BufferSrcType_descriptor();
inline const ::std::string& BufferSrcType_Name(BufferSrcType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BufferSrcType_descriptor(), value);
}
inline bool BufferSrcType_Parse(
    const ::std::string& name, BufferSrcType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BufferSrcType>(
    BufferSrcType_descriptor(), name, value);
}
// ===================================================================

class Point : public ::google::protobuf::Message {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  Point* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline ::google::protobuf::int32 x() const;
  inline void set_x(::google::protobuf::int32 value);

  // required int32 y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline ::google::protobuf::int32 y() const;
  inline void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.Point)
 private:
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static Point* default_instance_;
};
// -------------------------------------------------------------------

class WareHouseBuildBase : public ::google::protobuf::Message {
 public:
  WareHouseBuildBase();
  virtual ~WareHouseBuildBase();

  WareHouseBuildBase(const WareHouseBuildBase& from);

  inline WareHouseBuildBase& operator=(const WareHouseBuildBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WareHouseBuildBase& default_instance();

  void Swap(WareHouseBuildBase* other);

  // implements Message ----------------------------------------------

  WareHouseBuildBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WareHouseBuildBase& from);
  void MergeFrom(const WareHouseBuildBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellid = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellidFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 producetime = 5;
  inline bool has_producetime() const;
  inline void clear_producetime();
  static const int kProducetimeFieldNumber = 5;
  inline ::google::protobuf::uint32 producetime() const;
  inline void set_producetime(::google::protobuf::uint32 value);

  // required uint32 durtime = 6;
  inline bool has_durtime() const;
  inline void clear_durtime();
  static const int kDurtimeFieldNumber = 6;
  inline ::google::protobuf::uint32 durtime() const;
  inline void set_durtime(::google::protobuf::uint32 value);

  // required uint32 num = 7;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 7;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.WareHouseBuildBase)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_producetime();
  inline void clear_has_producetime();
  inline void set_has_durtime();
  inline void clear_has_durtime();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 cellid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 producetime_;
  ::google::protobuf::uint32 durtime_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static WareHouseBuildBase* default_instance_;
};
// -------------------------------------------------------------------

class BuildBase : public ::google::protobuf::Message {
 public:
  BuildBase();
  virtual ~BuildBase();

  BuildBase(const BuildBase& from);

  inline BuildBase& operator=(const BuildBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildBase& default_instance();

  void Swap(BuildBase* other);

  // implements Message ----------------------------------------------

  BuildBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildBase& from);
  void MergeFrom(const BuildBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.Point point = 4;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 4;
  inline const ::HelloKittyMsgData::Point& point() const;
  inline ::HelloKittyMsgData::Point* mutable_point();
  inline ::HelloKittyMsgData::Point* release_point();
  inline void set_allocated_point(::HelloKittyMsgData::Point* point);

  // required uint32 status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // required uint32 durtime = 6;
  inline bool has_durtime() const;
  inline void clear_durtime();
  static const int kDurtimeFieldNumber = 6;
  inline ::google::protobuf::uint32 durtime() const;
  inline void set_durtime(::google::protobuf::uint32 value);

  // required uint32 producetime = 7;
  inline bool has_producetime() const;
  inline void clear_producetime();
  static const int kProducetimeFieldNumber = 7;
  inline ::google::protobuf::uint32 producetime() const;
  inline void set_producetime(::google::protobuf::uint32 value);

  // required bool rotationmark = 8 [default = false];
  inline bool has_rotationmark() const;
  inline void clear_rotationmark();
  static const int kRotationmarkFieldNumber = 8;
  inline bool rotationmark() const;
  inline void set_rotationmark(bool value);

  // required bool active = 9 [default = false];
  inline bool has_active() const;
  inline void clear_active();
  static const int kActiveFieldNumber = 9;
  inline bool active() const;
  inline void set_active(bool value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.BuildBase)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_durtime();
  inline void clear_has_durtime();
  inline void set_has_producetime();
  inline void clear_has_producetime();
  inline void set_has_rotationmark();
  inline void clear_has_rotationmark();
  inline void set_has_active();
  inline void clear_has_active();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 level_;
  ::HelloKittyMsgData::Point* point_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 durtime_;
  ::google::protobuf::uint32 producetime_;
  bool rotationmark_;
  bool active_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static BuildBase* default_instance_;
};
// -------------------------------------------------------------------

class ReqAllBuild : public ::google::protobuf::Message {
 public:
  ReqAllBuild();
  virtual ~ReqAllBuild();

  ReqAllBuild(const ReqAllBuild& from);

  inline ReqAllBuild& operator=(const ReqAllBuild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAllBuild& default_instance();

  void Swap(ReqAllBuild* other);

  // implements Message ----------------------------------------------

  ReqAllBuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAllBuild& from);
  void MergeFrom(const ReqAllBuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqAllBuild)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqAllBuild* default_instance_;
};
// -------------------------------------------------------------------

class AckFlushAllBuild : public ::google::protobuf::Message {
 public:
  AckFlushAllBuild();
  virtual ~AckFlushAllBuild();

  AckFlushAllBuild(const AckFlushAllBuild& from);

  inline AckFlushAllBuild& operator=(const AckFlushAllBuild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckFlushAllBuild& default_instance();

  void Swap(AckFlushAllBuild* other);

  // implements Message ----------------------------------------------

  AckFlushAllBuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckFlushAllBuild& from);
  void MergeFrom(const AckFlushAllBuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HelloKittyMsgData.BuildBase buildinfo = 1;
  inline int buildinfo_size() const;
  inline void clear_buildinfo();
  static const int kBuildinfoFieldNumber = 1;
  inline const ::HelloKittyMsgData::BuildBase& buildinfo(int index) const;
  inline ::HelloKittyMsgData::BuildBase* mutable_buildinfo(int index);
  inline ::HelloKittyMsgData::BuildBase* add_buildinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase >&
      buildinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase >*
      mutable_buildinfo();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckFlushAllBuild)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase > buildinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckFlushAllBuild* default_instance_;
};
// -------------------------------------------------------------------

class ReqOneBuild : public ::google::protobuf::Message {
 public:
  ReqOneBuild();
  virtual ~ReqOneBuild();

  ReqOneBuild(const ReqOneBuild& from);

  inline ReqOneBuild& operator=(const ReqOneBuild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqOneBuild& default_instance();

  void Swap(ReqOneBuild* other);

  // implements Message ----------------------------------------------

  ReqOneBuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqOneBuild& from);
  void MergeFrom(const ReqOneBuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqOneBuild)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqOneBuild* default_instance_;
};
// -------------------------------------------------------------------

class AckFlushOneBuild : public ::google::protobuf::Message {
 public:
  AckFlushOneBuild();
  virtual ~AckFlushOneBuild();

  AckFlushOneBuild(const AckFlushOneBuild& from);

  inline AckFlushOneBuild& operator=(const AckFlushOneBuild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckFlushOneBuild& default_instance();

  void Swap(AckFlushOneBuild* other);

  // implements Message ----------------------------------------------

  AckFlushOneBuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckFlushOneBuild& from);
  void MergeFrom(const AckFlushOneBuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 updatecharid = 1;
  inline bool has_updatecharid() const;
  inline void clear_updatecharid();
  static const int kUpdatecharidFieldNumber = 1;
  inline ::google::protobuf::uint64 updatecharid() const;
  inline void set_updatecharid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.BuildBase buildinfo = 2;
  inline bool has_buildinfo() const;
  inline void clear_buildinfo();
  static const int kBuildinfoFieldNumber = 2;
  inline const ::HelloKittyMsgData::BuildBase& buildinfo() const;
  inline ::HelloKittyMsgData::BuildBase* mutable_buildinfo();
  inline ::HelloKittyMsgData::BuildBase* release_buildinfo();
  inline void set_allocated_buildinfo(::HelloKittyMsgData::BuildBase* buildinfo);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckFlushOneBuild)
 private:
  inline void set_has_updatecharid();
  inline void clear_has_updatecharid();
  inline void set_has_buildinfo();
  inline void clear_has_buildinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 updatecharid_;
  ::HelloKittyMsgData::BuildBase* buildinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckFlushOneBuild* default_instance_;
};
// -------------------------------------------------------------------

class ReqBuildUpGrade : public ::google::protobuf::Message {
 public:
  ReqBuildUpGrade();
  virtual ~ReqBuildUpGrade();

  ReqBuildUpGrade(const ReqBuildUpGrade& from);

  inline ReqBuildUpGrade& operator=(const ReqBuildUpGrade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuildUpGrade& default_instance();

  void Swap(ReqBuildUpGrade* other);

  // implements Message ----------------------------------------------

  ReqBuildUpGrade* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuildUpGrade& from);
  void MergeFrom(const ReqBuildUpGrade& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqBuildUpGrade)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqBuildUpGrade* default_instance_;
};
// -------------------------------------------------------------------

class ReqBuildMovePlace : public ::google::protobuf::Message {
 public:
  ReqBuildMovePlace();
  virtual ~ReqBuildMovePlace();

  ReqBuildMovePlace(const ReqBuildMovePlace& from);

  inline ReqBuildMovePlace& operator=(const ReqBuildMovePlace& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuildMovePlace& default_instance();

  void Swap(ReqBuildMovePlace* other);

  // implements Message ----------------------------------------------

  ReqBuildMovePlace* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuildMovePlace& from);
  void MergeFrom(const ReqBuildMovePlace& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.Point point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline const ::HelloKittyMsgData::Point& point() const;
  inline ::HelloKittyMsgData::Point* mutable_point();
  inline ::HelloKittyMsgData::Point* release_point();
  inline void set_allocated_point(::HelloKittyMsgData::Point* point);

  // required bool moveflg = 3 [default = true];
  inline bool has_moveflg() const;
  inline void clear_moveflg();
  static const int kMoveflgFieldNumber = 3;
  inline bool moveflg() const;
  inline void set_moveflg(bool value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqBuildMovePlace)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_moveflg();
  inline void clear_has_moveflg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  ::HelloKittyMsgData::Point* point_;
  bool moveflg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqBuildMovePlace* default_instance_;
};
// -------------------------------------------------------------------

class ReqBuildBuilding : public ::google::protobuf::Message {
 public:
  ReqBuildBuilding();
  virtual ~ReqBuildBuilding();

  ReqBuildBuilding(const ReqBuildBuilding& from);

  inline ReqBuildBuilding& operator=(const ReqBuildBuilding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuildBuilding& default_instance();

  void Swap(ReqBuildBuilding* other);

  // implements Message ----------------------------------------------

  ReqBuildBuilding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuildBuilding& from);
  void MergeFrom(const ReqBuildBuilding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.Point point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline const ::HelloKittyMsgData::Point& point() const;
  inline ::HelloKittyMsgData::Point* mutable_point();
  inline ::HelloKittyMsgData::Point* release_point();
  inline void set_allocated_point(::HelloKittyMsgData::Point* point);

  // required bool moveflg = 3 [default = true];
  inline bool has_moveflg() const;
  inline void clear_moveflg();
  static const int kMoveflgFieldNumber = 3;
  inline bool moveflg() const;
  inline void set_moveflg(bool value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqBuildBuilding)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_moveflg();
  inline void clear_has_moveflg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::Point* point_;
  ::google::protobuf::uint32 type_;
  bool moveflg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqBuildBuilding* default_instance_;
};
// -------------------------------------------------------------------

class ReqBuildRoad : public ::google::protobuf::Message {
 public:
  ReqBuildRoad();
  virtual ~ReqBuildRoad();

  ReqBuildRoad(const ReqBuildRoad& from);

  inline ReqBuildRoad& operator=(const ReqBuildRoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuildRoad& default_instance();

  void Swap(ReqBuildRoad* other);

  // implements Message ----------------------------------------------

  ReqBuildRoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuildRoad& from);
  void MergeFrom(const ReqBuildRoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated .HelloKittyMsgData.Point point = 2;
  inline int point_size() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline const ::HelloKittyMsgData::Point& point(int index) const;
  inline ::HelloKittyMsgData::Point* mutable_point(int index);
  inline ::HelloKittyMsgData::Point* add_point();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Point >&
      point() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Point >*
      mutable_point();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqBuildRoad)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Point > point_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqBuildRoad* default_instance_;
};
// -------------------------------------------------------------------

class ReqClearRoad : public ::google::protobuf::Message {
 public:
  ReqClearRoad();
  virtual ~ReqClearRoad();

  ReqClearRoad(const ReqClearRoad& from);

  inline ReqClearRoad& operator=(const ReqClearRoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqClearRoad& default_instance();

  void Swap(ReqClearRoad* other);

  // implements Message ----------------------------------------------

  ReqClearRoad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqClearRoad& from);
  void MergeFrom(const ReqClearRoad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 tempid = 1;
  inline int tempid_size() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid(int index) const;
  inline void set_tempid(int index, ::google::protobuf::uint64 value);
  inline void add_tempid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      tempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_tempid();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqClearRoad)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > tempid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqClearRoad* default_instance_;
};
// -------------------------------------------------------------------

class AckBuildOpReturnSuccess : public ::google::protobuf::Message {
 public:
  AckBuildOpReturnSuccess();
  virtual ~AckBuildOpReturnSuccess();

  AckBuildOpReturnSuccess(const AckBuildOpReturnSuccess& from);

  inline AckBuildOpReturnSuccess& operator=(const AckBuildOpReturnSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBuildOpReturnSuccess& default_instance();

  void Swap(AckBuildOpReturnSuccess* other);

  // implements Message ----------------------------------------------

  AckBuildOpReturnSuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBuildOpReturnSuccess& from);
  void MergeFrom(const AckBuildOpReturnSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 updatecharid = 1;
  inline bool has_updatecharid() const;
  inline void clear_updatecharid();
  static const int kUpdatecharidFieldNumber = 1;
  inline ::google::protobuf::uint64 updatecharid() const;
  inline void set_updatecharid(::google::protobuf::uint64 value);

  // required uint64 tempid = 2;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 2;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.BuildSuccessCodeType code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline ::HelloKittyMsgData::BuildSuccessCodeType code() const;
  inline void set_code(::HelloKittyMsgData::BuildSuccessCodeType value);

  // required .HelloKittyMsgData.BuildBase buildinfo = 4;
  inline bool has_buildinfo() const;
  inline void clear_buildinfo();
  static const int kBuildinfoFieldNumber = 4;
  inline const ::HelloKittyMsgData::BuildBase& buildinfo() const;
  inline ::HelloKittyMsgData::BuildBase* mutable_buildinfo();
  inline ::HelloKittyMsgData::BuildBase* release_buildinfo();
  inline void set_allocated_buildinfo(::HelloKittyMsgData::BuildBase* buildinfo);

  // required .HelloKittyMsgData.Point oldpoint = 5;
  inline bool has_oldpoint() const;
  inline void clear_oldpoint();
  static const int kOldpointFieldNumber = 5;
  inline const ::HelloKittyMsgData::Point& oldpoint() const;
  inline ::HelloKittyMsgData::Point* mutable_oldpoint();
  inline ::HelloKittyMsgData::Point* release_oldpoint();
  inline void set_allocated_oldpoint(::HelloKittyMsgData::Point* oldpoint);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckBuildOpReturnSuccess)
 private:
  inline void set_has_updatecharid();
  inline void clear_has_updatecharid();
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_buildinfo();
  inline void clear_has_buildinfo();
  inline void set_has_oldpoint();
  inline void clear_has_oldpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 updatecharid_;
  ::google::protobuf::uint64 tempid_;
  ::HelloKittyMsgData::BuildBase* buildinfo_;
  ::HelloKittyMsgData::Point* oldpoint_;
  int code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckBuildOpReturnSuccess* default_instance_;
};
// -------------------------------------------------------------------

class AckBuildOpReturnFail : public ::google::protobuf::Message {
 public:
  AckBuildOpReturnFail();
  virtual ~AckBuildOpReturnFail();

  AckBuildOpReturnFail(const AckBuildOpReturnFail& from);

  inline AckBuildOpReturnFail& operator=(const AckBuildOpReturnFail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBuildOpReturnFail& default_instance();

  void Swap(AckBuildOpReturnFail* other);

  // implements Message ----------------------------------------------

  AckBuildOpReturnFail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBuildOpReturnFail& from);
  void MergeFrom(const AckBuildOpReturnFail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.ErrorCodeType commoncode = 2;
  inline bool has_commoncode() const;
  inline void clear_commoncode();
  static const int kCommoncodeFieldNumber = 2;
  inline ::HelloKittyMsgData::ErrorCodeType commoncode() const;
  inline void set_commoncode(::HelloKittyMsgData::ErrorCodeType value);

  // required .HelloKittyMsgData.BuildFailCodeType code = 3;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 3;
  inline ::HelloKittyMsgData::BuildFailCodeType code() const;
  inline void set_code(::HelloKittyMsgData::BuildFailCodeType value);

  // required .HelloKittyMsgData.BuildBase buildinfo = 4;
  inline bool has_buildinfo() const;
  inline void clear_buildinfo();
  static const int kBuildinfoFieldNumber = 4;
  inline const ::HelloKittyMsgData::BuildBase& buildinfo() const;
  inline ::HelloKittyMsgData::BuildBase* mutable_buildinfo();
  inline ::HelloKittyMsgData::BuildBase* release_buildinfo();
  inline void set_allocated_buildinfo(::HelloKittyMsgData::BuildBase* buildinfo);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckBuildOpReturnFail)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_commoncode();
  inline void clear_has_commoncode();
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_buildinfo();
  inline void clear_has_buildinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  int commoncode_;
  int code_;
  ::HelloKittyMsgData::BuildBase* buildinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckBuildOpReturnFail* default_instance_;
};
// -------------------------------------------------------------------

class ReqPickUpBuid : public ::google::protobuf::Message {
 public:
  ReqPickUpBuid();
  virtual ~ReqPickUpBuid();

  ReqPickUpBuid(const ReqPickUpBuid& from);

  inline ReqPickUpBuid& operator=(const ReqPickUpBuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPickUpBuid& default_instance();

  void Swap(ReqPickUpBuid* other);

  // implements Message ----------------------------------------------

  ReqPickUpBuid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPickUpBuid& from);
  void MergeFrom(const ReqPickUpBuid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqPickUpBuid)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqPickUpBuid* default_instance_;
};
// -------------------------------------------------------------------

class AckRemoveBuid : public ::google::protobuf::Message {
 public:
  AckRemoveBuid();
  virtual ~AckRemoveBuid();

  AckRemoveBuid(const AckRemoveBuid& from);

  inline AckRemoveBuid& operator=(const AckRemoveBuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckRemoveBuid& default_instance();

  void Swap(AckRemoveBuid* other);

  // implements Message ----------------------------------------------

  AckRemoveBuid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckRemoveBuid& from);
  void MergeFrom(const AckRemoveBuid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 updatecharid = 1;
  inline bool has_updatecharid() const;
  inline void clear_updatecharid();
  static const int kUpdatecharidFieldNumber = 1;
  inline ::google::protobuf::uint64 updatecharid() const;
  inline void set_updatecharid(::google::protobuf::uint64 value);

  // required uint64 tempid = 2;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 2;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckRemoveBuid)
 private:
  inline void set_has_updatecharid();
  inline void clear_has_updatecharid();
  inline void set_has_tempid();
  inline void clear_has_tempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 updatecharid_;
  ::google::protobuf::uint64 tempid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckRemoveBuid* default_instance_;
};
// -------------------------------------------------------------------

class ReqPickOutBuid : public ::google::protobuf::Message {
 public:
  ReqPickOutBuid();
  virtual ~ReqPickOutBuid();

  ReqPickOutBuid(const ReqPickOutBuid& from);

  inline ReqPickOutBuid& operator=(const ReqPickOutBuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPickOutBuid& default_instance();

  void Swap(ReqPickOutBuid* other);

  // implements Message ----------------------------------------------

  ReqPickOutBuid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPickOutBuid& from);
  void MergeFrom(const ReqPickOutBuid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cellid = 1;
  inline bool has_cellid() const;
  inline void clear_cellid();
  static const int kCellidFieldNumber = 1;
  inline ::google::protobuf::uint32 cellid() const;
  inline void set_cellid(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.Point point = 2;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 2;
  inline const ::HelloKittyMsgData::Point& point() const;
  inline ::HelloKittyMsgData::Point* mutable_point();
  inline ::HelloKittyMsgData::Point* release_point();
  inline void set_allocated_point(::HelloKittyMsgData::Point* point);

  // required bool moveflg = 3 [default = true];
  inline bool has_moveflg() const;
  inline void clear_moveflg();
  static const int kMoveflgFieldNumber = 3;
  inline bool moveflg() const;
  inline void set_moveflg(bool value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqPickOutBuid)
 private:
  inline void set_has_cellid();
  inline void clear_has_cellid();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_moveflg();
  inline void clear_has_moveflg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::Point* point_;
  ::google::protobuf::uint32 cellid_;
  bool moveflg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqPickOutBuid* default_instance_;
};
// -------------------------------------------------------------------

class ReqClickRewardBuid : public ::google::protobuf::Message {
 public:
  ReqClickRewardBuid();
  virtual ~ReqClickRewardBuid();

  ReqClickRewardBuid(const ReqClickRewardBuid& from);

  inline ReqClickRewardBuid& operator=(const ReqClickRewardBuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqClickRewardBuid& default_instance();

  void Swap(ReqClickRewardBuid* other);

  // implements Message ----------------------------------------------

  ReqClickRewardBuid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqClickRewardBuid& from);
  void MergeFrom(const ReqClickRewardBuid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqClickRewardBuid)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqClickRewardBuid* default_instance_;
};
// -------------------------------------------------------------------

class Worker : public ::google::protobuf::Message {
 public:
  Worker();
  virtual ~Worker();

  Worker(const Worker& from);

  inline Worker& operator=(const Worker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Worker& default_instance();

  void Swap(Worker* other);

  // implements Message ----------------------------------------------

  Worker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Worker& from);
  void MergeFrom(const Worker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 starttime = 2;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 2;
  inline ::google::protobuf::uint32 starttime() const;
  inline void set_starttime(::google::protobuf::uint32 value);

  // required uint32 cd = 3;
  inline bool has_cd() const;
  inline void clear_cd();
  static const int kCdFieldNumber = 3;
  inline ::google::protobuf::uint32 cd() const;
  inline void set_cd(::google::protobuf::uint32 value);

  // required uint32 lastsec = 4;
  inline bool has_lastsec() const;
  inline void clear_lastsec();
  static const int kLastsecFieldNumber = 4;
  inline ::google::protobuf::uint32 lastsec() const;
  inline void set_lastsec(::google::protobuf::uint32 value);

  // required uint32 build = 5;
  inline bool has_build() const;
  inline void clear_build();
  static const int kBuildFieldNumber = 5;
  inline ::google::protobuf::uint32 build() const;
  inline void set_build(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.Worker)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_cd();
  inline void clear_has_cd();
  inline void set_has_lastsec();
  inline void clear_has_lastsec();
  inline void set_has_build();
  inline void clear_has_build();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 starttime_;
  ::google::protobuf::uint32 cd_;
  ::google::protobuf::uint32 lastsec_;
  ::google::protobuf::uint32 build_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static Worker* default_instance_;
};
// -------------------------------------------------------------------

class ReqWorker : public ::google::protobuf::Message {
 public:
  ReqWorker();
  virtual ~ReqWorker();

  ReqWorker(const ReqWorker& from);

  inline ReqWorker& operator=(const ReqWorker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqWorker& default_instance();

  void Swap(ReqWorker* other);

  // implements Message ----------------------------------------------

  ReqWorker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqWorker& from);
  void MergeFrom(const ReqWorker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqWorker)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqWorker* default_instance_;
};
// -------------------------------------------------------------------

class AckUpdateWorker : public ::google::protobuf::Message {
 public:
  AckUpdateWorker();
  virtual ~AckUpdateWorker();

  AckUpdateWorker(const AckUpdateWorker& from);

  inline AckUpdateWorker& operator=(const AckUpdateWorker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUpdateWorker& default_instance();

  void Swap(AckUpdateWorker* other);

  // implements Message ----------------------------------------------

  AckUpdateWorker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUpdateWorker& from);
  void MergeFrom(const AckUpdateWorker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.Worker worker = 1;
  inline bool has_worker() const;
  inline void clear_worker();
  static const int kWorkerFieldNumber = 1;
  inline const ::HelloKittyMsgData::Worker& worker() const;
  inline ::HelloKittyMsgData::Worker* mutable_worker();
  inline ::HelloKittyMsgData::Worker* release_worker();
  inline void set_allocated_worker(::HelloKittyMsgData::Worker* worker);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckUpdateWorker)
 private:
  inline void set_has_worker();
  inline void clear_has_worker();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::Worker* worker_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckUpdateWorker* default_instance_;
};
// -------------------------------------------------------------------

class AckWorker : public ::google::protobuf::Message {
 public:
  AckWorker();
  virtual ~AckWorker();

  AckWorker(const AckWorker& from);

  inline AckWorker& operator=(const AckWorker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckWorker& default_instance();

  void Swap(AckWorker* other);

  // implements Message ----------------------------------------------

  AckWorker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckWorker& from);
  void MergeFrom(const AckWorker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HelloKittyMsgData.Worker worker = 1;
  inline int worker_size() const;
  inline void clear_worker();
  static const int kWorkerFieldNumber = 1;
  inline const ::HelloKittyMsgData::Worker& worker(int index) const;
  inline ::HelloKittyMsgData::Worker* mutable_worker(int index);
  inline ::HelloKittyMsgData::Worker* add_worker();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker >&
      worker() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker >*
      mutable_worker();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckWorker)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker > worker_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckWorker* default_instance_;
};
// -------------------------------------------------------------------

class ReqResetWorker : public ::google::protobuf::Message {
 public:
  ReqResetWorker();
  virtual ~ReqResetWorker();

  ReqResetWorker(const ReqResetWorker& from);

  inline ReqResetWorker& operator=(const ReqResetWorker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqResetWorker& default_instance();

  void Swap(ReqResetWorker* other);

  // implements Message ----------------------------------------------

  ReqResetWorker* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqResetWorker& from);
  void MergeFrom(const ReqResetWorker& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 workerid = 1;
  inline bool has_workerid() const;
  inline void clear_workerid();
  static const int kWorkeridFieldNumber = 1;
  inline ::google::protobuf::uint32 workerid() const;
  inline void set_workerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqResetWorker)
 private:
  inline void set_has_workerid();
  inline void clear_has_workerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 workerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqResetWorker* default_instance_;
};
// -------------------------------------------------------------------

class ReqRecycleItem : public ::google::protobuf::Message {
 public:
  ReqRecycleItem();
  virtual ~ReqRecycleItem();

  ReqRecycleItem(const ReqRecycleItem& from);

  inline ReqRecycleItem& operator=(const ReqRecycleItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqRecycleItem& default_instance();

  void Swap(ReqRecycleItem* other);

  // implements Message ----------------------------------------------

  ReqRecycleItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqRecycleItem& from);
  void MergeFrom(const ReqRecycleItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required uint32 itemid = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 2;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 itemnum = 3;
  inline bool has_itemnum() const;
  inline void clear_itemnum();
  static const int kItemnumFieldNumber = 3;
  inline ::google::protobuf::uint32 itemnum() const;
  inline void set_itemnum(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqRecycleItem)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemnum();
  inline void clear_has_itemnum();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemnum_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqRecycleItem* default_instance_;
};
// -------------------------------------------------------------------

class ProduceBase : public ::google::protobuf::Message {
 public:
  ProduceBase();
  virtual ~ProduceBase();

  ProduceBase(const ProduceBase& from);

  inline ProduceBase& operator=(const ProduceBase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProduceBase& default_instance();

  void Swap(ProduceBase* other);

  // implements Message ----------------------------------------------

  ProduceBase* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProduceBase& from);
  void MergeFrom(const ProduceBase& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ProduceBase)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ProduceBase* default_instance_;
};
// -------------------------------------------------------------------

class ReqBuildProduce : public ::google::protobuf::Message {
 public:
  ReqBuildProduce();
  virtual ~ReqBuildProduce();

  ReqBuildProduce(const ReqBuildProduce& from);

  inline ReqBuildProduce& operator=(const ReqBuildProduce& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqBuildProduce& default_instance();

  void Swap(ReqBuildProduce* other);

  // implements Message ----------------------------------------------

  ReqBuildProduce* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqBuildProduce& from);
  void MergeFrom(const ReqBuildProduce& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 tempid = 1;
  inline int tempid_size() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid(int index) const;
  inline void set_tempid(int index, ::google::protobuf::uint64 value);
  inline void add_tempid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      tempid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_tempid();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqBuildProduce)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > tempid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static ReqBuildProduce* default_instance_;
};
// -------------------------------------------------------------------

class BuildProduce : public ::google::protobuf::Message {
 public:
  BuildProduce();
  virtual ~BuildProduce();

  BuildProduce(const BuildProduce& from);

  inline BuildProduce& operator=(const BuildProduce& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuildProduce& default_instance();

  void Swap(BuildProduce* other);

  // implements Message ----------------------------------------------

  BuildProduce* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuildProduce& from);
  void MergeFrom(const BuildProduce& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // repeated .HelloKittyMsgData.ProduceBase produce = 2;
  inline int produce_size() const;
  inline void clear_produce();
  static const int kProduceFieldNumber = 2;
  inline const ::HelloKittyMsgData::ProduceBase& produce(int index) const;
  inline ::HelloKittyMsgData::ProduceBase* mutable_produce(int index);
  inline ::HelloKittyMsgData::ProduceBase* add_produce();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::ProduceBase >&
      produce() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::ProduceBase >*
      mutable_produce();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.BuildProduce)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::ProduceBase > produce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static BuildProduce* default_instance_;
};
// -------------------------------------------------------------------

class AckBuildProduce : public ::google::protobuf::Message {
 public:
  AckBuildProduce();
  virtual ~AckBuildProduce();

  AckBuildProduce(const AckBuildProduce& from);

  inline AckBuildProduce& operator=(const AckBuildProduce& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBuildProduce& default_instance();

  void Swap(AckBuildProduce* other);

  // implements Message ----------------------------------------------

  AckBuildProduce* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBuildProduce& from);
  void MergeFrom(const AckBuildProduce& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HelloKittyMsgData.BuildProduce produce = 1;
  inline int produce_size() const;
  inline void clear_produce();
  static const int kProduceFieldNumber = 1;
  inline const ::HelloKittyMsgData::BuildProduce& produce(int index) const;
  inline ::HelloKittyMsgData::BuildProduce* mutable_produce(int index);
  inline ::HelloKittyMsgData::BuildProduce* add_produce();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce >&
      produce() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce >*
      mutable_produce();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckBuildProduce)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce > produce_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckBuildProduce* default_instance_;
};
// -------------------------------------------------------------------

class AckUpdateRubbish : public ::google::protobuf::Message {
 public:
  AckUpdateRubbish();
  virtual ~AckUpdateRubbish();

  AckUpdateRubbish(const AckUpdateRubbish& from);

  inline AckUpdateRubbish& operator=(const AckUpdateRubbish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUpdateRubbish& default_instance();

  void Swap(AckUpdateRubbish* other);

  // implements Message ----------------------------------------------

  AckUpdateRubbish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUpdateRubbish& from);
  void MergeFrom(const AckUpdateRubbish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 updatecharid = 1;
  inline bool has_updatecharid() const;
  inline void clear_updatecharid();
  static const int kUpdatecharidFieldNumber = 1;
  inline ::google::protobuf::uint64 updatecharid() const;
  inline void set_updatecharid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.RubbishData rubbish = 2;
  inline bool has_rubbish() const;
  inline void clear_rubbish();
  static const int kRubbishFieldNumber = 2;
  inline const ::HelloKittyMsgData::RubbishData& rubbish() const;
  inline ::HelloKittyMsgData::RubbishData* mutable_rubbish();
  inline ::HelloKittyMsgData::RubbishData* release_rubbish();
  inline void set_allocated_rubbish(::HelloKittyMsgData::RubbishData* rubbish);

  // required uint32 optype = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckUpdateRubbish)
 private:
  inline void set_has_updatecharid();
  inline void clear_has_updatecharid();
  inline void set_has_rubbish();
  inline void clear_has_rubbish();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 updatecharid_;
  ::HelloKittyMsgData::RubbishData* rubbish_;
  ::google::protobuf::uint32 optype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckUpdateRubbish* default_instance_;
};
// -------------------------------------------------------------------

class BufferData : public ::google::protobuf::Message {
 public:
  BufferData();
  virtual ~BufferData();

  BufferData(const BufferData& from);

  inline BufferData& operator=(const BufferData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BufferData& default_instance();

  void Swap(BufferData* other);

  // implements Message ----------------------------------------------

  BufferData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BufferData& from);
  void MergeFrom(const BufferData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.BufferTypeID bufferid = 1;
  inline bool has_bufferid() const;
  inline void clear_bufferid();
  static const int kBufferidFieldNumber = 1;
  inline ::HelloKittyMsgData::BufferTypeID bufferid() const;
  inline void set_bufferid(::HelloKittyMsgData::BufferTypeID value);

  // required uint64 srcid = 2;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 2;
  inline ::google::protobuf::uint64 srcid() const;
  inline void set_srcid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.BufferSrcType srctype = 3;
  inline bool has_srctype() const;
  inline void clear_srctype();
  static const int kSrctypeFieldNumber = 3;
  inline ::HelloKittyMsgData::BufferSrcType srctype() const;
  inline void set_srctype(::HelloKittyMsgData::BufferSrcType value);

  // required uint32 begintime = 4;
  inline bool has_begintime() const;
  inline void clear_begintime();
  static const int kBegintimeFieldNumber = 4;
  inline ::google::protobuf::uint32 begintime() const;
  inline void set_begintime(::google::protobuf::uint32 value);

  // required uint32 lasttime = 5;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLasttimeFieldNumber = 5;
  inline ::google::protobuf::uint32 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint32 value);

  // required uint32 value = 6;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.BufferData)
 private:
  inline void set_has_bufferid();
  inline void clear_has_bufferid();
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_srctype();
  inline void clear_has_srctype();
  inline void set_has_begintime();
  inline void clear_has_begintime();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 srcid_;
  int bufferid_;
  int srctype_;
  ::google::protobuf::uint32 begintime_;
  ::google::protobuf::uint32 lasttime_;
  ::google::protobuf::uint32 value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static BufferData* default_instance_;
};
// -------------------------------------------------------------------

class BufferInfo : public ::google::protobuf::Message {
 public:
  BufferInfo();
  virtual ~BufferInfo();

  BufferInfo(const BufferInfo& from);

  inline BufferInfo& operator=(const BufferInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BufferInfo& default_instance();

  void Swap(BufferInfo* other);

  // implements Message ----------------------------------------------

  BufferInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BufferInfo& from);
  void MergeFrom(const BufferInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // repeated .HelloKittyMsgData.BufferData bufferdata = 2;
  inline int bufferdata_size() const;
  inline void clear_bufferdata();
  static const int kBufferdataFieldNumber = 2;
  inline const ::HelloKittyMsgData::BufferData& bufferdata(int index) const;
  inline ::HelloKittyMsgData::BufferData* mutable_bufferdata(int index);
  inline ::HelloKittyMsgData::BufferData* add_bufferdata();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BufferData >&
      bufferdata() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BufferData >*
      mutable_bufferdata();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.BufferInfo)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BufferData > bufferdata_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static BufferInfo* default_instance_;
};
// -------------------------------------------------------------------

class AckUpdateBuffer : public ::google::protobuf::Message {
 public:
  AckUpdateBuffer();
  virtual ~AckUpdateBuffer();

  AckUpdateBuffer(const AckUpdateBuffer& from);

  inline AckUpdateBuffer& operator=(const AckUpdateBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUpdateBuffer& default_instance();

  void Swap(AckUpdateBuffer* other);

  // implements Message ----------------------------------------------

  AckUpdateBuffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUpdateBuffer& from);
  void MergeFrom(const AckUpdateBuffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.BufferInfo bufferinfo = 1;
  inline bool has_bufferinfo() const;
  inline void clear_bufferinfo();
  static const int kBufferinfoFieldNumber = 1;
  inline const ::HelloKittyMsgData::BufferInfo& bufferinfo() const;
  inline ::HelloKittyMsgData::BufferInfo* mutable_bufferinfo();
  inline ::HelloKittyMsgData::BufferInfo* release_bufferinfo();
  inline void set_allocated_bufferinfo(::HelloKittyMsgData::BufferInfo* bufferinfo);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckUpdateBuffer)
 private:
  inline void set_has_bufferinfo();
  inline void clear_has_bufferinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::BufferInfo* bufferinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_build_2eproto();
  friend void protobuf_AssignDesc_build_2eproto();
  friend void protobuf_ShutdownFile_build_2eproto();

  void InitAsDefaultInstance();
  static AckUpdateBuffer* default_instance_;
};
// ===================================================================


// ===================================================================

// Point

// required int32 x = 1;
inline bool Point::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Point::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Point::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Point::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Point::x() const {
  return x_;
}
inline void Point::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
}

// required int32 y = 2;
inline bool Point::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Point::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Point::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Point::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Point::y() const {
  return y_;
}
inline void Point::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
}

// -------------------------------------------------------------------

// WareHouseBuildBase

// required uint32 cellid = 1;
inline bool WareHouseBuildBase::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WareHouseBuildBase::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WareHouseBuildBase::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WareHouseBuildBase::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 WareHouseBuildBase::cellid() const {
  return cellid_;
}
inline void WareHouseBuildBase::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required uint32 type = 2;
inline bool WareHouseBuildBase::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WareHouseBuildBase::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WareHouseBuildBase::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WareHouseBuildBase::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 WareHouseBuildBase::type() const {
  return type_;
}
inline void WareHouseBuildBase::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 level = 3;
inline bool WareHouseBuildBase::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WareHouseBuildBase::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WareHouseBuildBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WareHouseBuildBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 WareHouseBuildBase::level() const {
  return level_;
}
inline void WareHouseBuildBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 status = 4;
inline bool WareHouseBuildBase::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WareHouseBuildBase::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WareHouseBuildBase::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WareHouseBuildBase::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 WareHouseBuildBase::status() const {
  return status_;
}
inline void WareHouseBuildBase::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// required uint32 producetime = 5;
inline bool WareHouseBuildBase::has_producetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WareHouseBuildBase::set_has_producetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WareHouseBuildBase::clear_has_producetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WareHouseBuildBase::clear_producetime() {
  producetime_ = 0u;
  clear_has_producetime();
}
inline ::google::protobuf::uint32 WareHouseBuildBase::producetime() const {
  return producetime_;
}
inline void WareHouseBuildBase::set_producetime(::google::protobuf::uint32 value) {
  set_has_producetime();
  producetime_ = value;
}

// required uint32 durtime = 6;
inline bool WareHouseBuildBase::has_durtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WareHouseBuildBase::set_has_durtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WareHouseBuildBase::clear_has_durtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WareHouseBuildBase::clear_durtime() {
  durtime_ = 0u;
  clear_has_durtime();
}
inline ::google::protobuf::uint32 WareHouseBuildBase::durtime() const {
  return durtime_;
}
inline void WareHouseBuildBase::set_durtime(::google::protobuf::uint32 value) {
  set_has_durtime();
  durtime_ = value;
}

// required uint32 num = 7;
inline bool WareHouseBuildBase::has_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WareHouseBuildBase::set_has_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WareHouseBuildBase::clear_has_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WareHouseBuildBase::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 WareHouseBuildBase::num() const {
  return num_;
}
inline void WareHouseBuildBase::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// BuildBase

// required uint64 tempid = 1;
inline bool BuildBase::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildBase::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildBase::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildBase::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 BuildBase::tempid() const {
  return tempid_;
}
inline void BuildBase::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required uint32 type = 2;
inline bool BuildBase::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BuildBase::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BuildBase::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BuildBase::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BuildBase::type() const {
  return type_;
}
inline void BuildBase::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 level = 3;
inline bool BuildBase::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BuildBase::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BuildBase::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BuildBase::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 BuildBase::level() const {
  return level_;
}
inline void BuildBase::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required .HelloKittyMsgData.Point point = 4;
inline bool BuildBase::has_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BuildBase::set_has_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BuildBase::clear_has_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BuildBase::clear_point() {
  if (point_ != NULL) point_->::HelloKittyMsgData::Point::Clear();
  clear_has_point();
}
inline const ::HelloKittyMsgData::Point& BuildBase::point() const {
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::HelloKittyMsgData::Point* BuildBase::mutable_point() {
  set_has_point();
  if (point_ == NULL) point_ = new ::HelloKittyMsgData::Point;
  return point_;
}
inline ::HelloKittyMsgData::Point* BuildBase::release_point() {
  clear_has_point();
  ::HelloKittyMsgData::Point* temp = point_;
  point_ = NULL;
  return temp;
}
inline void BuildBase::set_allocated_point(::HelloKittyMsgData::Point* point) {
  delete point_;
  point_ = point;
  if (point) {
    set_has_point();
  } else {
    clear_has_point();
  }
}

// required uint32 status = 5;
inline bool BuildBase::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BuildBase::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BuildBase::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BuildBase::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 BuildBase::status() const {
  return status_;
}
inline void BuildBase::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
}

// required uint32 durtime = 6;
inline bool BuildBase::has_durtime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BuildBase::set_has_durtime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BuildBase::clear_has_durtime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BuildBase::clear_durtime() {
  durtime_ = 0u;
  clear_has_durtime();
}
inline ::google::protobuf::uint32 BuildBase::durtime() const {
  return durtime_;
}
inline void BuildBase::set_durtime(::google::protobuf::uint32 value) {
  set_has_durtime();
  durtime_ = value;
}

// required uint32 producetime = 7;
inline bool BuildBase::has_producetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BuildBase::set_has_producetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BuildBase::clear_has_producetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BuildBase::clear_producetime() {
  producetime_ = 0u;
  clear_has_producetime();
}
inline ::google::protobuf::uint32 BuildBase::producetime() const {
  return producetime_;
}
inline void BuildBase::set_producetime(::google::protobuf::uint32 value) {
  set_has_producetime();
  producetime_ = value;
}

// required bool rotationmark = 8 [default = false];
inline bool BuildBase::has_rotationmark() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BuildBase::set_has_rotationmark() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BuildBase::clear_has_rotationmark() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BuildBase::clear_rotationmark() {
  rotationmark_ = false;
  clear_has_rotationmark();
}
inline bool BuildBase::rotationmark() const {
  return rotationmark_;
}
inline void BuildBase::set_rotationmark(bool value) {
  set_has_rotationmark();
  rotationmark_ = value;
}

// required bool active = 9 [default = false];
inline bool BuildBase::has_active() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BuildBase::set_has_active() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BuildBase::clear_has_active() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BuildBase::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool BuildBase::active() const {
  return active_;
}
inline void BuildBase::set_active(bool value) {
  set_has_active();
  active_ = value;
}

// -------------------------------------------------------------------

// ReqAllBuild

// -------------------------------------------------------------------

// AckFlushAllBuild

// repeated .HelloKittyMsgData.BuildBase buildinfo = 1;
inline int AckFlushAllBuild::buildinfo_size() const {
  return buildinfo_.size();
}
inline void AckFlushAllBuild::clear_buildinfo() {
  buildinfo_.Clear();
}
inline const ::HelloKittyMsgData::BuildBase& AckFlushAllBuild::buildinfo(int index) const {
  return buildinfo_.Get(index);
}
inline ::HelloKittyMsgData::BuildBase* AckFlushAllBuild::mutable_buildinfo(int index) {
  return buildinfo_.Mutable(index);
}
inline ::HelloKittyMsgData::BuildBase* AckFlushAllBuild::add_buildinfo() {
  return buildinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase >&
AckFlushAllBuild::buildinfo() const {
  return buildinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase >*
AckFlushAllBuild::mutable_buildinfo() {
  return &buildinfo_;
}

// -------------------------------------------------------------------

// ReqOneBuild

// required uint64 tempid = 1;
inline bool ReqOneBuild::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqOneBuild::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqOneBuild::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqOneBuild::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqOneBuild::tempid() const {
  return tempid_;
}
inline void ReqOneBuild::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// -------------------------------------------------------------------

// AckFlushOneBuild

// required uint64 updatecharid = 1;
inline bool AckFlushOneBuild::has_updatecharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckFlushOneBuild::set_has_updatecharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckFlushOneBuild::clear_has_updatecharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckFlushOneBuild::clear_updatecharid() {
  updatecharid_ = GOOGLE_ULONGLONG(0);
  clear_has_updatecharid();
}
inline ::google::protobuf::uint64 AckFlushOneBuild::updatecharid() const {
  return updatecharid_;
}
inline void AckFlushOneBuild::set_updatecharid(::google::protobuf::uint64 value) {
  set_has_updatecharid();
  updatecharid_ = value;
}

// required .HelloKittyMsgData.BuildBase buildinfo = 2;
inline bool AckFlushOneBuild::has_buildinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckFlushOneBuild::set_has_buildinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckFlushOneBuild::clear_has_buildinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckFlushOneBuild::clear_buildinfo() {
  if (buildinfo_ != NULL) buildinfo_->::HelloKittyMsgData::BuildBase::Clear();
  clear_has_buildinfo();
}
inline const ::HelloKittyMsgData::BuildBase& AckFlushOneBuild::buildinfo() const {
  return buildinfo_ != NULL ? *buildinfo_ : *default_instance_->buildinfo_;
}
inline ::HelloKittyMsgData::BuildBase* AckFlushOneBuild::mutable_buildinfo() {
  set_has_buildinfo();
  if (buildinfo_ == NULL) buildinfo_ = new ::HelloKittyMsgData::BuildBase;
  return buildinfo_;
}
inline ::HelloKittyMsgData::BuildBase* AckFlushOneBuild::release_buildinfo() {
  clear_has_buildinfo();
  ::HelloKittyMsgData::BuildBase* temp = buildinfo_;
  buildinfo_ = NULL;
  return temp;
}
inline void AckFlushOneBuild::set_allocated_buildinfo(::HelloKittyMsgData::BuildBase* buildinfo) {
  delete buildinfo_;
  buildinfo_ = buildinfo;
  if (buildinfo) {
    set_has_buildinfo();
  } else {
    clear_has_buildinfo();
  }
}

// -------------------------------------------------------------------

// ReqBuildUpGrade

// required uint64 tempid = 1;
inline bool ReqBuildUpGrade::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBuildUpGrade::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBuildUpGrade::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBuildUpGrade::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqBuildUpGrade::tempid() const {
  return tempid_;
}
inline void ReqBuildUpGrade::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// -------------------------------------------------------------------

// ReqBuildMovePlace

// required uint64 tempid = 1;
inline bool ReqBuildMovePlace::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBuildMovePlace::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBuildMovePlace::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBuildMovePlace::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqBuildMovePlace::tempid() const {
  return tempid_;
}
inline void ReqBuildMovePlace::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.Point point = 2;
inline bool ReqBuildMovePlace::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBuildMovePlace::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBuildMovePlace::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBuildMovePlace::clear_point() {
  if (point_ != NULL) point_->::HelloKittyMsgData::Point::Clear();
  clear_has_point();
}
inline const ::HelloKittyMsgData::Point& ReqBuildMovePlace::point() const {
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::HelloKittyMsgData::Point* ReqBuildMovePlace::mutable_point() {
  set_has_point();
  if (point_ == NULL) point_ = new ::HelloKittyMsgData::Point;
  return point_;
}
inline ::HelloKittyMsgData::Point* ReqBuildMovePlace::release_point() {
  clear_has_point();
  ::HelloKittyMsgData::Point* temp = point_;
  point_ = NULL;
  return temp;
}
inline void ReqBuildMovePlace::set_allocated_point(::HelloKittyMsgData::Point* point) {
  delete point_;
  point_ = point;
  if (point) {
    set_has_point();
  } else {
    clear_has_point();
  }
}

// required bool moveflg = 3 [default = true];
inline bool ReqBuildMovePlace::has_moveflg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBuildMovePlace::set_has_moveflg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBuildMovePlace::clear_has_moveflg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBuildMovePlace::clear_moveflg() {
  moveflg_ = true;
  clear_has_moveflg();
}
inline bool ReqBuildMovePlace::moveflg() const {
  return moveflg_;
}
inline void ReqBuildMovePlace::set_moveflg(bool value) {
  set_has_moveflg();
  moveflg_ = value;
}

// -------------------------------------------------------------------

// ReqBuildBuilding

// required uint32 type = 1;
inline bool ReqBuildBuilding::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBuildBuilding::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBuildBuilding::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBuildBuilding::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReqBuildBuilding::type() const {
  return type_;
}
inline void ReqBuildBuilding::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required .HelloKittyMsgData.Point point = 2;
inline bool ReqBuildBuilding::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqBuildBuilding::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqBuildBuilding::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqBuildBuilding::clear_point() {
  if (point_ != NULL) point_->::HelloKittyMsgData::Point::Clear();
  clear_has_point();
}
inline const ::HelloKittyMsgData::Point& ReqBuildBuilding::point() const {
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::HelloKittyMsgData::Point* ReqBuildBuilding::mutable_point() {
  set_has_point();
  if (point_ == NULL) point_ = new ::HelloKittyMsgData::Point;
  return point_;
}
inline ::HelloKittyMsgData::Point* ReqBuildBuilding::release_point() {
  clear_has_point();
  ::HelloKittyMsgData::Point* temp = point_;
  point_ = NULL;
  return temp;
}
inline void ReqBuildBuilding::set_allocated_point(::HelloKittyMsgData::Point* point) {
  delete point_;
  point_ = point;
  if (point) {
    set_has_point();
  } else {
    clear_has_point();
  }
}

// required bool moveflg = 3 [default = true];
inline bool ReqBuildBuilding::has_moveflg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqBuildBuilding::set_has_moveflg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqBuildBuilding::clear_has_moveflg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqBuildBuilding::clear_moveflg() {
  moveflg_ = true;
  clear_has_moveflg();
}
inline bool ReqBuildBuilding::moveflg() const {
  return moveflg_;
}
inline void ReqBuildBuilding::set_moveflg(bool value) {
  set_has_moveflg();
  moveflg_ = value;
}

// -------------------------------------------------------------------

// ReqBuildRoad

// required uint32 type = 1;
inline bool ReqBuildRoad::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqBuildRoad::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqBuildRoad::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqBuildRoad::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReqBuildRoad::type() const {
  return type_;
}
inline void ReqBuildRoad::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// repeated .HelloKittyMsgData.Point point = 2;
inline int ReqBuildRoad::point_size() const {
  return point_.size();
}
inline void ReqBuildRoad::clear_point() {
  point_.Clear();
}
inline const ::HelloKittyMsgData::Point& ReqBuildRoad::point(int index) const {
  return point_.Get(index);
}
inline ::HelloKittyMsgData::Point* ReqBuildRoad::mutable_point(int index) {
  return point_.Mutable(index);
}
inline ::HelloKittyMsgData::Point* ReqBuildRoad::add_point() {
  return point_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Point >&
ReqBuildRoad::point() const {
  return point_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Point >*
ReqBuildRoad::mutable_point() {
  return &point_;
}

// -------------------------------------------------------------------

// ReqClearRoad

// repeated uint64 tempid = 1;
inline int ReqClearRoad::tempid_size() const {
  return tempid_.size();
}
inline void ReqClearRoad::clear_tempid() {
  tempid_.Clear();
}
inline ::google::protobuf::uint64 ReqClearRoad::tempid(int index) const {
  return tempid_.Get(index);
}
inline void ReqClearRoad::set_tempid(int index, ::google::protobuf::uint64 value) {
  tempid_.Set(index, value);
}
inline void ReqClearRoad::add_tempid(::google::protobuf::uint64 value) {
  tempid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ReqClearRoad::tempid() const {
  return tempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ReqClearRoad::mutable_tempid() {
  return &tempid_;
}

// -------------------------------------------------------------------

// AckBuildOpReturnSuccess

// required uint64 updatecharid = 1;
inline bool AckBuildOpReturnSuccess::has_updatecharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBuildOpReturnSuccess::set_has_updatecharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBuildOpReturnSuccess::clear_has_updatecharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBuildOpReturnSuccess::clear_updatecharid() {
  updatecharid_ = GOOGLE_ULONGLONG(0);
  clear_has_updatecharid();
}
inline ::google::protobuf::uint64 AckBuildOpReturnSuccess::updatecharid() const {
  return updatecharid_;
}
inline void AckBuildOpReturnSuccess::set_updatecharid(::google::protobuf::uint64 value) {
  set_has_updatecharid();
  updatecharid_ = value;
}

// required uint64 tempid = 2;
inline bool AckBuildOpReturnSuccess::has_tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBuildOpReturnSuccess::set_has_tempid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBuildOpReturnSuccess::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBuildOpReturnSuccess::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 AckBuildOpReturnSuccess::tempid() const {
  return tempid_;
}
inline void AckBuildOpReturnSuccess::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.BuildSuccessCodeType code = 3;
inline bool AckBuildOpReturnSuccess::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckBuildOpReturnSuccess::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckBuildOpReturnSuccess::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckBuildOpReturnSuccess::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::HelloKittyMsgData::BuildSuccessCodeType AckBuildOpReturnSuccess::code() const {
  return static_cast< ::HelloKittyMsgData::BuildSuccessCodeType >(code_);
}
inline void AckBuildOpReturnSuccess::set_code(::HelloKittyMsgData::BuildSuccessCodeType value) {
  assert(::HelloKittyMsgData::BuildSuccessCodeType_IsValid(value));
  set_has_code();
  code_ = value;
}

// required .HelloKittyMsgData.BuildBase buildinfo = 4;
inline bool AckBuildOpReturnSuccess::has_buildinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckBuildOpReturnSuccess::set_has_buildinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckBuildOpReturnSuccess::clear_has_buildinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckBuildOpReturnSuccess::clear_buildinfo() {
  if (buildinfo_ != NULL) buildinfo_->::HelloKittyMsgData::BuildBase::Clear();
  clear_has_buildinfo();
}
inline const ::HelloKittyMsgData::BuildBase& AckBuildOpReturnSuccess::buildinfo() const {
  return buildinfo_ != NULL ? *buildinfo_ : *default_instance_->buildinfo_;
}
inline ::HelloKittyMsgData::BuildBase* AckBuildOpReturnSuccess::mutable_buildinfo() {
  set_has_buildinfo();
  if (buildinfo_ == NULL) buildinfo_ = new ::HelloKittyMsgData::BuildBase;
  return buildinfo_;
}
inline ::HelloKittyMsgData::BuildBase* AckBuildOpReturnSuccess::release_buildinfo() {
  clear_has_buildinfo();
  ::HelloKittyMsgData::BuildBase* temp = buildinfo_;
  buildinfo_ = NULL;
  return temp;
}
inline void AckBuildOpReturnSuccess::set_allocated_buildinfo(::HelloKittyMsgData::BuildBase* buildinfo) {
  delete buildinfo_;
  buildinfo_ = buildinfo;
  if (buildinfo) {
    set_has_buildinfo();
  } else {
    clear_has_buildinfo();
  }
}

// required .HelloKittyMsgData.Point oldpoint = 5;
inline bool AckBuildOpReturnSuccess::has_oldpoint() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckBuildOpReturnSuccess::set_has_oldpoint() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckBuildOpReturnSuccess::clear_has_oldpoint() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckBuildOpReturnSuccess::clear_oldpoint() {
  if (oldpoint_ != NULL) oldpoint_->::HelloKittyMsgData::Point::Clear();
  clear_has_oldpoint();
}
inline const ::HelloKittyMsgData::Point& AckBuildOpReturnSuccess::oldpoint() const {
  return oldpoint_ != NULL ? *oldpoint_ : *default_instance_->oldpoint_;
}
inline ::HelloKittyMsgData::Point* AckBuildOpReturnSuccess::mutable_oldpoint() {
  set_has_oldpoint();
  if (oldpoint_ == NULL) oldpoint_ = new ::HelloKittyMsgData::Point;
  return oldpoint_;
}
inline ::HelloKittyMsgData::Point* AckBuildOpReturnSuccess::release_oldpoint() {
  clear_has_oldpoint();
  ::HelloKittyMsgData::Point* temp = oldpoint_;
  oldpoint_ = NULL;
  return temp;
}
inline void AckBuildOpReturnSuccess::set_allocated_oldpoint(::HelloKittyMsgData::Point* oldpoint) {
  delete oldpoint_;
  oldpoint_ = oldpoint;
  if (oldpoint) {
    set_has_oldpoint();
  } else {
    clear_has_oldpoint();
  }
}

// -------------------------------------------------------------------

// AckBuildOpReturnFail

// required uint64 tempid = 1;
inline bool AckBuildOpReturnFail::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBuildOpReturnFail::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBuildOpReturnFail::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBuildOpReturnFail::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 AckBuildOpReturnFail::tempid() const {
  return tempid_;
}
inline void AckBuildOpReturnFail::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.ErrorCodeType commoncode = 2;
inline bool AckBuildOpReturnFail::has_commoncode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBuildOpReturnFail::set_has_commoncode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBuildOpReturnFail::clear_has_commoncode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBuildOpReturnFail::clear_commoncode() {
  commoncode_ = 0;
  clear_has_commoncode();
}
inline ::HelloKittyMsgData::ErrorCodeType AckBuildOpReturnFail::commoncode() const {
  return static_cast< ::HelloKittyMsgData::ErrorCodeType >(commoncode_);
}
inline void AckBuildOpReturnFail::set_commoncode(::HelloKittyMsgData::ErrorCodeType value) {
  assert(::HelloKittyMsgData::ErrorCodeType_IsValid(value));
  set_has_commoncode();
  commoncode_ = value;
}

// required .HelloKittyMsgData.BuildFailCodeType code = 3;
inline bool AckBuildOpReturnFail::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckBuildOpReturnFail::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckBuildOpReturnFail::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckBuildOpReturnFail::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::HelloKittyMsgData::BuildFailCodeType AckBuildOpReturnFail::code() const {
  return static_cast< ::HelloKittyMsgData::BuildFailCodeType >(code_);
}
inline void AckBuildOpReturnFail::set_code(::HelloKittyMsgData::BuildFailCodeType value) {
  assert(::HelloKittyMsgData::BuildFailCodeType_IsValid(value));
  set_has_code();
  code_ = value;
}

// required .HelloKittyMsgData.BuildBase buildinfo = 4;
inline bool AckBuildOpReturnFail::has_buildinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckBuildOpReturnFail::set_has_buildinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckBuildOpReturnFail::clear_has_buildinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckBuildOpReturnFail::clear_buildinfo() {
  if (buildinfo_ != NULL) buildinfo_->::HelloKittyMsgData::BuildBase::Clear();
  clear_has_buildinfo();
}
inline const ::HelloKittyMsgData::BuildBase& AckBuildOpReturnFail::buildinfo() const {
  return buildinfo_ != NULL ? *buildinfo_ : *default_instance_->buildinfo_;
}
inline ::HelloKittyMsgData::BuildBase* AckBuildOpReturnFail::mutable_buildinfo() {
  set_has_buildinfo();
  if (buildinfo_ == NULL) buildinfo_ = new ::HelloKittyMsgData::BuildBase;
  return buildinfo_;
}
inline ::HelloKittyMsgData::BuildBase* AckBuildOpReturnFail::release_buildinfo() {
  clear_has_buildinfo();
  ::HelloKittyMsgData::BuildBase* temp = buildinfo_;
  buildinfo_ = NULL;
  return temp;
}
inline void AckBuildOpReturnFail::set_allocated_buildinfo(::HelloKittyMsgData::BuildBase* buildinfo) {
  delete buildinfo_;
  buildinfo_ = buildinfo;
  if (buildinfo) {
    set_has_buildinfo();
  } else {
    clear_has_buildinfo();
  }
}

// -------------------------------------------------------------------

// ReqPickUpBuid

// required uint64 tempid = 1;
inline bool ReqPickUpBuid::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPickUpBuid::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPickUpBuid::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPickUpBuid::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqPickUpBuid::tempid() const {
  return tempid_;
}
inline void ReqPickUpBuid::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// -------------------------------------------------------------------

// AckRemoveBuid

// required uint64 updatecharid = 1;
inline bool AckRemoveBuid::has_updatecharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckRemoveBuid::set_has_updatecharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckRemoveBuid::clear_has_updatecharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckRemoveBuid::clear_updatecharid() {
  updatecharid_ = GOOGLE_ULONGLONG(0);
  clear_has_updatecharid();
}
inline ::google::protobuf::uint64 AckRemoveBuid::updatecharid() const {
  return updatecharid_;
}
inline void AckRemoveBuid::set_updatecharid(::google::protobuf::uint64 value) {
  set_has_updatecharid();
  updatecharid_ = value;
}

// required uint64 tempid = 2;
inline bool AckRemoveBuid::has_tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckRemoveBuid::set_has_tempid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckRemoveBuid::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckRemoveBuid::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 AckRemoveBuid::tempid() const {
  return tempid_;
}
inline void AckRemoveBuid::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// -------------------------------------------------------------------

// ReqPickOutBuid

// required uint32 cellid = 1;
inline bool ReqPickOutBuid::has_cellid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPickOutBuid::set_has_cellid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPickOutBuid::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPickOutBuid::clear_cellid() {
  cellid_ = 0u;
  clear_has_cellid();
}
inline ::google::protobuf::uint32 ReqPickOutBuid::cellid() const {
  return cellid_;
}
inline void ReqPickOutBuid::set_cellid(::google::protobuf::uint32 value) {
  set_has_cellid();
  cellid_ = value;
}

// required .HelloKittyMsgData.Point point = 2;
inline bool ReqPickOutBuid::has_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqPickOutBuid::set_has_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqPickOutBuid::clear_has_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqPickOutBuid::clear_point() {
  if (point_ != NULL) point_->::HelloKittyMsgData::Point::Clear();
  clear_has_point();
}
inline const ::HelloKittyMsgData::Point& ReqPickOutBuid::point() const {
  return point_ != NULL ? *point_ : *default_instance_->point_;
}
inline ::HelloKittyMsgData::Point* ReqPickOutBuid::mutable_point() {
  set_has_point();
  if (point_ == NULL) point_ = new ::HelloKittyMsgData::Point;
  return point_;
}
inline ::HelloKittyMsgData::Point* ReqPickOutBuid::release_point() {
  clear_has_point();
  ::HelloKittyMsgData::Point* temp = point_;
  point_ = NULL;
  return temp;
}
inline void ReqPickOutBuid::set_allocated_point(::HelloKittyMsgData::Point* point) {
  delete point_;
  point_ = point;
  if (point) {
    set_has_point();
  } else {
    clear_has_point();
  }
}

// required bool moveflg = 3 [default = true];
inline bool ReqPickOutBuid::has_moveflg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqPickOutBuid::set_has_moveflg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqPickOutBuid::clear_has_moveflg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqPickOutBuid::clear_moveflg() {
  moveflg_ = true;
  clear_has_moveflg();
}
inline bool ReqPickOutBuid::moveflg() const {
  return moveflg_;
}
inline void ReqPickOutBuid::set_moveflg(bool value) {
  set_has_moveflg();
  moveflg_ = value;
}

// -------------------------------------------------------------------

// ReqClickRewardBuid

// required uint64 tempid = 1;
inline bool ReqClickRewardBuid::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqClickRewardBuid::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqClickRewardBuid::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqClickRewardBuid::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqClickRewardBuid::tempid() const {
  return tempid_;
}
inline void ReqClickRewardBuid::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// -------------------------------------------------------------------

// Worker

// required uint32 id = 1;
inline bool Worker::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Worker::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Worker::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Worker::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Worker::id() const {
  return id_;
}
inline void Worker::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 starttime = 2;
inline bool Worker::has_starttime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Worker::set_has_starttime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Worker::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Worker::clear_starttime() {
  starttime_ = 0u;
  clear_has_starttime();
}
inline ::google::protobuf::uint32 Worker::starttime() const {
  return starttime_;
}
inline void Worker::set_starttime(::google::protobuf::uint32 value) {
  set_has_starttime();
  starttime_ = value;
}

// required uint32 cd = 3;
inline bool Worker::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Worker::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Worker::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Worker::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
inline ::google::protobuf::uint32 Worker::cd() const {
  return cd_;
}
inline void Worker::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
}

// required uint32 lastsec = 4;
inline bool Worker::has_lastsec() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Worker::set_has_lastsec() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Worker::clear_has_lastsec() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Worker::clear_lastsec() {
  lastsec_ = 0u;
  clear_has_lastsec();
}
inline ::google::protobuf::uint32 Worker::lastsec() const {
  return lastsec_;
}
inline void Worker::set_lastsec(::google::protobuf::uint32 value) {
  set_has_lastsec();
  lastsec_ = value;
}

// required uint32 build = 5;
inline bool Worker::has_build() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Worker::set_has_build() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Worker::clear_has_build() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Worker::clear_build() {
  build_ = 0u;
  clear_has_build();
}
inline ::google::protobuf::uint32 Worker::build() const {
  return build_;
}
inline void Worker::set_build(::google::protobuf::uint32 value) {
  set_has_build();
  build_ = value;
}

// -------------------------------------------------------------------

// ReqWorker

// -------------------------------------------------------------------

// AckUpdateWorker

// required .HelloKittyMsgData.Worker worker = 1;
inline bool AckUpdateWorker::has_worker() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUpdateWorker::set_has_worker() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUpdateWorker::clear_has_worker() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUpdateWorker::clear_worker() {
  if (worker_ != NULL) worker_->::HelloKittyMsgData::Worker::Clear();
  clear_has_worker();
}
inline const ::HelloKittyMsgData::Worker& AckUpdateWorker::worker() const {
  return worker_ != NULL ? *worker_ : *default_instance_->worker_;
}
inline ::HelloKittyMsgData::Worker* AckUpdateWorker::mutable_worker() {
  set_has_worker();
  if (worker_ == NULL) worker_ = new ::HelloKittyMsgData::Worker;
  return worker_;
}
inline ::HelloKittyMsgData::Worker* AckUpdateWorker::release_worker() {
  clear_has_worker();
  ::HelloKittyMsgData::Worker* temp = worker_;
  worker_ = NULL;
  return temp;
}
inline void AckUpdateWorker::set_allocated_worker(::HelloKittyMsgData::Worker* worker) {
  delete worker_;
  worker_ = worker;
  if (worker) {
    set_has_worker();
  } else {
    clear_has_worker();
  }
}

// -------------------------------------------------------------------

// AckWorker

// repeated .HelloKittyMsgData.Worker worker = 1;
inline int AckWorker::worker_size() const {
  return worker_.size();
}
inline void AckWorker::clear_worker() {
  worker_.Clear();
}
inline const ::HelloKittyMsgData::Worker& AckWorker::worker(int index) const {
  return worker_.Get(index);
}
inline ::HelloKittyMsgData::Worker* AckWorker::mutable_worker(int index) {
  return worker_.Mutable(index);
}
inline ::HelloKittyMsgData::Worker* AckWorker::add_worker() {
  return worker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker >&
AckWorker::worker() const {
  return worker_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker >*
AckWorker::mutable_worker() {
  return &worker_;
}

// -------------------------------------------------------------------

// ReqResetWorker

// required uint32 workerid = 1;
inline bool ReqResetWorker::has_workerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqResetWorker::set_has_workerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqResetWorker::clear_has_workerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqResetWorker::clear_workerid() {
  workerid_ = 0u;
  clear_has_workerid();
}
inline ::google::protobuf::uint32 ReqResetWorker::workerid() const {
  return workerid_;
}
inline void ReqResetWorker::set_workerid(::google::protobuf::uint32 value) {
  set_has_workerid();
  workerid_ = value;
}

// -------------------------------------------------------------------

// ReqRecycleItem

// required uint64 tempid = 1;
inline bool ReqRecycleItem::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqRecycleItem::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqRecycleItem::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqRecycleItem::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqRecycleItem::tempid() const {
  return tempid_;
}
inline void ReqRecycleItem::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required uint32 itemid = 2;
inline bool ReqRecycleItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqRecycleItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqRecycleItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqRecycleItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 ReqRecycleItem::itemid() const {
  return itemid_;
}
inline void ReqRecycleItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 itemnum = 3;
inline bool ReqRecycleItem::has_itemnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqRecycleItem::set_has_itemnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqRecycleItem::clear_has_itemnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqRecycleItem::clear_itemnum() {
  itemnum_ = 0u;
  clear_has_itemnum();
}
inline ::google::protobuf::uint32 ReqRecycleItem::itemnum() const {
  return itemnum_;
}
inline void ReqRecycleItem::set_itemnum(::google::protobuf::uint32 value) {
  set_has_itemnum();
  itemnum_ = value;
}

// -------------------------------------------------------------------

// ProduceBase

// required uint32 itemid = 1;
inline bool ProduceBase::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProduceBase::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProduceBase::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProduceBase::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 ProduceBase::itemid() const {
  return itemid_;
}
inline void ProduceBase::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 value = 2;
inline bool ProduceBase::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProduceBase::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProduceBase::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProduceBase::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 ProduceBase::value() const {
  return value_;
}
inline void ProduceBase::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// ReqBuildProduce

// repeated uint64 tempid = 1;
inline int ReqBuildProduce::tempid_size() const {
  return tempid_.size();
}
inline void ReqBuildProduce::clear_tempid() {
  tempid_.Clear();
}
inline ::google::protobuf::uint64 ReqBuildProduce::tempid(int index) const {
  return tempid_.Get(index);
}
inline void ReqBuildProduce::set_tempid(int index, ::google::protobuf::uint64 value) {
  tempid_.Set(index, value);
}
inline void ReqBuildProduce::add_tempid(::google::protobuf::uint64 value) {
  tempid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ReqBuildProduce::tempid() const {
  return tempid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ReqBuildProduce::mutable_tempid() {
  return &tempid_;
}

// -------------------------------------------------------------------

// BuildProduce

// required uint64 tempid = 1;
inline bool BuildProduce::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BuildProduce::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BuildProduce::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BuildProduce::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 BuildProduce::tempid() const {
  return tempid_;
}
inline void BuildProduce::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// repeated .HelloKittyMsgData.ProduceBase produce = 2;
inline int BuildProduce::produce_size() const {
  return produce_.size();
}
inline void BuildProduce::clear_produce() {
  produce_.Clear();
}
inline const ::HelloKittyMsgData::ProduceBase& BuildProduce::produce(int index) const {
  return produce_.Get(index);
}
inline ::HelloKittyMsgData::ProduceBase* BuildProduce::mutable_produce(int index) {
  return produce_.Mutable(index);
}
inline ::HelloKittyMsgData::ProduceBase* BuildProduce::add_produce() {
  return produce_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::ProduceBase >&
BuildProduce::produce() const {
  return produce_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::ProduceBase >*
BuildProduce::mutable_produce() {
  return &produce_;
}

// -------------------------------------------------------------------

// AckBuildProduce

// repeated .HelloKittyMsgData.BuildProduce produce = 1;
inline int AckBuildProduce::produce_size() const {
  return produce_.size();
}
inline void AckBuildProduce::clear_produce() {
  produce_.Clear();
}
inline const ::HelloKittyMsgData::BuildProduce& AckBuildProduce::produce(int index) const {
  return produce_.Get(index);
}
inline ::HelloKittyMsgData::BuildProduce* AckBuildProduce::mutable_produce(int index) {
  return produce_.Mutable(index);
}
inline ::HelloKittyMsgData::BuildProduce* AckBuildProduce::add_produce() {
  return produce_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce >&
AckBuildProduce::produce() const {
  return produce_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce >*
AckBuildProduce::mutable_produce() {
  return &produce_;
}

// -------------------------------------------------------------------

// AckUpdateRubbish

// required uint64 updatecharid = 1;
inline bool AckUpdateRubbish::has_updatecharid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUpdateRubbish::set_has_updatecharid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUpdateRubbish::clear_has_updatecharid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUpdateRubbish::clear_updatecharid() {
  updatecharid_ = GOOGLE_ULONGLONG(0);
  clear_has_updatecharid();
}
inline ::google::protobuf::uint64 AckUpdateRubbish::updatecharid() const {
  return updatecharid_;
}
inline void AckUpdateRubbish::set_updatecharid(::google::protobuf::uint64 value) {
  set_has_updatecharid();
  updatecharid_ = value;
}

// required .HelloKittyMsgData.RubbishData rubbish = 2;
inline bool AckUpdateRubbish::has_rubbish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckUpdateRubbish::set_has_rubbish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckUpdateRubbish::clear_has_rubbish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckUpdateRubbish::clear_rubbish() {
  if (rubbish_ != NULL) rubbish_->::HelloKittyMsgData::RubbishData::Clear();
  clear_has_rubbish();
}
inline const ::HelloKittyMsgData::RubbishData& AckUpdateRubbish::rubbish() const {
  return rubbish_ != NULL ? *rubbish_ : *default_instance_->rubbish_;
}
inline ::HelloKittyMsgData::RubbishData* AckUpdateRubbish::mutable_rubbish() {
  set_has_rubbish();
  if (rubbish_ == NULL) rubbish_ = new ::HelloKittyMsgData::RubbishData;
  return rubbish_;
}
inline ::HelloKittyMsgData::RubbishData* AckUpdateRubbish::release_rubbish() {
  clear_has_rubbish();
  ::HelloKittyMsgData::RubbishData* temp = rubbish_;
  rubbish_ = NULL;
  return temp;
}
inline void AckUpdateRubbish::set_allocated_rubbish(::HelloKittyMsgData::RubbishData* rubbish) {
  delete rubbish_;
  rubbish_ = rubbish;
  if (rubbish) {
    set_has_rubbish();
  } else {
    clear_has_rubbish();
  }
}

// required uint32 optype = 3;
inline bool AckUpdateRubbish::has_optype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckUpdateRubbish::set_has_optype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckUpdateRubbish::clear_has_optype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckUpdateRubbish::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 AckUpdateRubbish::optype() const {
  return optype_;
}
inline void AckUpdateRubbish::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
}

// -------------------------------------------------------------------

// BufferData

// required .HelloKittyMsgData.BufferTypeID bufferid = 1;
inline bool BufferData::has_bufferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BufferData::set_has_bufferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BufferData::clear_has_bufferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BufferData::clear_bufferid() {
  bufferid_ = 1;
  clear_has_bufferid();
}
inline ::HelloKittyMsgData::BufferTypeID BufferData::bufferid() const {
  return static_cast< ::HelloKittyMsgData::BufferTypeID >(bufferid_);
}
inline void BufferData::set_bufferid(::HelloKittyMsgData::BufferTypeID value) {
  assert(::HelloKittyMsgData::BufferTypeID_IsValid(value));
  set_has_bufferid();
  bufferid_ = value;
}

// required uint64 srcid = 2;
inline bool BufferData::has_srcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BufferData::set_has_srcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BufferData::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BufferData::clear_srcid() {
  srcid_ = GOOGLE_ULONGLONG(0);
  clear_has_srcid();
}
inline ::google::protobuf::uint64 BufferData::srcid() const {
  return srcid_;
}
inline void BufferData::set_srcid(::google::protobuf::uint64 value) {
  set_has_srcid();
  srcid_ = value;
}

// required .HelloKittyMsgData.BufferSrcType srctype = 3;
inline bool BufferData::has_srctype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BufferData::set_has_srctype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BufferData::clear_has_srctype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BufferData::clear_srctype() {
  srctype_ = 0;
  clear_has_srctype();
}
inline ::HelloKittyMsgData::BufferSrcType BufferData::srctype() const {
  return static_cast< ::HelloKittyMsgData::BufferSrcType >(srctype_);
}
inline void BufferData::set_srctype(::HelloKittyMsgData::BufferSrcType value) {
  assert(::HelloKittyMsgData::BufferSrcType_IsValid(value));
  set_has_srctype();
  srctype_ = value;
}

// required uint32 begintime = 4;
inline bool BufferData::has_begintime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BufferData::set_has_begintime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BufferData::clear_has_begintime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BufferData::clear_begintime() {
  begintime_ = 0u;
  clear_has_begintime();
}
inline ::google::protobuf::uint32 BufferData::begintime() const {
  return begintime_;
}
inline void BufferData::set_begintime(::google::protobuf::uint32 value) {
  set_has_begintime();
  begintime_ = value;
}

// required uint32 lasttime = 5;
inline bool BufferData::has_lasttime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BufferData::set_has_lasttime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BufferData::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BufferData::clear_lasttime() {
  lasttime_ = 0u;
  clear_has_lasttime();
}
inline ::google::protobuf::uint32 BufferData::lasttime() const {
  return lasttime_;
}
inline void BufferData::set_lasttime(::google::protobuf::uint32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// required uint32 value = 6;
inline bool BufferData::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BufferData::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BufferData::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BufferData::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 BufferData::value() const {
  return value_;
}
inline void BufferData::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// BufferInfo

// required uint64 tempid = 1;
inline bool BufferInfo::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BufferInfo::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BufferInfo::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BufferInfo::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 BufferInfo::tempid() const {
  return tempid_;
}
inline void BufferInfo::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// repeated .HelloKittyMsgData.BufferData bufferdata = 2;
inline int BufferInfo::bufferdata_size() const {
  return bufferdata_.size();
}
inline void BufferInfo::clear_bufferdata() {
  bufferdata_.Clear();
}
inline const ::HelloKittyMsgData::BufferData& BufferInfo::bufferdata(int index) const {
  return bufferdata_.Get(index);
}
inline ::HelloKittyMsgData::BufferData* BufferInfo::mutable_bufferdata(int index) {
  return bufferdata_.Mutable(index);
}
inline ::HelloKittyMsgData::BufferData* BufferInfo::add_bufferdata() {
  return bufferdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BufferData >&
BufferInfo::bufferdata() const {
  return bufferdata_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BufferData >*
BufferInfo::mutable_bufferdata() {
  return &bufferdata_;
}

// -------------------------------------------------------------------

// AckUpdateBuffer

// required .HelloKittyMsgData.BufferInfo bufferinfo = 1;
inline bool AckUpdateBuffer::has_bufferinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUpdateBuffer::set_has_bufferinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUpdateBuffer::clear_has_bufferinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUpdateBuffer::clear_bufferinfo() {
  if (bufferinfo_ != NULL) bufferinfo_->::HelloKittyMsgData::BufferInfo::Clear();
  clear_has_bufferinfo();
}
inline const ::HelloKittyMsgData::BufferInfo& AckUpdateBuffer::bufferinfo() const {
  return bufferinfo_ != NULL ? *bufferinfo_ : *default_instance_->bufferinfo_;
}
inline ::HelloKittyMsgData::BufferInfo* AckUpdateBuffer::mutable_bufferinfo() {
  set_has_bufferinfo();
  if (bufferinfo_ == NULL) bufferinfo_ = new ::HelloKittyMsgData::BufferInfo;
  return bufferinfo_;
}
inline ::HelloKittyMsgData::BufferInfo* AckUpdateBuffer::release_bufferinfo() {
  clear_has_bufferinfo();
  ::HelloKittyMsgData::BufferInfo* temp = bufferinfo_;
  bufferinfo_ = NULL;
  return temp;
}
inline void AckUpdateBuffer::set_allocated_bufferinfo(::HelloKittyMsgData::BufferInfo* bufferinfo) {
  delete bufferinfo_;
  bufferinfo_ = bufferinfo;
  if (bufferinfo) {
    set_has_bufferinfo();
  } else {
    clear_has_bufferinfo();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::BuildStatueType>() {
  return ::HelloKittyMsgData::BuildStatueType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::BuildSuccessCodeType>() {
  return ::HelloKittyMsgData::BuildSuccessCodeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::BuildFailCodeType>() {
  return ::HelloKittyMsgData::BuildFailCodeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::BufferSrcType>() {
  return ::HelloKittyMsgData::BufferSrcType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_build_2eproto__INCLUDED
