// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

#ifndef PROTOBUF_event_2eproto__INCLUDED
#define PROTOBUF_event_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_event_2eproto();
void protobuf_AssignDesc_event_2eproto();
void protobuf_ShutdownFile_event_2eproto();

class PlayerEvent;
class Award;
class vecAward;
class SaveForEvent;
class opBuilding;
class AckopBuilding;
class ReqclearSweetBox;
class AckclearSweetBox;
class returnEventAward;
class EventBuildNotice;
class EventNotice;
class Evententer;

enum PlayerEventType {
  PlayerEvent_None = 0,
  PlayerEvent_LoseBoy = 1,
  PlayerEvent_GoldHill = 2,
  PlayerEvent_FixBuild = 3,
  PlayerEvent_Plant = 4
};
bool PlayerEventType_IsValid(int value);
const PlayerEventType PlayerEventType_MIN = PlayerEvent_None;
const PlayerEventType PlayerEventType_MAX = PlayerEvent_Plant;
const int PlayerEventType_ARRAYSIZE = PlayerEventType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerEventType_descriptor();
inline const ::std::string& PlayerEventType_Name(PlayerEventType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerEventType_descriptor(), value);
}
inline bool PlayerEventType_Parse(
    const ::std::string& name, PlayerEventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerEventType>(
    PlayerEventType_descriptor(), name, value);
}
enum PlayerOpEventResult {
  PlayerOpEventResult_Suc = 0,
  PlayerOpEventResult_CaseNoExist = 1,
  PlayerOpEventResult_SelfPacketFull = 2,
  PlayerOpEventResult_BoxFull = 3,
  PlayerOpEventResult_NOVisit = 4,
  PlayerOpEventResult_BoxNotFull = 5,
  PlayerOpEventResult_BuildNotExsit = 6,
  PlayerOpEventResult_Cool = 7,
  PlayerOpEventResult_OtherErr = 8
};
bool PlayerOpEventResult_IsValid(int value);
const PlayerOpEventResult PlayerOpEventResult_MIN = PlayerOpEventResult_Suc;
const PlayerOpEventResult PlayerOpEventResult_MAX = PlayerOpEventResult_OtherErr;
const int PlayerOpEventResult_ARRAYSIZE = PlayerOpEventResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerOpEventResult_descriptor();
inline const ::std::string& PlayerOpEventResult_Name(PlayerOpEventResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerOpEventResult_descriptor(), value);
}
inline bool PlayerOpEventResult_Parse(
    const ::std::string& name, PlayerOpEventResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerOpEventResult>(
    PlayerOpEventResult_descriptor(), name, value);
}
enum EventProcess {
  EventProcess_run = 0,
  EventProcess_final = 1
};
bool EventProcess_IsValid(int value);
const EventProcess EventProcess_MIN = EventProcess_run;
const EventProcess EventProcess_MAX = EventProcess_final;
const int EventProcess_ARRAYSIZE = EventProcess_MAX + 1;

const ::google::protobuf::EnumDescriptor* EventProcess_descriptor();
inline const ::std::string& EventProcess_Name(EventProcess value) {
  return ::google::protobuf::internal::NameOfEnum(
    EventProcess_descriptor(), value);
}
inline bool EventProcess_Parse(
    const ::std::string& name, EventProcess* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EventProcess>(
    EventProcess_descriptor(), name, value);
}
// ===================================================================

class PlayerEvent : public ::google::protobuf::Message {
 public:
  PlayerEvent();
  virtual ~PlayerEvent();

  PlayerEvent(const PlayerEvent& from);

  inline PlayerEvent& operator=(const PlayerEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerEvent& default_instance();

  void Swap(PlayerEvent* other);

  // implements Message ----------------------------------------------

  PlayerEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerEvent& from);
  void MergeFrom(const PlayerEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 EventID = 1 [default = 0];
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventIDFieldNumber = 1;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);

  // optional uint32 EndTimer = 2 [default = 0];
  inline bool has_endtimer() const;
  inline void clear_endtimer();
  static const int kEndTimerFieldNumber = 2;
  inline ::google::protobuf::uint32 endtimer() const;
  inline void set_endtimer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.PlayerEvent)
 private:
  inline void set_has_eventid();
  inline void clear_has_eventid();
  inline void set_has_endtimer();
  inline void clear_has_endtimer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::uint32 endtimer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static PlayerEvent* default_instance_;
};
// -------------------------------------------------------------------

class Award : public ::google::protobuf::Message {
 public:
  Award();
  virtual ~Award();

  Award(const Award& from);

  inline Award& operator=(const Award& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Award& default_instance();

  void Swap(Award* other);

  // implements Message ----------------------------------------------

  Award* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Award& from);
  void MergeFrom(const Award& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 awardtype = 1 [default = 0];
  inline bool has_awardtype() const;
  inline void clear_awardtype();
  static const int kAwardtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 awardtype() const;
  inline void set_awardtype(::google::protobuf::uint32 value);

  // optional uint32 awardval = 2 [default = 0];
  inline bool has_awardval() const;
  inline void clear_awardval();
  static const int kAwardvalFieldNumber = 2;
  inline ::google::protobuf::uint32 awardval() const;
  inline void set_awardval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.Award)
 private:
  inline void set_has_awardtype();
  inline void clear_has_awardtype();
  inline void set_has_awardval();
  inline void clear_has_awardval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 awardtype_;
  ::google::protobuf::uint32 awardval_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Award* default_instance_;
};
// -------------------------------------------------------------------

class vecAward : public ::google::protobuf::Message {
 public:
  vecAward();
  virtual ~vecAward();

  vecAward(const vecAward& from);

  inline vecAward& operator=(const vecAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const vecAward& default_instance();

  void Swap(vecAward* other);

  // implements Message ----------------------------------------------

  vecAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const vecAward& from);
  void MergeFrom(const vecAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HelloKittyMsgData.Award award = 1;
  inline int award_size() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 1;
  inline const ::HelloKittyMsgData::Award& award(int index) const;
  inline ::HelloKittyMsgData::Award* mutable_award(int index);
  inline ::HelloKittyMsgData::Award* add_award();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >&
      award() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >*
      mutable_award();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.vecAward)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award > award_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static vecAward* default_instance_;
};
// -------------------------------------------------------------------

class SaveForEvent : public ::google::protobuf::Message {
 public:
  SaveForEvent();
  virtual ~SaveForEvent();

  SaveForEvent(const SaveForEvent& from);

  inline SaveForEvent& operator=(const SaveForEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SaveForEvent& default_instance();

  void Swap(SaveForEvent* other);

  // implements Message ----------------------------------------------

  SaveForEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SaveForEvent& from);
  void MergeFrom(const SaveForEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 EventID = 1;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventIDFieldNumber = 1;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);

  // required uint32 IsRun = 2;
  inline bool has_isrun() const;
  inline void clear_isrun();
  static const int kIsRunFieldNumber = 2;
  inline ::google::protobuf::uint32 isrun() const;
  inline void set_isrun(::google::protobuf::uint32 value);

  // required uint32 FlushTimer = 3;
  inline bool has_flushtimer() const;
  inline void clear_flushtimer();
  static const int kFlushTimerFieldNumber = 3;
  inline ::google::protobuf::uint32 flushtimer() const;
  inline void set_flushtimer(::google::protobuf::uint32 value);

  // optional uint32 EndTimer = 4 [default = 0];
  inline bool has_endtimer() const;
  inline void clear_endtimer();
  static const int kEndTimerFieldNumber = 4;
  inline ::google::protobuf::uint32 endtimer() const;
  inline void set_endtimer(::google::protobuf::uint32 value);

  // optional uint32 BuildID = 5 [default = 0];
  inline bool has_buildid() const;
  inline void clear_buildid();
  static const int kBuildIDFieldNumber = 5;
  inline ::google::protobuf::uint32 buildid() const;
  inline void set_buildid(::google::protobuf::uint32 value);

  // optional uint32 Value = 6 [default = 0];
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 6;
  inline ::google::protobuf::uint32 value() const;
  inline void set_value(::google::protobuf::uint32 value);

  // repeated uint64 OpPlayer = 7;
  inline int opplayer_size() const;
  inline void clear_opplayer();
  static const int kOpPlayerFieldNumber = 7;
  inline ::google::protobuf::uint64 opplayer(int index) const;
  inline void set_opplayer(int index, ::google::protobuf::uint64 value);
  inline void add_opplayer(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      opplayer() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_opplayer();

  // repeated uint32 OpTimer = 8;
  inline int optimer_size() const;
  inline void clear_optimer();
  static const int kOpTimerFieldNumber = 8;
  inline ::google::protobuf::uint32 optimer(int index) const;
  inline void set_optimer(int index, ::google::protobuf::uint32 value);
  inline void add_optimer(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      optimer() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_optimer();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.SaveForEvent)
 private:
  inline void set_has_eventid();
  inline void clear_has_eventid();
  inline void set_has_isrun();
  inline void clear_has_isrun();
  inline void set_has_flushtimer();
  inline void clear_has_flushtimer();
  inline void set_has_endtimer();
  inline void clear_has_endtimer();
  inline void set_has_buildid();
  inline void clear_has_buildid();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::uint32 isrun_;
  ::google::protobuf::uint32 flushtimer_;
  ::google::protobuf::uint32 endtimer_;
  ::google::protobuf::uint32 buildid_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > opplayer_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > optimer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static SaveForEvent* default_instance_;
};
// -------------------------------------------------------------------

class opBuilding : public ::google::protobuf::Message {
 public:
  opBuilding();
  virtual ~opBuilding();

  opBuilding(const opBuilding& from);

  inline opBuilding& operator=(const opBuilding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const opBuilding& default_instance();

  void Swap(opBuilding* other);

  // implements Message ----------------------------------------------

  opBuilding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const opBuilding& from);
  void MergeFrom(const opBuilding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint64 buildid = 2;
  inline bool has_buildid() const;
  inline void clear_buildid();
  static const int kBuildidFieldNumber = 2;
  inline ::google::protobuf::uint64 buildid() const;
  inline void set_buildid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.opBuilding)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_buildid();
  inline void clear_has_buildid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 buildid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static opBuilding* default_instance_;
};
// -------------------------------------------------------------------

class AckopBuilding : public ::google::protobuf::Message {
 public:
  AckopBuilding();
  virtual ~AckopBuilding();

  AckopBuilding(const AckopBuilding& from);

  inline AckopBuilding& operator=(const AckopBuilding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckopBuilding& default_instance();

  void Swap(AckopBuilding* other);

  // implements Message ----------------------------------------------

  AckopBuilding* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckopBuilding& from);
  void MergeFrom(const AckopBuilding& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.PlayerOpEventResult result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::PlayerOpEventResult result() const;
  inline void set_result(::HelloKittyMsgData::PlayerOpEventResult value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint64 buildid = 3;
  inline bool has_buildid() const;
  inline void clear_buildid();
  static const int kBuildidFieldNumber = 3;
  inline ::google::protobuf::uint64 buildid() const;
  inline void set_buildid(::google::protobuf::uint64 value);

  // optional uint32 eventid = 4 [default = 0];
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventidFieldNumber = 4;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);

  // optional .HelloKittyMsgData.EventProcess process = 5 [default = EventProcess_run];
  inline bool has_process() const;
  inline void clear_process();
  static const int kProcessFieldNumber = 5;
  inline ::HelloKittyMsgData::EventProcess process() const;
  inline void set_process(::HelloKittyMsgData::EventProcess value);

  // repeated .HelloKittyMsgData.Award award = 6;
  inline int award_size() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 6;
  inline const ::HelloKittyMsgData::Award& award(int index) const;
  inline ::HelloKittyMsgData::Award* mutable_award(int index);
  inline ::HelloKittyMsgData::Award* add_award();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >&
      award() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >*
      mutable_award();

  // optional uint32 extraid = 7 [default = 0];
  inline bool has_extraid() const;
  inline void clear_extraid();
  static const int kExtraidFieldNumber = 7;
  inline ::google::protobuf::uint32 extraid() const;
  inline void set_extraid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckopBuilding)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_buildid();
  inline void clear_has_buildid();
  inline void set_has_eventid();
  inline void clear_has_eventid();
  inline void set_has_process();
  inline void clear_has_process();
  inline void set_has_extraid();
  inline void clear_has_extraid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  int result_;
  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::uint64 buildid_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award > award_;
  int process_;
  ::google::protobuf::uint32 extraid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static AckopBuilding* default_instance_;
};
// -------------------------------------------------------------------

class ReqclearSweetBox : public ::google::protobuf::Message {
 public:
  ReqclearSweetBox();
  virtual ~ReqclearSweetBox();

  ReqclearSweetBox(const ReqclearSweetBox& from);

  inline ReqclearSweetBox& operator=(const ReqclearSweetBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqclearSweetBox& default_instance();

  void Swap(ReqclearSweetBox* other);

  // implements Message ----------------------------------------------

  ReqclearSweetBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqclearSweetBox& from);
  void MergeFrom(const ReqclearSweetBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqclearSweetBox)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static ReqclearSweetBox* default_instance_;
};
// -------------------------------------------------------------------

class AckclearSweetBox : public ::google::protobuf::Message {
 public:
  AckclearSweetBox();
  virtual ~AckclearSweetBox();

  AckclearSweetBox(const AckclearSweetBox& from);

  inline AckclearSweetBox& operator=(const AckclearSweetBox& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckclearSweetBox& default_instance();

  void Swap(AckclearSweetBox* other);

  // implements Message ----------------------------------------------

  AckclearSweetBox* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckclearSweetBox& from);
  void MergeFrom(const AckclearSweetBox& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.PlayerOpEventResult result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::HelloKittyMsgData::PlayerOpEventResult result() const;
  inline void set_result(::HelloKittyMsgData::PlayerOpEventResult value);

  // repeated .HelloKittyMsgData.Award award = 3;
  inline int award_size() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 3;
  inline const ::HelloKittyMsgData::Award& award(int index) const;
  inline ::HelloKittyMsgData::Award* mutable_award(int index);
  inline ::HelloKittyMsgData::Award* add_award();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >&
      award() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >*
      mutable_award();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckclearSweetBox)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 type_;
  int result_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award > award_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static AckclearSweetBox* default_instance_;
};
// -------------------------------------------------------------------

class returnEventAward : public ::google::protobuf::Message {
 public:
  returnEventAward();
  virtual ~returnEventAward();

  returnEventAward(const returnEventAward& from);

  inline returnEventAward& operator=(const returnEventAward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const returnEventAward& default_instance();

  void Swap(returnEventAward* other);

  // implements Message ----------------------------------------------

  returnEventAward* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const returnEventAward& from);
  void MergeFrom(const returnEventAward& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 eventid = 2;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventidFieldNumber = 2;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);

  // optional uint32 isMail = 3 [default = 0];
  inline bool has_ismail() const;
  inline void clear_ismail();
  static const int kIsMailFieldNumber = 3;
  inline ::google::protobuf::uint32 ismail() const;
  inline void set_ismail(::google::protobuf::uint32 value);

  // repeated .HelloKittyMsgData.Award award = 4;
  inline int award_size() const;
  inline void clear_award();
  static const int kAwardFieldNumber = 4;
  inline const ::HelloKittyMsgData::Award& award(int index) const;
  inline ::HelloKittyMsgData::Award* mutable_award(int index);
  inline ::HelloKittyMsgData::Award* add_award();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >&
      award() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >*
      mutable_award();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.returnEventAward)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_eventid();
  inline void clear_has_eventid();
  inline void set_has_ismail();
  inline void clear_has_ismail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::uint32 ismail_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award > award_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static returnEventAward* default_instance_;
};
// -------------------------------------------------------------------

class EventBuildNotice : public ::google::protobuf::Message {
 public:
  EventBuildNotice();
  virtual ~EventBuildNotice();

  EventBuildNotice(const EventBuildNotice& from);

  inline EventBuildNotice& operator=(const EventBuildNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventBuildNotice& default_instance();

  void Swap(EventBuildNotice* other);

  // implements Message ----------------------------------------------

  EventBuildNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventBuildNotice& from);
  void MergeFrom(const EventBuildNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 eventid = 2;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventidFieldNumber = 2;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);

  // required uint64 BuildID = 3;
  inline bool has_buildid() const;
  inline void clear_buildid();
  static const int kBuildIDFieldNumber = 3;
  inline ::google::protobuf::uint64 buildid() const;
  inline void set_buildid(::google::protobuf::uint64 value);

  // optional uint32 data = 4 [default = 0];
  inline bool has_data() const;
  inline void clear_data();
  static const int kDataFieldNumber = 4;
  inline ::google::protobuf::uint32 data() const;
  inline void set_data(::google::protobuf::uint32 value);

  // optional uint32 timerover = 5 [default = 0];
  inline bool has_timerover() const;
  inline void clear_timerover();
  static const int kTimeroverFieldNumber = 5;
  inline ::google::protobuf::uint32 timerover() const;
  inline void set_timerover(::google::protobuf::uint32 value);

  // optional uint32 lastoptimer = 6 [default = 0];
  inline bool has_lastoptimer() const;
  inline void clear_lastoptimer();
  static const int kLastoptimerFieldNumber = 6;
  inline ::google::protobuf::uint32 lastoptimer() const;
  inline void set_lastoptimer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.EventBuildNotice)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_eventid();
  inline void clear_has_eventid();
  inline void set_has_buildid();
  inline void clear_has_buildid();
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_timerover();
  inline void clear_has_timerover();
  inline void set_has_lastoptimer();
  inline void clear_has_lastoptimer();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint64 buildid_;
  ::google::protobuf::uint32 eventid_;
  ::google::protobuf::uint32 data_;
  ::google::protobuf::uint32 timerover_;
  ::google::protobuf::uint32 lastoptimer_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static EventBuildNotice* default_instance_;
};
// -------------------------------------------------------------------

class EventNotice : public ::google::protobuf::Message {
 public:
  EventNotice();
  virtual ~EventNotice();

  EventNotice(const EventNotice& from);

  inline EventNotice& operator=(const EventNotice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EventNotice& default_instance();

  void Swap(EventNotice* other);

  // implements Message ----------------------------------------------

  EventNotice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EventNotice& from);
  void MergeFrom(const EventNotice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 eventid = 2;
  inline bool has_eventid() const;
  inline void clear_eventid();
  static const int kEventidFieldNumber = 2;
  inline ::google::protobuf::uint32 eventid() const;
  inline void set_eventid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.EventNotice)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_eventid();
  inline void clear_has_eventid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 eventid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static EventNotice* default_instance_;
};
// -------------------------------------------------------------------

class Evententer : public ::google::protobuf::Message {
 public:
  Evententer();
  virtual ~Evententer();

  Evententer(const Evententer& from);

  inline Evententer& operator=(const Evententer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Evententer& default_instance();

  void Swap(Evententer* other);

  // implements Message ----------------------------------------------

  Evententer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Evententer& from);
  void MergeFrom(const Evententer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HelloKittyMsgData.EventBuildNotice eventbuild = 1;
  inline int eventbuild_size() const;
  inline void clear_eventbuild();
  static const int kEventbuildFieldNumber = 1;
  inline const ::HelloKittyMsgData::EventBuildNotice& eventbuild(int index) const;
  inline ::HelloKittyMsgData::EventBuildNotice* mutable_eventbuild(int index);
  inline ::HelloKittyMsgData::EventBuildNotice* add_eventbuild();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventBuildNotice >&
      eventbuild() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventBuildNotice >*
      mutable_eventbuild();

  // repeated .HelloKittyMsgData.EventNotice eventinfo = 2;
  inline int eventinfo_size() const;
  inline void clear_eventinfo();
  static const int kEventinfoFieldNumber = 2;
  inline const ::HelloKittyMsgData::EventNotice& eventinfo(int index) const;
  inline ::HelloKittyMsgData::EventNotice* mutable_eventinfo(int index);
  inline ::HelloKittyMsgData::EventNotice* add_eventinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventNotice >&
      eventinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventNotice >*
      mutable_eventinfo();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.Evententer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventBuildNotice > eventbuild_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventNotice > eventinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_event_2eproto();
  friend void protobuf_AssignDesc_event_2eproto();
  friend void protobuf_ShutdownFile_event_2eproto();

  void InitAsDefaultInstance();
  static Evententer* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerEvent

// optional uint32 EventID = 1 [default = 0];
inline bool PlayerEvent::has_eventid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerEvent::set_has_eventid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerEvent::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerEvent::clear_eventid() {
  eventid_ = 0u;
  clear_has_eventid();
}
inline ::google::protobuf::uint32 PlayerEvent::eventid() const {
  return eventid_;
}
inline void PlayerEvent::set_eventid(::google::protobuf::uint32 value) {
  set_has_eventid();
  eventid_ = value;
}

// optional uint32 EndTimer = 2 [default = 0];
inline bool PlayerEvent::has_endtimer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerEvent::set_has_endtimer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerEvent::clear_has_endtimer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerEvent::clear_endtimer() {
  endtimer_ = 0u;
  clear_has_endtimer();
}
inline ::google::protobuf::uint32 PlayerEvent::endtimer() const {
  return endtimer_;
}
inline void PlayerEvent::set_endtimer(::google::protobuf::uint32 value) {
  set_has_endtimer();
  endtimer_ = value;
}

// -------------------------------------------------------------------

// Award

// optional uint32 awardtype = 1 [default = 0];
inline bool Award::has_awardtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Award::set_has_awardtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Award::clear_has_awardtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Award::clear_awardtype() {
  awardtype_ = 0u;
  clear_has_awardtype();
}
inline ::google::protobuf::uint32 Award::awardtype() const {
  return awardtype_;
}
inline void Award::set_awardtype(::google::protobuf::uint32 value) {
  set_has_awardtype();
  awardtype_ = value;
}

// optional uint32 awardval = 2 [default = 0];
inline bool Award::has_awardval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Award::set_has_awardval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Award::clear_has_awardval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Award::clear_awardval() {
  awardval_ = 0u;
  clear_has_awardval();
}
inline ::google::protobuf::uint32 Award::awardval() const {
  return awardval_;
}
inline void Award::set_awardval(::google::protobuf::uint32 value) {
  set_has_awardval();
  awardval_ = value;
}

// -------------------------------------------------------------------

// vecAward

// repeated .HelloKittyMsgData.Award award = 1;
inline int vecAward::award_size() const {
  return award_.size();
}
inline void vecAward::clear_award() {
  award_.Clear();
}
inline const ::HelloKittyMsgData::Award& vecAward::award(int index) const {
  return award_.Get(index);
}
inline ::HelloKittyMsgData::Award* vecAward::mutable_award(int index) {
  return award_.Mutable(index);
}
inline ::HelloKittyMsgData::Award* vecAward::add_award() {
  return award_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >&
vecAward::award() const {
  return award_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >*
vecAward::mutable_award() {
  return &award_;
}

// -------------------------------------------------------------------

// SaveForEvent

// required uint32 EventID = 1;
inline bool SaveForEvent::has_eventid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SaveForEvent::set_has_eventid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SaveForEvent::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SaveForEvent::clear_eventid() {
  eventid_ = 0u;
  clear_has_eventid();
}
inline ::google::protobuf::uint32 SaveForEvent::eventid() const {
  return eventid_;
}
inline void SaveForEvent::set_eventid(::google::protobuf::uint32 value) {
  set_has_eventid();
  eventid_ = value;
}

// required uint32 IsRun = 2;
inline bool SaveForEvent::has_isrun() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SaveForEvent::set_has_isrun() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SaveForEvent::clear_has_isrun() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SaveForEvent::clear_isrun() {
  isrun_ = 0u;
  clear_has_isrun();
}
inline ::google::protobuf::uint32 SaveForEvent::isrun() const {
  return isrun_;
}
inline void SaveForEvent::set_isrun(::google::protobuf::uint32 value) {
  set_has_isrun();
  isrun_ = value;
}

// required uint32 FlushTimer = 3;
inline bool SaveForEvent::has_flushtimer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SaveForEvent::set_has_flushtimer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SaveForEvent::clear_has_flushtimer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SaveForEvent::clear_flushtimer() {
  flushtimer_ = 0u;
  clear_has_flushtimer();
}
inline ::google::protobuf::uint32 SaveForEvent::flushtimer() const {
  return flushtimer_;
}
inline void SaveForEvent::set_flushtimer(::google::protobuf::uint32 value) {
  set_has_flushtimer();
  flushtimer_ = value;
}

// optional uint32 EndTimer = 4 [default = 0];
inline bool SaveForEvent::has_endtimer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SaveForEvent::set_has_endtimer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SaveForEvent::clear_has_endtimer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SaveForEvent::clear_endtimer() {
  endtimer_ = 0u;
  clear_has_endtimer();
}
inline ::google::protobuf::uint32 SaveForEvent::endtimer() const {
  return endtimer_;
}
inline void SaveForEvent::set_endtimer(::google::protobuf::uint32 value) {
  set_has_endtimer();
  endtimer_ = value;
}

// optional uint32 BuildID = 5 [default = 0];
inline bool SaveForEvent::has_buildid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SaveForEvent::set_has_buildid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SaveForEvent::clear_has_buildid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SaveForEvent::clear_buildid() {
  buildid_ = 0u;
  clear_has_buildid();
}
inline ::google::protobuf::uint32 SaveForEvent::buildid() const {
  return buildid_;
}
inline void SaveForEvent::set_buildid(::google::protobuf::uint32 value) {
  set_has_buildid();
  buildid_ = value;
}

// optional uint32 Value = 6 [default = 0];
inline bool SaveForEvent::has_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SaveForEvent::set_has_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SaveForEvent::clear_has_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SaveForEvent::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 SaveForEvent::value() const {
  return value_;
}
inline void SaveForEvent::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
}

// repeated uint64 OpPlayer = 7;
inline int SaveForEvent::opplayer_size() const {
  return opplayer_.size();
}
inline void SaveForEvent::clear_opplayer() {
  opplayer_.Clear();
}
inline ::google::protobuf::uint64 SaveForEvent::opplayer(int index) const {
  return opplayer_.Get(index);
}
inline void SaveForEvent::set_opplayer(int index, ::google::protobuf::uint64 value) {
  opplayer_.Set(index, value);
}
inline void SaveForEvent::add_opplayer(::google::protobuf::uint64 value) {
  opplayer_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
SaveForEvent::opplayer() const {
  return opplayer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
SaveForEvent::mutable_opplayer() {
  return &opplayer_;
}

// repeated uint32 OpTimer = 8;
inline int SaveForEvent::optimer_size() const {
  return optimer_.size();
}
inline void SaveForEvent::clear_optimer() {
  optimer_.Clear();
}
inline ::google::protobuf::uint32 SaveForEvent::optimer(int index) const {
  return optimer_.Get(index);
}
inline void SaveForEvent::set_optimer(int index, ::google::protobuf::uint32 value) {
  optimer_.Set(index, value);
}
inline void SaveForEvent::add_optimer(::google::protobuf::uint32 value) {
  optimer_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SaveForEvent::optimer() const {
  return optimer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SaveForEvent::mutable_optimer() {
  return &optimer_;
}

// -------------------------------------------------------------------

// opBuilding

// required uint64 charid = 1;
inline bool opBuilding::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void opBuilding::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void opBuilding::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void opBuilding::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 opBuilding::charid() const {
  return charid_;
}
inline void opBuilding::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint64 buildid = 2;
inline bool opBuilding::has_buildid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void opBuilding::set_has_buildid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void opBuilding::clear_has_buildid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void opBuilding::clear_buildid() {
  buildid_ = GOOGLE_ULONGLONG(0);
  clear_has_buildid();
}
inline ::google::protobuf::uint64 opBuilding::buildid() const {
  return buildid_;
}
inline void opBuilding::set_buildid(::google::protobuf::uint64 value) {
  set_has_buildid();
  buildid_ = value;
}

// -------------------------------------------------------------------

// AckopBuilding

// required .HelloKittyMsgData.PlayerOpEventResult result = 1;
inline bool AckopBuilding::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckopBuilding::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckopBuilding::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckopBuilding::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::PlayerOpEventResult AckopBuilding::result() const {
  return static_cast< ::HelloKittyMsgData::PlayerOpEventResult >(result_);
}
inline void AckopBuilding::set_result(::HelloKittyMsgData::PlayerOpEventResult value) {
  assert(::HelloKittyMsgData::PlayerOpEventResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// required uint64 charid = 2;
inline bool AckopBuilding::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckopBuilding::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckopBuilding::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckopBuilding::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AckopBuilding::charid() const {
  return charid_;
}
inline void AckopBuilding::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint64 buildid = 3;
inline bool AckopBuilding::has_buildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckopBuilding::set_has_buildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckopBuilding::clear_has_buildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckopBuilding::clear_buildid() {
  buildid_ = GOOGLE_ULONGLONG(0);
  clear_has_buildid();
}
inline ::google::protobuf::uint64 AckopBuilding::buildid() const {
  return buildid_;
}
inline void AckopBuilding::set_buildid(::google::protobuf::uint64 value) {
  set_has_buildid();
  buildid_ = value;
}

// optional uint32 eventid = 4 [default = 0];
inline bool AckopBuilding::has_eventid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckopBuilding::set_has_eventid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckopBuilding::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckopBuilding::clear_eventid() {
  eventid_ = 0u;
  clear_has_eventid();
}
inline ::google::protobuf::uint32 AckopBuilding::eventid() const {
  return eventid_;
}
inline void AckopBuilding::set_eventid(::google::protobuf::uint32 value) {
  set_has_eventid();
  eventid_ = value;
}

// optional .HelloKittyMsgData.EventProcess process = 5 [default = EventProcess_run];
inline bool AckopBuilding::has_process() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckopBuilding::set_has_process() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckopBuilding::clear_has_process() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckopBuilding::clear_process() {
  process_ = 0;
  clear_has_process();
}
inline ::HelloKittyMsgData::EventProcess AckopBuilding::process() const {
  return static_cast< ::HelloKittyMsgData::EventProcess >(process_);
}
inline void AckopBuilding::set_process(::HelloKittyMsgData::EventProcess value) {
  assert(::HelloKittyMsgData::EventProcess_IsValid(value));
  set_has_process();
  process_ = value;
}

// repeated .HelloKittyMsgData.Award award = 6;
inline int AckopBuilding::award_size() const {
  return award_.size();
}
inline void AckopBuilding::clear_award() {
  award_.Clear();
}
inline const ::HelloKittyMsgData::Award& AckopBuilding::award(int index) const {
  return award_.Get(index);
}
inline ::HelloKittyMsgData::Award* AckopBuilding::mutable_award(int index) {
  return award_.Mutable(index);
}
inline ::HelloKittyMsgData::Award* AckopBuilding::add_award() {
  return award_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >&
AckopBuilding::award() const {
  return award_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >*
AckopBuilding::mutable_award() {
  return &award_;
}

// optional uint32 extraid = 7 [default = 0];
inline bool AckopBuilding::has_extraid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AckopBuilding::set_has_extraid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AckopBuilding::clear_has_extraid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AckopBuilding::clear_extraid() {
  extraid_ = 0u;
  clear_has_extraid();
}
inline ::google::protobuf::uint32 AckopBuilding::extraid() const {
  return extraid_;
}
inline void AckopBuilding::set_extraid(::google::protobuf::uint32 value) {
  set_has_extraid();
  extraid_ = value;
}

// -------------------------------------------------------------------

// ReqclearSweetBox

// required uint32 type = 1;
inline bool ReqclearSweetBox::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqclearSweetBox::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqclearSweetBox::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqclearSweetBox::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ReqclearSweetBox::type() const {
  return type_;
}
inline void ReqclearSweetBox::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// AckclearSweetBox

// required uint32 type = 1;
inline bool AckclearSweetBox::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckclearSweetBox::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckclearSweetBox::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckclearSweetBox::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 AckclearSweetBox::type() const {
  return type_;
}
inline void AckclearSweetBox::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required .HelloKittyMsgData.PlayerOpEventResult result = 2;
inline bool AckclearSweetBox::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckclearSweetBox::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckclearSweetBox::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckclearSweetBox::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::PlayerOpEventResult AckclearSweetBox::result() const {
  return static_cast< ::HelloKittyMsgData::PlayerOpEventResult >(result_);
}
inline void AckclearSweetBox::set_result(::HelloKittyMsgData::PlayerOpEventResult value) {
  assert(::HelloKittyMsgData::PlayerOpEventResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// repeated .HelloKittyMsgData.Award award = 3;
inline int AckclearSweetBox::award_size() const {
  return award_.size();
}
inline void AckclearSweetBox::clear_award() {
  award_.Clear();
}
inline const ::HelloKittyMsgData::Award& AckclearSweetBox::award(int index) const {
  return award_.Get(index);
}
inline ::HelloKittyMsgData::Award* AckclearSweetBox::mutable_award(int index) {
  return award_.Mutable(index);
}
inline ::HelloKittyMsgData::Award* AckclearSweetBox::add_award() {
  return award_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >&
AckclearSweetBox::award() const {
  return award_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >*
AckclearSweetBox::mutable_award() {
  return &award_;
}

// -------------------------------------------------------------------

// returnEventAward

// required uint64 charid = 1;
inline bool returnEventAward::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void returnEventAward::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void returnEventAward::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void returnEventAward::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 returnEventAward::charid() const {
  return charid_;
}
inline void returnEventAward::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 eventid = 2;
inline bool returnEventAward::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void returnEventAward::set_has_eventid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void returnEventAward::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void returnEventAward::clear_eventid() {
  eventid_ = 0u;
  clear_has_eventid();
}
inline ::google::protobuf::uint32 returnEventAward::eventid() const {
  return eventid_;
}
inline void returnEventAward::set_eventid(::google::protobuf::uint32 value) {
  set_has_eventid();
  eventid_ = value;
}

// optional uint32 isMail = 3 [default = 0];
inline bool returnEventAward::has_ismail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void returnEventAward::set_has_ismail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void returnEventAward::clear_has_ismail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void returnEventAward::clear_ismail() {
  ismail_ = 0u;
  clear_has_ismail();
}
inline ::google::protobuf::uint32 returnEventAward::ismail() const {
  return ismail_;
}
inline void returnEventAward::set_ismail(::google::protobuf::uint32 value) {
  set_has_ismail();
  ismail_ = value;
}

// repeated .HelloKittyMsgData.Award award = 4;
inline int returnEventAward::award_size() const {
  return award_.size();
}
inline void returnEventAward::clear_award() {
  award_.Clear();
}
inline const ::HelloKittyMsgData::Award& returnEventAward::award(int index) const {
  return award_.Get(index);
}
inline ::HelloKittyMsgData::Award* returnEventAward::mutable_award(int index) {
  return award_.Mutable(index);
}
inline ::HelloKittyMsgData::Award* returnEventAward::add_award() {
  return award_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >&
returnEventAward::award() const {
  return award_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Award >*
returnEventAward::mutable_award() {
  return &award_;
}

// -------------------------------------------------------------------

// EventBuildNotice

// required uint64 charid = 1;
inline bool EventBuildNotice::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventBuildNotice::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventBuildNotice::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventBuildNotice::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 EventBuildNotice::charid() const {
  return charid_;
}
inline void EventBuildNotice::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 eventid = 2;
inline bool EventBuildNotice::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventBuildNotice::set_has_eventid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventBuildNotice::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventBuildNotice::clear_eventid() {
  eventid_ = 0u;
  clear_has_eventid();
}
inline ::google::protobuf::uint32 EventBuildNotice::eventid() const {
  return eventid_;
}
inline void EventBuildNotice::set_eventid(::google::protobuf::uint32 value) {
  set_has_eventid();
  eventid_ = value;
}

// required uint64 BuildID = 3;
inline bool EventBuildNotice::has_buildid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EventBuildNotice::set_has_buildid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EventBuildNotice::clear_has_buildid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EventBuildNotice::clear_buildid() {
  buildid_ = GOOGLE_ULONGLONG(0);
  clear_has_buildid();
}
inline ::google::protobuf::uint64 EventBuildNotice::buildid() const {
  return buildid_;
}
inline void EventBuildNotice::set_buildid(::google::protobuf::uint64 value) {
  set_has_buildid();
  buildid_ = value;
}

// optional uint32 data = 4 [default = 0];
inline bool EventBuildNotice::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EventBuildNotice::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EventBuildNotice::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EventBuildNotice::clear_data() {
  data_ = 0u;
  clear_has_data();
}
inline ::google::protobuf::uint32 EventBuildNotice::data() const {
  return data_;
}
inline void EventBuildNotice::set_data(::google::protobuf::uint32 value) {
  set_has_data();
  data_ = value;
}

// optional uint32 timerover = 5 [default = 0];
inline bool EventBuildNotice::has_timerover() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EventBuildNotice::set_has_timerover() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EventBuildNotice::clear_has_timerover() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EventBuildNotice::clear_timerover() {
  timerover_ = 0u;
  clear_has_timerover();
}
inline ::google::protobuf::uint32 EventBuildNotice::timerover() const {
  return timerover_;
}
inline void EventBuildNotice::set_timerover(::google::protobuf::uint32 value) {
  set_has_timerover();
  timerover_ = value;
}

// optional uint32 lastoptimer = 6 [default = 0];
inline bool EventBuildNotice::has_lastoptimer() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EventBuildNotice::set_has_lastoptimer() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EventBuildNotice::clear_has_lastoptimer() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EventBuildNotice::clear_lastoptimer() {
  lastoptimer_ = 0u;
  clear_has_lastoptimer();
}
inline ::google::protobuf::uint32 EventBuildNotice::lastoptimer() const {
  return lastoptimer_;
}
inline void EventBuildNotice::set_lastoptimer(::google::protobuf::uint32 value) {
  set_has_lastoptimer();
  lastoptimer_ = value;
}

// -------------------------------------------------------------------

// EventNotice

// required uint64 charid = 1;
inline bool EventNotice::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EventNotice::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EventNotice::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EventNotice::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 EventNotice::charid() const {
  return charid_;
}
inline void EventNotice::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 eventid = 2;
inline bool EventNotice::has_eventid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EventNotice::set_has_eventid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EventNotice::clear_has_eventid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EventNotice::clear_eventid() {
  eventid_ = 0u;
  clear_has_eventid();
}
inline ::google::protobuf::uint32 EventNotice::eventid() const {
  return eventid_;
}
inline void EventNotice::set_eventid(::google::protobuf::uint32 value) {
  set_has_eventid();
  eventid_ = value;
}

// -------------------------------------------------------------------

// Evententer

// repeated .HelloKittyMsgData.EventBuildNotice eventbuild = 1;
inline int Evententer::eventbuild_size() const {
  return eventbuild_.size();
}
inline void Evententer::clear_eventbuild() {
  eventbuild_.Clear();
}
inline const ::HelloKittyMsgData::EventBuildNotice& Evententer::eventbuild(int index) const {
  return eventbuild_.Get(index);
}
inline ::HelloKittyMsgData::EventBuildNotice* Evententer::mutable_eventbuild(int index) {
  return eventbuild_.Mutable(index);
}
inline ::HelloKittyMsgData::EventBuildNotice* Evententer::add_eventbuild() {
  return eventbuild_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventBuildNotice >&
Evententer::eventbuild() const {
  return eventbuild_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventBuildNotice >*
Evententer::mutable_eventbuild() {
  return &eventbuild_;
}

// repeated .HelloKittyMsgData.EventNotice eventinfo = 2;
inline int Evententer::eventinfo_size() const {
  return eventinfo_.size();
}
inline void Evententer::clear_eventinfo() {
  eventinfo_.Clear();
}
inline const ::HelloKittyMsgData::EventNotice& Evententer::eventinfo(int index) const {
  return eventinfo_.Get(index);
}
inline ::HelloKittyMsgData::EventNotice* Evententer::mutable_eventinfo(int index) {
  return eventinfo_.Mutable(index);
}
inline ::HelloKittyMsgData::EventNotice* Evententer::add_eventinfo() {
  return eventinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventNotice >&
Evententer::eventinfo() const {
  return eventinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EventNotice >*
Evententer::mutable_eventinfo() {
  return &eventinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::PlayerEventType>() {
  return ::HelloKittyMsgData::PlayerEventType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::PlayerOpEventResult>() {
  return ::HelloKittyMsgData::PlayerOpEventResult_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::EventProcess>() {
  return ::HelloKittyMsgData::EventProcess_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_event_2eproto__INCLUDED
