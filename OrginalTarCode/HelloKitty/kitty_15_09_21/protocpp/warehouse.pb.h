// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: warehouse.proto

#ifndef PROTOBUF_warehouse_2eproto__INCLUDED
#define PROTOBUF_warehouse_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "trade.pb.h"
#include "build.pb.h"
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_warehouse_2eproto();
void protobuf_AssignDesc_warehouse_2eproto();
void protobuf_ShutdownFile_warehouse_2eproto();

class ReqStoreItem;
class AckFlushWareHouse;
class ReqAddItem;
class AckUpdateItem;
class AckAddItemReturn;
class AckFlushWareBuild;
class AckUpdateWareBuid;
class ReqPayGrid;

enum StoreItemType {
  Store_Type_Ware_House = 0,
  Store_Type_Build = 1,
  Store_Type_Sale = 2
};
bool StoreItemType_IsValid(int value);
const StoreItemType StoreItemType_MIN = Store_Type_Ware_House;
const StoreItemType StoreItemType_MAX = Store_Type_Sale;
const int StoreItemType_ARRAYSIZE = StoreItemType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StoreItemType_descriptor();
inline const ::std::string& StoreItemType_Name(StoreItemType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StoreItemType_descriptor(), value);
}
inline bool StoreItemType_Parse(
    const ::std::string& name, StoreItemType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StoreItemType>(
    StoreItemType_descriptor(), name, value);
}
// ===================================================================

class ReqStoreItem : public ::google::protobuf::Message {
 public:
  ReqStoreItem();
  virtual ~ReqStoreItem();

  ReqStoreItem(const ReqStoreItem& from);

  inline ReqStoreItem& operator=(const ReqStoreItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqStoreItem& default_instance();

  void Swap(ReqStoreItem* other);

  // implements Message ----------------------------------------------

  ReqStoreItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqStoreItem& from);
  void MergeFrom(const ReqStoreItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.StoreItemType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::HelloKittyMsgData::StoreItemType type() const;
  inline void set_type(::HelloKittyMsgData::StoreItemType value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqStoreItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_warehouse_2eproto();
  friend void protobuf_AssignDesc_warehouse_2eproto();
  friend void protobuf_ShutdownFile_warehouse_2eproto();

  void InitAsDefaultInstance();
  static ReqStoreItem* default_instance_;
};
// -------------------------------------------------------------------

class AckFlushWareHouse : public ::google::protobuf::Message {
 public:
  AckFlushWareHouse();
  virtual ~AckFlushWareHouse();

  AckFlushWareHouse(const AckFlushWareHouse& from);

  inline AckFlushWareHouse& operator=(const AckFlushWareHouse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckFlushWareHouse& default_instance();

  void Swap(AckFlushWareHouse* other);

  // implements Message ----------------------------------------------

  AckFlushWareHouse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckFlushWareHouse& from);
  void MergeFrom(const AckFlushWareHouse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HelloKittyMsgData.PbStoreItem store_items = 1;
  inline int store_items_size() const;
  inline void clear_store_items();
  static const int kStoreItemsFieldNumber = 1;
  inline const ::HelloKittyMsgData::PbStoreItem& store_items(int index) const;
  inline ::HelloKittyMsgData::PbStoreItem* mutable_store_items(int index);
  inline ::HelloKittyMsgData::PbStoreItem* add_store_items();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem >&
      store_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem >*
      mutable_store_items();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckFlushWareHouse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem > store_items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_warehouse_2eproto();
  friend void protobuf_AssignDesc_warehouse_2eproto();
  friend void protobuf_ShutdownFile_warehouse_2eproto();

  void InitAsDefaultInstance();
  static AckFlushWareHouse* default_instance_;
};
// -------------------------------------------------------------------

class ReqAddItem : public ::google::protobuf::Message {
 public:
  ReqAddItem();
  virtual ~ReqAddItem();

  ReqAddItem(const ReqAddItem& from);

  inline ReqAddItem& operator=(const ReqAddItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAddItem& default_instance();

  void Swap(ReqAddItem* other);

  // implements Message ----------------------------------------------

  ReqAddItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAddItem& from);
  void MergeFrom(const ReqAddItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.PbStoreItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::HelloKittyMsgData::PbStoreItem& item() const;
  inline ::HelloKittyMsgData::PbStoreItem* mutable_item();
  inline ::HelloKittyMsgData::PbStoreItem* release_item();
  inline void set_allocated_item(::HelloKittyMsgData::PbStoreItem* item);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqAddItem)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::PbStoreItem* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_warehouse_2eproto();
  friend void protobuf_AssignDesc_warehouse_2eproto();
  friend void protobuf_ShutdownFile_warehouse_2eproto();

  void InitAsDefaultInstance();
  static ReqAddItem* default_instance_;
};
// -------------------------------------------------------------------

class AckUpdateItem : public ::google::protobuf::Message {
 public:
  AckUpdateItem();
  virtual ~AckUpdateItem();

  AckUpdateItem(const AckUpdateItem& from);

  inline AckUpdateItem& operator=(const AckUpdateItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUpdateItem& default_instance();

  void Swap(AckUpdateItem* other);

  // implements Message ----------------------------------------------

  AckUpdateItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUpdateItem& from);
  void MergeFrom(const AckUpdateItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.PbStoreItem item = 1;
  inline bool has_item() const;
  inline void clear_item();
  static const int kItemFieldNumber = 1;
  inline const ::HelloKittyMsgData::PbStoreItem& item() const;
  inline ::HelloKittyMsgData::PbStoreItem* mutable_item();
  inline ::HelloKittyMsgData::PbStoreItem* release_item();
  inline void set_allocated_item(::HelloKittyMsgData::PbStoreItem* item);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckUpdateItem)
 private:
  inline void set_has_item();
  inline void clear_has_item();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::PbStoreItem* item_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_warehouse_2eproto();
  friend void protobuf_AssignDesc_warehouse_2eproto();
  friend void protobuf_ShutdownFile_warehouse_2eproto();

  void InitAsDefaultInstance();
  static AckUpdateItem* default_instance_;
};
// -------------------------------------------------------------------

class AckAddItemReturn : public ::google::protobuf::Message {
 public:
  AckAddItemReturn();
  virtual ~AckAddItemReturn();

  AckAddItemReturn(const AckAddItemReturn& from);

  inline AckAddItemReturn& operator=(const AckAddItemReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckAddItemReturn& default_instance();

  void Swap(AckAddItemReturn* other);

  // implements Message ----------------------------------------------

  AckAddItemReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckAddItemReturn& from);
  void MergeFrom(const AckAddItemReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline bool ret() const;
  inline void set_ret(bool value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckAddItemReturn)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_warehouse_2eproto();
  friend void protobuf_AssignDesc_warehouse_2eproto();
  friend void protobuf_ShutdownFile_warehouse_2eproto();

  void InitAsDefaultInstance();
  static AckAddItemReturn* default_instance_;
};
// -------------------------------------------------------------------

class AckFlushWareBuild : public ::google::protobuf::Message {
 public:
  AckFlushWareBuild();
  virtual ~AckFlushWareBuild();

  AckFlushWareBuild(const AckFlushWareBuild& from);

  inline AckFlushWareBuild& operator=(const AckFlushWareBuild& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckFlushWareBuild& default_instance();

  void Swap(AckFlushWareBuild* other);

  // implements Message ----------------------------------------------

  AckFlushWareBuild* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckFlushWareBuild& from);
  void MergeFrom(const AckFlushWareBuild& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .HelloKittyMsgData.WareHouseBuildBase warebuild = 1;
  inline int warebuild_size() const;
  inline void clear_warebuild();
  static const int kWarebuildFieldNumber = 1;
  inline const ::HelloKittyMsgData::WareHouseBuildBase& warebuild(int index) const;
  inline ::HelloKittyMsgData::WareHouseBuildBase* mutable_warebuild(int index);
  inline ::HelloKittyMsgData::WareHouseBuildBase* add_warebuild();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase >&
      warebuild() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase >*
      mutable_warebuild();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckFlushWareBuild)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase > warebuild_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_warehouse_2eproto();
  friend void protobuf_AssignDesc_warehouse_2eproto();
  friend void protobuf_ShutdownFile_warehouse_2eproto();

  void InitAsDefaultInstance();
  static AckFlushWareBuild* default_instance_;
};
// -------------------------------------------------------------------

class AckUpdateWareBuid : public ::google::protobuf::Message {
 public:
  AckUpdateWareBuid();
  virtual ~AckUpdateWareBuid();

  AckUpdateWareBuid(const AckUpdateWareBuid& from);

  inline AckUpdateWareBuid& operator=(const AckUpdateWareBuid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUpdateWareBuid& default_instance();

  void Swap(AckUpdateWareBuid* other);

  // implements Message ----------------------------------------------

  AckUpdateWareBuid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUpdateWareBuid& from);
  void MergeFrom(const AckUpdateWareBuid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.WareHouseBuildBase warebuild = 1;
  inline bool has_warebuild() const;
  inline void clear_warebuild();
  static const int kWarebuildFieldNumber = 1;
  inline const ::HelloKittyMsgData::WareHouseBuildBase& warebuild() const;
  inline ::HelloKittyMsgData::WareHouseBuildBase* mutable_warebuild();
  inline ::HelloKittyMsgData::WareHouseBuildBase* release_warebuild();
  inline void set_allocated_warebuild(::HelloKittyMsgData::WareHouseBuildBase* warebuild);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckUpdateWareBuid)
 private:
  inline void set_has_warebuild();
  inline void clear_has_warebuild();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::WareHouseBuildBase* warebuild_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_warehouse_2eproto();
  friend void protobuf_AssignDesc_warehouse_2eproto();
  friend void protobuf_ShutdownFile_warehouse_2eproto();

  void InitAsDefaultInstance();
  static AckUpdateWareBuid* default_instance_;
};
// -------------------------------------------------------------------

class ReqPayGrid : public ::google::protobuf::Message {
 public:
  ReqPayGrid();
  virtual ~ReqPayGrid();

  ReqPayGrid(const ReqPayGrid& from);

  inline ReqPayGrid& operator=(const ReqPayGrid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPayGrid& default_instance();

  void Swap(ReqPayGrid* other);

  // implements Message ----------------------------------------------

  ReqPayGrid* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPayGrid& from);
  void MergeFrom(const ReqPayGrid& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 grid = 1;
  inline bool has_grid() const;
  inline void clear_grid();
  static const int kGridFieldNumber = 1;
  inline ::google::protobuf::uint32 grid() const;
  inline void set_grid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqPayGrid)
 private:
  inline void set_has_grid();
  inline void clear_has_grid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 grid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_warehouse_2eproto();
  friend void protobuf_AssignDesc_warehouse_2eproto();
  friend void protobuf_ShutdownFile_warehouse_2eproto();

  void InitAsDefaultInstance();
  static ReqPayGrid* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqStoreItem

// required .HelloKittyMsgData.StoreItemType type = 1;
inline bool ReqStoreItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqStoreItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqStoreItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqStoreItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::HelloKittyMsgData::StoreItemType ReqStoreItem::type() const {
  return static_cast< ::HelloKittyMsgData::StoreItemType >(type_);
}
inline void ReqStoreItem::set_type(::HelloKittyMsgData::StoreItemType value) {
  assert(::HelloKittyMsgData::StoreItemType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint64 charid = 2;
inline bool ReqStoreItem::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqStoreItem::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqStoreItem::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqStoreItem::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReqStoreItem::charid() const {
  return charid_;
}
inline void ReqStoreItem::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// AckFlushWareHouse

// repeated .HelloKittyMsgData.PbStoreItem store_items = 1;
inline int AckFlushWareHouse::store_items_size() const {
  return store_items_.size();
}
inline void AckFlushWareHouse::clear_store_items() {
  store_items_.Clear();
}
inline const ::HelloKittyMsgData::PbStoreItem& AckFlushWareHouse::store_items(int index) const {
  return store_items_.Get(index);
}
inline ::HelloKittyMsgData::PbStoreItem* AckFlushWareHouse::mutable_store_items(int index) {
  return store_items_.Mutable(index);
}
inline ::HelloKittyMsgData::PbStoreItem* AckFlushWareHouse::add_store_items() {
  return store_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem >&
AckFlushWareHouse::store_items() const {
  return store_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem >*
AckFlushWareHouse::mutable_store_items() {
  return &store_items_;
}

// -------------------------------------------------------------------

// ReqAddItem

// required .HelloKittyMsgData.PbStoreItem item = 1;
inline bool ReqAddItem::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqAddItem::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqAddItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqAddItem::clear_item() {
  if (item_ != NULL) item_->::HelloKittyMsgData::PbStoreItem::Clear();
  clear_has_item();
}
inline const ::HelloKittyMsgData::PbStoreItem& ReqAddItem::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::HelloKittyMsgData::PbStoreItem* ReqAddItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::HelloKittyMsgData::PbStoreItem;
  return item_;
}
inline ::HelloKittyMsgData::PbStoreItem* ReqAddItem::release_item() {
  clear_has_item();
  ::HelloKittyMsgData::PbStoreItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void ReqAddItem::set_allocated_item(::HelloKittyMsgData::PbStoreItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// AckUpdateItem

// required .HelloKittyMsgData.PbStoreItem item = 1;
inline bool AckUpdateItem::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUpdateItem::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUpdateItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUpdateItem::clear_item() {
  if (item_ != NULL) item_->::HelloKittyMsgData::PbStoreItem::Clear();
  clear_has_item();
}
inline const ::HelloKittyMsgData::PbStoreItem& AckUpdateItem::item() const {
  return item_ != NULL ? *item_ : *default_instance_->item_;
}
inline ::HelloKittyMsgData::PbStoreItem* AckUpdateItem::mutable_item() {
  set_has_item();
  if (item_ == NULL) item_ = new ::HelloKittyMsgData::PbStoreItem;
  return item_;
}
inline ::HelloKittyMsgData::PbStoreItem* AckUpdateItem::release_item() {
  clear_has_item();
  ::HelloKittyMsgData::PbStoreItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void AckUpdateItem::set_allocated_item(::HelloKittyMsgData::PbStoreItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
}

// -------------------------------------------------------------------

// AckAddItemReturn

// required bool ret = 1;
inline bool AckAddItemReturn::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckAddItemReturn::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckAddItemReturn::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckAddItemReturn::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool AckAddItemReturn::ret() const {
  return ret_;
}
inline void AckAddItemReturn::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// AckFlushWareBuild

// repeated .HelloKittyMsgData.WareHouseBuildBase warebuild = 1;
inline int AckFlushWareBuild::warebuild_size() const {
  return warebuild_.size();
}
inline void AckFlushWareBuild::clear_warebuild() {
  warebuild_.Clear();
}
inline const ::HelloKittyMsgData::WareHouseBuildBase& AckFlushWareBuild::warebuild(int index) const {
  return warebuild_.Get(index);
}
inline ::HelloKittyMsgData::WareHouseBuildBase* AckFlushWareBuild::mutable_warebuild(int index) {
  return warebuild_.Mutable(index);
}
inline ::HelloKittyMsgData::WareHouseBuildBase* AckFlushWareBuild::add_warebuild() {
  return warebuild_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase >&
AckFlushWareBuild::warebuild() const {
  return warebuild_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase >*
AckFlushWareBuild::mutable_warebuild() {
  return &warebuild_;
}

// -------------------------------------------------------------------

// AckUpdateWareBuid

// required .HelloKittyMsgData.WareHouseBuildBase warebuild = 1;
inline bool AckUpdateWareBuid::has_warebuild() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUpdateWareBuid::set_has_warebuild() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUpdateWareBuid::clear_has_warebuild() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUpdateWareBuid::clear_warebuild() {
  if (warebuild_ != NULL) warebuild_->::HelloKittyMsgData::WareHouseBuildBase::Clear();
  clear_has_warebuild();
}
inline const ::HelloKittyMsgData::WareHouseBuildBase& AckUpdateWareBuid::warebuild() const {
  return warebuild_ != NULL ? *warebuild_ : *default_instance_->warebuild_;
}
inline ::HelloKittyMsgData::WareHouseBuildBase* AckUpdateWareBuid::mutable_warebuild() {
  set_has_warebuild();
  if (warebuild_ == NULL) warebuild_ = new ::HelloKittyMsgData::WareHouseBuildBase;
  return warebuild_;
}
inline ::HelloKittyMsgData::WareHouseBuildBase* AckUpdateWareBuid::release_warebuild() {
  clear_has_warebuild();
  ::HelloKittyMsgData::WareHouseBuildBase* temp = warebuild_;
  warebuild_ = NULL;
  return temp;
}
inline void AckUpdateWareBuid::set_allocated_warebuild(::HelloKittyMsgData::WareHouseBuildBase* warebuild) {
  delete warebuild_;
  warebuild_ = warebuild;
  if (warebuild) {
    set_has_warebuild();
  } else {
    clear_has_warebuild();
  }
}

// -------------------------------------------------------------------

// ReqPayGrid

// required uint32 grid = 1;
inline bool ReqPayGrid::has_grid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPayGrid::set_has_grid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPayGrid::clear_has_grid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPayGrid::clear_grid() {
  grid_ = 0u;
  clear_has_grid();
}
inline ::google::protobuf::uint32 ReqPayGrid::grid() const {
  return grid_;
}
inline void ReqPayGrid::set_grid(::google::protobuf::uint32 value) {
  set_has_grid();
  grid_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::StoreItemType>() {
  return ::HelloKittyMsgData::StoreItemType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_warehouse_2eproto__INCLUDED
