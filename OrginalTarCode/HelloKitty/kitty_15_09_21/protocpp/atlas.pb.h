// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: atlas.proto

#ifndef PROTOBUF_atlas_2eproto__INCLUDED
#define PROTOBUF_atlas_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_atlas_2eproto();
void protobuf_AssignDesc_atlas_2eproto();
void protobuf_ShutdownFile_atlas_2eproto();

class ReqAtlas;
class AckAtlas;
class AckAddAtlas;

// ===================================================================

class ReqAtlas : public ::google::protobuf::Message {
 public:
  ReqAtlas();
  virtual ~ReqAtlas();

  ReqAtlas(const ReqAtlas& from);

  inline ReqAtlas& operator=(const ReqAtlas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAtlas& default_instance();

  void Swap(ReqAtlas* other);

  // implements Message ----------------------------------------------

  ReqAtlas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAtlas& from);
  void MergeFrom(const ReqAtlas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqAtlas)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_atlas_2eproto();
  friend void protobuf_AssignDesc_atlas_2eproto();
  friend void protobuf_ShutdownFile_atlas_2eproto();

  void InitAsDefaultInstance();
  static ReqAtlas* default_instance_;
};
// -------------------------------------------------------------------

class AckAtlas : public ::google::protobuf::Message {
 public:
  AckAtlas();
  virtual ~AckAtlas();

  AckAtlas(const AckAtlas& from);

  inline AckAtlas& operator=(const AckAtlas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckAtlas& default_instance();

  void Swap(AckAtlas* other);

  // implements Message ----------------------------------------------

  AckAtlas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckAtlas& from);
  void MergeFrom(const AckAtlas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 atlas = 1;
  inline int atlas_size() const;
  inline void clear_atlas();
  static const int kAtlasFieldNumber = 1;
  inline ::google::protobuf::uint32 atlas(int index) const;
  inline void set_atlas(int index, ::google::protobuf::uint32 value);
  inline void add_atlas(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      atlas() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_atlas();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckAtlas)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > atlas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_atlas_2eproto();
  friend void protobuf_AssignDesc_atlas_2eproto();
  friend void protobuf_ShutdownFile_atlas_2eproto();

  void InitAsDefaultInstance();
  static AckAtlas* default_instance_;
};
// -------------------------------------------------------------------

class AckAddAtlas : public ::google::protobuf::Message {
 public:
  AckAddAtlas();
  virtual ~AckAddAtlas();

  AckAddAtlas(const AckAddAtlas& from);

  inline AckAddAtlas& operator=(const AckAddAtlas& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckAddAtlas& default_instance();

  void Swap(AckAddAtlas* other);

  // implements Message ----------------------------------------------

  AckAddAtlas* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckAddAtlas& from);
  void MergeFrom(const AckAddAtlas& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 atlas = 1;
  inline bool has_atlas() const;
  inline void clear_atlas();
  static const int kAtlasFieldNumber = 1;
  inline ::google::protobuf::uint32 atlas() const;
  inline void set_atlas(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckAddAtlas)
 private:
  inline void set_has_atlas();
  inline void clear_has_atlas();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 atlas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_atlas_2eproto();
  friend void protobuf_AssignDesc_atlas_2eproto();
  friend void protobuf_ShutdownFile_atlas_2eproto();

  void InitAsDefaultInstance();
  static AckAddAtlas* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqAtlas

// -------------------------------------------------------------------

// AckAtlas

// repeated uint32 atlas = 1;
inline int AckAtlas::atlas_size() const {
  return atlas_.size();
}
inline void AckAtlas::clear_atlas() {
  atlas_.Clear();
}
inline ::google::protobuf::uint32 AckAtlas::atlas(int index) const {
  return atlas_.Get(index);
}
inline void AckAtlas::set_atlas(int index, ::google::protobuf::uint32 value) {
  atlas_.Set(index, value);
}
inline void AckAtlas::add_atlas(::google::protobuf::uint32 value) {
  atlas_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AckAtlas::atlas() const {
  return atlas_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AckAtlas::mutable_atlas() {
  return &atlas_;
}

// -------------------------------------------------------------------

// AckAddAtlas

// required uint32 atlas = 1;
inline bool AckAddAtlas::has_atlas() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckAddAtlas::set_has_atlas() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckAddAtlas::clear_has_atlas() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckAddAtlas::clear_atlas() {
  atlas_ = 0u;
  clear_has_atlas();
}
inline ::google::protobuf::uint32 AckAddAtlas::atlas() const {
  return atlas_;
}
inline void AckAddAtlas::set_atlas(::google::protobuf::uint32 value) {
  set_has_atlas();
  atlas_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_atlas_2eproto__INCLUDED
