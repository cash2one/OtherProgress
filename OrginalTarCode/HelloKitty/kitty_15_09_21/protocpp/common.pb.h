// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_common_2eproto();
void protobuf_AssignDesc_common_2eproto();
void protobuf_ShutdownFile_common_2eproto();

class AckReturnError;
class AckReturnSuccess;
class AckUpdateAttrVal;
class RubbishData;
class ReqPurchaseItem;

enum ErrorCodeType {
  Error_Common_Occupy = 0,
  Gold_Not_Enough = 1,
  Gem_Not_Enough = 2,
  Level_Not_Enough = 3,
  Guest_Not_Enough = 4,
  Friend_Val_Not_Enough = 5,
  Happy_Val_Not_Enough = 6,
  Material_Not_Enough = 7,
  WareHouse_Is_Full = 8,
  Worker_Not_Enough = 9,
  Build_In_CD = 10,
  Item_Not_Enough = 11,
  Email_Is_Enough = 12,
  Player_Not_Exist = 13,
  Email_Is_Empty = 14,
  Card_Is_Used = 15,
  Card_Is_Not_Suit = 16
};
bool ErrorCodeType_IsValid(int value);
const ErrorCodeType ErrorCodeType_MIN = Error_Common_Occupy;
const ErrorCodeType ErrorCodeType_MAX = Card_Is_Not_Suit;
const int ErrorCodeType_ARRAYSIZE = ErrorCodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ErrorCodeType_descriptor();
inline const ::std::string& ErrorCodeType_Name(ErrorCodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ErrorCodeType_descriptor(), value);
}
inline bool ErrorCodeType_Parse(
    const ::std::string& name, ErrorCodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ErrorCodeType>(
    ErrorCodeType_descriptor(), name, value);
}
enum BufferTypeID {
  Buffer_Type_Gold = 1,
  Buffer_Type_Range = 2
};
bool BufferTypeID_IsValid(int value);
const BufferTypeID BufferTypeID_MIN = Buffer_Type_Gold;
const BufferTypeID BufferTypeID_MAX = Buffer_Type_Range;
const int BufferTypeID_ARRAYSIZE = BufferTypeID_MAX + 1;

const ::google::protobuf::EnumDescriptor* BufferTypeID_descriptor();
inline const ::std::string& BufferTypeID_Name(BufferTypeID value) {
  return ::google::protobuf::internal::NameOfEnum(
    BufferTypeID_descriptor(), value);
}
inline bool BufferTypeID_Parse(
    const ::std::string& name, BufferTypeID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BufferTypeID>(
    BufferTypeID_descriptor(), name, value);
}
enum SuccessCodeType {
  Sale_Cell_Op = 3
};
bool SuccessCodeType_IsValid(int value);
const SuccessCodeType SuccessCodeType_MIN = Sale_Cell_Op;
const SuccessCodeType SuccessCodeType_MAX = Sale_Cell_Op;
const int SuccessCodeType_ARRAYSIZE = SuccessCodeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SuccessCodeType_descriptor();
inline const ::std::string& SuccessCodeType_Name(SuccessCodeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SuccessCodeType_descriptor(), value);
}
inline bool SuccessCodeType_Parse(
    const ::std::string& name, SuccessCodeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SuccessCodeType>(
    SuccessCodeType_descriptor(), name, value);
}
enum AttrType {
  Attr_Level = 0,
  Attr_Gold = 1,
  Attr_Gem = 2,
  Attr_Exp = 3,
  Attr_Worker = 4,
  Attr_Happy_Val = 5,
  Attr_Friend_Val = 6,
  Attr_Ware_Grid_Val = 7,
  Attr_Carnival_Val = 8,
  Attr_Sweet_Val = 9,
  Attr_RandToy_Val = 10,
  Attr_Sall_Grid_Val = 11,
  Attr_Max = 20
};
bool AttrType_IsValid(int value);
const AttrType AttrType_MIN = Attr_Level;
const AttrType AttrType_MAX = Attr_Max;
const int AttrType_ARRAYSIZE = AttrType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AttrType_descriptor();
inline const ::std::string& AttrType_Name(AttrType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AttrType_descriptor(), value);
}
inline bool AttrType_Parse(
    const ::std::string& name, AttrType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AttrType>(
    AttrType_descriptor(), name, value);
}
// ===================================================================

class AckReturnError : public ::google::protobuf::Message {
 public:
  AckReturnError();
  virtual ~AckReturnError();

  AckReturnError(const AckReturnError& from);

  inline AckReturnError& operator=(const AckReturnError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReturnError& default_instance();

  void Swap(AckReturnError* other);

  // implements Message ----------------------------------------------

  AckReturnError* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReturnError& from);
  void MergeFrom(const AckReturnError& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.ErrorCodeType reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::HelloKittyMsgData::ErrorCodeType reason() const;
  inline void set_reason(::HelloKittyMsgData::ErrorCodeType value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReturnError)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static AckReturnError* default_instance_;
};
// -------------------------------------------------------------------

class AckReturnSuccess : public ::google::protobuf::Message {
 public:
  AckReturnSuccess();
  virtual ~AckReturnSuccess();

  AckReturnSuccess(const AckReturnSuccess& from);

  inline AckReturnSuccess& operator=(const AckReturnSuccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReturnSuccess& default_instance();

  void Swap(AckReturnSuccess* other);

  // implements Message ----------------------------------------------

  AckReturnSuccess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReturnSuccess& from);
  void MergeFrom(const AckReturnSuccess& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.SuccessCodeType code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline ::HelloKittyMsgData::SuccessCodeType code() const;
  inline void set_code(::HelloKittyMsgData::SuccessCodeType value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReturnSuccess)
 private:
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static AckReturnSuccess* default_instance_;
};
// -------------------------------------------------------------------

class AckUpdateAttrVal : public ::google::protobuf::Message {
 public:
  AckUpdateAttrVal();
  virtual ~AckUpdateAttrVal();

  AckUpdateAttrVal(const AckUpdateAttrVal& from);

  inline AckUpdateAttrVal& operator=(const AckUpdateAttrVal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUpdateAttrVal& default_instance();

  void Swap(AckUpdateAttrVal* other);

  // implements Message ----------------------------------------------

  AckUpdateAttrVal* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUpdateAttrVal& from);
  void MergeFrom(const AckUpdateAttrVal& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 updatechar = 1;
  inline bool has_updatechar() const;
  inline void clear_updatechar();
  static const int kUpdatecharFieldNumber = 1;
  inline ::google::protobuf::uint64 updatechar() const;
  inline void set_updatechar(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.AttrType attrtype = 2;
  inline bool has_attrtype() const;
  inline void clear_attrtype();
  static const int kAttrtypeFieldNumber = 2;
  inline ::HelloKittyMsgData::AttrType attrtype() const;
  inline void set_attrtype(::HelloKittyMsgData::AttrType value);

  // required uint32 attrval = 3;
  inline bool has_attrval() const;
  inline void clear_attrval();
  static const int kAttrvalFieldNumber = 3;
  inline ::google::protobuf::uint32 attrval() const;
  inline void set_attrval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckUpdateAttrVal)
 private:
  inline void set_has_updatechar();
  inline void clear_has_updatechar();
  inline void set_has_attrtype();
  inline void clear_has_attrtype();
  inline void set_has_attrval();
  inline void clear_has_attrval();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 updatechar_;
  int attrtype_;
  ::google::protobuf::uint32 attrval_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static AckUpdateAttrVal* default_instance_;
};
// -------------------------------------------------------------------

class RubbishData : public ::google::protobuf::Message {
 public:
  RubbishData();
  virtual ~RubbishData();

  RubbishData(const RubbishData& from);

  inline RubbishData& operator=(const RubbishData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RubbishData& default_instance();

  void Swap(RubbishData* other);

  // implements Message ----------------------------------------------

  RubbishData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RubbishData& from);
  void MergeFrom(const RubbishData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 roadid = 1;
  inline bool has_roadid() const;
  inline void clear_roadid();
  static const int kRoadidFieldNumber = 1;
  inline ::google::protobuf::uint64 roadid() const;
  inline void set_roadid(::google::protobuf::uint64 value);

  // required uint32 rubbish = 2;
  inline bool has_rubbish() const;
  inline void clear_rubbish();
  static const int kRubbishFieldNumber = 2;
  inline ::google::protobuf::uint32 rubbish() const;
  inline void set_rubbish(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.RubbishData)
 private:
  inline void set_has_roadid();
  inline void clear_has_roadid();
  inline void set_has_rubbish();
  inline void clear_has_rubbish();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 roadid_;
  ::google::protobuf::uint32 rubbish_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static RubbishData* default_instance_;
};
// -------------------------------------------------------------------

class ReqPurchaseItem : public ::google::protobuf::Message {
 public:
  ReqPurchaseItem();
  virtual ~ReqPurchaseItem();

  ReqPurchaseItem(const ReqPurchaseItem& from);

  inline ReqPurchaseItem& operator=(const ReqPurchaseItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqPurchaseItem& default_instance();

  void Swap(ReqPurchaseItem* other);

  // implements Message ----------------------------------------------

  ReqPurchaseItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqPurchaseItem& from);
  void MergeFrom(const ReqPurchaseItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 itemcount = 2;
  inline bool has_itemcount() const;
  inline void clear_itemcount();
  static const int kItemcountFieldNumber = 2;
  inline ::google::protobuf::uint32 itemcount() const;
  inline void set_itemcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqPurchaseItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemcount();
  inline void clear_has_itemcount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 itemcount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_common_2eproto();
  friend void protobuf_AssignDesc_common_2eproto();
  friend void protobuf_ShutdownFile_common_2eproto();

  void InitAsDefaultInstance();
  static ReqPurchaseItem* default_instance_;
};
// ===================================================================


// ===================================================================

// AckReturnError

// required .HelloKittyMsgData.ErrorCodeType reason = 1;
inline bool AckReturnError::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReturnError::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReturnError::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReturnError::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::HelloKittyMsgData::ErrorCodeType AckReturnError::reason() const {
  return static_cast< ::HelloKittyMsgData::ErrorCodeType >(reason_);
}
inline void AckReturnError::set_reason(::HelloKittyMsgData::ErrorCodeType value) {
  assert(::HelloKittyMsgData::ErrorCodeType_IsValid(value));
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// AckReturnSuccess

// required .HelloKittyMsgData.SuccessCodeType code = 1;
inline bool AckReturnSuccess::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReturnSuccess::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReturnSuccess::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReturnSuccess::clear_code() {
  code_ = 3;
  clear_has_code();
}
inline ::HelloKittyMsgData::SuccessCodeType AckReturnSuccess::code() const {
  return static_cast< ::HelloKittyMsgData::SuccessCodeType >(code_);
}
inline void AckReturnSuccess::set_code(::HelloKittyMsgData::SuccessCodeType value) {
  assert(::HelloKittyMsgData::SuccessCodeType_IsValid(value));
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// AckUpdateAttrVal

// required uint64 updatechar = 1;
inline bool AckUpdateAttrVal::has_updatechar() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUpdateAttrVal::set_has_updatechar() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUpdateAttrVal::clear_has_updatechar() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUpdateAttrVal::clear_updatechar() {
  updatechar_ = GOOGLE_ULONGLONG(0);
  clear_has_updatechar();
}
inline ::google::protobuf::uint64 AckUpdateAttrVal::updatechar() const {
  return updatechar_;
}
inline void AckUpdateAttrVal::set_updatechar(::google::protobuf::uint64 value) {
  set_has_updatechar();
  updatechar_ = value;
}

// required .HelloKittyMsgData.AttrType attrtype = 2;
inline bool AckUpdateAttrVal::has_attrtype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckUpdateAttrVal::set_has_attrtype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckUpdateAttrVal::clear_has_attrtype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckUpdateAttrVal::clear_attrtype() {
  attrtype_ = 0;
  clear_has_attrtype();
}
inline ::HelloKittyMsgData::AttrType AckUpdateAttrVal::attrtype() const {
  return static_cast< ::HelloKittyMsgData::AttrType >(attrtype_);
}
inline void AckUpdateAttrVal::set_attrtype(::HelloKittyMsgData::AttrType value) {
  assert(::HelloKittyMsgData::AttrType_IsValid(value));
  set_has_attrtype();
  attrtype_ = value;
}

// required uint32 attrval = 3;
inline bool AckUpdateAttrVal::has_attrval() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckUpdateAttrVal::set_has_attrval() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckUpdateAttrVal::clear_has_attrval() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckUpdateAttrVal::clear_attrval() {
  attrval_ = 0u;
  clear_has_attrval();
}
inline ::google::protobuf::uint32 AckUpdateAttrVal::attrval() const {
  return attrval_;
}
inline void AckUpdateAttrVal::set_attrval(::google::protobuf::uint32 value) {
  set_has_attrval();
  attrval_ = value;
}

// -------------------------------------------------------------------

// RubbishData

// required uint64 roadid = 1;
inline bool RubbishData::has_roadid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RubbishData::set_has_roadid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RubbishData::clear_has_roadid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RubbishData::clear_roadid() {
  roadid_ = GOOGLE_ULONGLONG(0);
  clear_has_roadid();
}
inline ::google::protobuf::uint64 RubbishData::roadid() const {
  return roadid_;
}
inline void RubbishData::set_roadid(::google::protobuf::uint64 value) {
  set_has_roadid();
  roadid_ = value;
}

// required uint32 rubbish = 2;
inline bool RubbishData::has_rubbish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RubbishData::set_has_rubbish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RubbishData::clear_has_rubbish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RubbishData::clear_rubbish() {
  rubbish_ = 0u;
  clear_has_rubbish();
}
inline ::google::protobuf::uint32 RubbishData::rubbish() const {
  return rubbish_;
}
inline void RubbishData::set_rubbish(::google::protobuf::uint32 value) {
  set_has_rubbish();
  rubbish_ = value;
}

// -------------------------------------------------------------------

// ReqPurchaseItem

// required uint32 itemid = 1;
inline bool ReqPurchaseItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqPurchaseItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqPurchaseItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqPurchaseItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 ReqPurchaseItem::itemid() const {
  return itemid_;
}
inline void ReqPurchaseItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 itemcount = 2;
inline bool ReqPurchaseItem::has_itemcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqPurchaseItem::set_has_itemcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqPurchaseItem::clear_has_itemcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqPurchaseItem::clear_itemcount() {
  itemcount_ = 0u;
  clear_has_itemcount();
}
inline ::google::protobuf::uint32 ReqPurchaseItem::itemcount() const {
  return itemcount_;
}
inline void ReqPurchaseItem::set_itemcount(::google::protobuf::uint32 value) {
  set_has_itemcount();
  itemcount_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::ErrorCodeType>() {
  return ::HelloKittyMsgData::ErrorCodeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::BufferTypeID>() {
  return ::HelloKittyMsgData::BufferTypeID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::SuccessCodeType>() {
  return ::HelloKittyMsgData::SuccessCodeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::AttrType>() {
  return ::HelloKittyMsgData::AttrType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
