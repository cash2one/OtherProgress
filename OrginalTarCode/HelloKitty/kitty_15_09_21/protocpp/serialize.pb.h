// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: serialize.proto

#ifndef PROTOBUF_serialize_2eproto__INCLUDED
#define PROTOBUF_serialize_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "item.pb.h"
#include "trade.pb.h"
#include "build.pb.h"
#include "kittygarden.pb.h"
#include "task.pb.h"
#include "achievement.pb.h"
#include "event.pb.h"
#include "email.pb.h"
#include "produceitem.pb.h"
#include "usecardbuild.pb.h"
#include "dress.pb.h"
#include "divine.pb.h"
#include "paper.pb.h"
#include "burstevent.pb.h"
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_serialize_2eproto();
void protobuf_AssignDesc_serialize_2eproto();
void protobuf_ShutdownFile_serialize_2eproto();

class HappyData;
class DailyData;
class CharBin;
class Serialize;

// ===================================================================

class HappyData : public ::google::protobuf::Message {
 public:
  HappyData();
  virtual ~HappyData();

  HappyData(const HappyData& from);

  inline HappyData& operator=(const HappyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HappyData& default_instance();

  void Swap(HappyData* other);

  // implements Message ----------------------------------------------

  HappyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HappyData& from);
  void MergeFrom(const HappyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 grade = 1 [default = 0];
  inline bool has_grade() const;
  inline void clear_grade();
  static const int kGradeFieldNumber = 1;
  inline ::google::protobuf::uint32 grade() const;
  inline void set_grade(::google::protobuf::uint32 value);

  // required uint32 frequency = 2 [default = 0];
  inline bool has_frequency() const;
  inline void clear_frequency();
  static const int kFrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 frequency() const;
  inline void set_frequency(::google::protobuf::uint32 value);

  // required uint32 time = 3 [default = 0];
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 time() const;
  inline void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.HappyData)
 private:
  inline void set_has_grade();
  inline void clear_has_grade();
  inline void set_has_frequency();
  inline void clear_has_frequency();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 frequency_;
  ::google::protobuf::uint32 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static HappyData* default_instance_;
};
// -------------------------------------------------------------------

class DailyData : public ::google::protobuf::Message {
 public:
  DailyData();
  virtual ~DailyData();

  DailyData(const DailyData& from);

  inline DailyData& operator=(const DailyData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DailyData& default_instance();

  void Swap(DailyData* other);

  // implements Message ----------------------------------------------

  DailyData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DailyData& from);
  void MergeFrom(const DailyData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 dailydatatime = 1;
  inline bool has_dailydatatime() const;
  inline void clear_dailydatatime();
  static const int kDailydatatimeFieldNumber = 1;
  inline ::google::protobuf::uint32 dailydatatime() const;
  inline void set_dailydatatime(::google::protobuf::uint32 value);

  // required uint32 addgold = 2;
  inline bool has_addgold() const;
  inline void clear_addgold();
  static const int kAddgoldFieldNumber = 2;
  inline ::google::protobuf::uint32 addgold() const;
  inline void set_addgold(::google::protobuf::uint32 value);

  // required uint32 addgem = 3;
  inline bool has_addgem() const;
  inline void clear_addgem();
  static const int kAddgemFieldNumber = 3;
  inline ::google::protobuf::uint32 addgem() const;
  inline void set_addgem(::google::protobuf::uint32 value);

  // required uint32 addexp = 4;
  inline bool has_addexp() const;
  inline void clear_addexp();
  static const int kAddexpFieldNumber = 4;
  inline ::google::protobuf::uint32 addexp() const;
  inline void set_addexp(::google::protobuf::uint32 value);

  // required uint32 addhappy = 5;
  inline bool has_addhappy() const;
  inline void clear_addhappy();
  static const int kAddhappyFieldNumber = 5;
  inline ::google::protobuf::uint32 addhappy() const;
  inline void set_addhappy(::google::protobuf::uint32 value);

  // required uint32 addfriend = 6;
  inline bool has_addfriend() const;
  inline void clear_addfriend();
  static const int kAddfriendFieldNumber = 6;
  inline ::google::protobuf::uint32 addfriend() const;
  inline void set_addfriend(::google::protobuf::uint32 value);

  // required uint32 vistorother = 7;
  inline bool has_vistorother() const;
  inline void clear_vistorother();
  static const int kVistorotherFieldNumber = 7;
  inline ::google::protobuf::uint32 vistorother() const;
  inline void set_vistorother(::google::protobuf::uint32 value);

  // required uint32 addatlas = 8;
  inline bool has_addatlas() const;
  inline void clear_addatlas();
  static const int kAddatlasFieldNumber = 8;
  inline ::google::protobuf::uint32 addatlas() const;
  inline void set_addatlas(::google::protobuf::uint32 value);

  // required uint32 finishburstevent = 9;
  inline bool has_finishburstevent() const;
  inline void clear_finishburstevent();
  static const int kFinishbursteventFieldNumber = 9;
  inline ::google::protobuf::uint32 finishburstevent() const;
  inline void set_finishburstevent(::google::protobuf::uint32 value);

  // required uint32 buildorlevel = 10;
  inline bool has_buildorlevel() const;
  inline void clear_buildorlevel();
  static const int kBuildorlevelFieldNumber = 10;
  inline ::google::protobuf::uint32 buildorlevel() const;
  inline void set_buildorlevel(::google::protobuf::uint32 value);

  // required uint32 randtoy = 11;
  inline bool has_randtoy() const;
  inline void clear_randtoy();
  static const int kRandtoyFieldNumber = 11;
  inline ::google::protobuf::uint32 randtoy() const;
  inline void set_randtoy(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.DivineData divine = 12;
  inline bool has_divine() const;
  inline void clear_divine();
  static const int kDivineFieldNumber = 12;
  inline const ::HelloKittyMsgData::DivineData& divine() const;
  inline ::HelloKittyMsgData::DivineData* mutable_divine();
  inline ::HelloKittyMsgData::DivineData* release_divine();
  inline void set_allocated_divine(::HelloKittyMsgData::DivineData* divine);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.DailyData)
 private:
  inline void set_has_dailydatatime();
  inline void clear_has_dailydatatime();
  inline void set_has_addgold();
  inline void clear_has_addgold();
  inline void set_has_addgem();
  inline void clear_has_addgem();
  inline void set_has_addexp();
  inline void clear_has_addexp();
  inline void set_has_addhappy();
  inline void clear_has_addhappy();
  inline void set_has_addfriend();
  inline void clear_has_addfriend();
  inline void set_has_vistorother();
  inline void clear_has_vistorother();
  inline void set_has_addatlas();
  inline void clear_has_addatlas();
  inline void set_has_finishburstevent();
  inline void clear_has_finishburstevent();
  inline void set_has_buildorlevel();
  inline void clear_has_buildorlevel();
  inline void set_has_randtoy();
  inline void clear_has_randtoy();
  inline void set_has_divine();
  inline void clear_has_divine();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 dailydatatime_;
  ::google::protobuf::uint32 addgold_;
  ::google::protobuf::uint32 addgem_;
  ::google::protobuf::uint32 addexp_;
  ::google::protobuf::uint32 addhappy_;
  ::google::protobuf::uint32 addfriend_;
  ::google::protobuf::uint32 vistorother_;
  ::google::protobuf::uint32 addatlas_;
  ::google::protobuf::uint32 finishburstevent_;
  ::google::protobuf::uint32 buildorlevel_;
  ::HelloKittyMsgData::DivineData* divine_;
  ::google::protobuf::uint32 randtoy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];

  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static DailyData* default_instance_;
};
// -------------------------------------------------------------------

class CharBin : public ::google::protobuf::Message {
 public:
  CharBin();
  virtual ~CharBin();

  CharBin(const CharBin& from);

  inline CharBin& operator=(const CharBin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CharBin& default_instance();

  void Swap(CharBin* other);

  // implements Message ----------------------------------------------

  CharBin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CharBin& from);
  void MergeFrom(const CharBin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.HappyData happy_low = 1;
  inline bool has_happy_low() const;
  inline void clear_happy_low();
  static const int kHappyLowFieldNumber = 1;
  inline const ::HelloKittyMsgData::HappyData& happy_low() const;
  inline ::HelloKittyMsgData::HappyData* mutable_happy_low();
  inline ::HelloKittyMsgData::HappyData* release_happy_low();
  inline void set_allocated_happy_low(::HelloKittyMsgData::HappyData* happy_low);

  // required .HelloKittyMsgData.HappyData happy_mid = 2;
  inline bool has_happy_mid() const;
  inline void clear_happy_mid();
  static const int kHappyMidFieldNumber = 2;
  inline const ::HelloKittyMsgData::HappyData& happy_mid() const;
  inline ::HelloKittyMsgData::HappyData* mutable_happy_mid();
  inline ::HelloKittyMsgData::HappyData* release_happy_mid();
  inline void set_allocated_happy_mid(::HelloKittyMsgData::HappyData* happy_mid);

  // required .HelloKittyMsgData.HappyData happy_hight = 3;
  inline bool has_happy_hight() const;
  inline void clear_happy_hight();
  static const int kHappyHightFieldNumber = 3;
  inline const ::HelloKittyMsgData::HappyData& happy_hight() const;
  inline ::HelloKittyMsgData::HappyData* mutable_happy_hight();
  inline ::HelloKittyMsgData::HappyData* release_happy_hight();
  inline void set_allocated_happy_hight(::HelloKittyMsgData::HappyData* happy_hight);

  // required .HelloKittyMsgData.DailyData dailydata = 4;
  inline bool has_dailydata() const;
  inline void clear_dailydata();
  static const int kDailydataFieldNumber = 4;
  inline const ::HelloKittyMsgData::DailyData& dailydata() const;
  inline ::HelloKittyMsgData::DailyData* mutable_dailydata();
  inline ::HelloKittyMsgData::DailyData* release_dailydata();
  inline void set_allocated_dailydata(::HelloKittyMsgData::DailyData* dailydata);

  // required .HelloKittyMsgData.DressData dress = 5;
  inline bool has_dress() const;
  inline void clear_dress();
  static const int kDressFieldNumber = 5;
  inline const ::HelloKittyMsgData::DressData& dress() const;
  inline ::HelloKittyMsgData::DressData* mutable_dress();
  inline ::HelloKittyMsgData::DressData* release_dress();
  inline void set_allocated_dress(::HelloKittyMsgData::DressData* dress);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.CharBin)
 private:
  inline void set_has_happy_low();
  inline void clear_has_happy_low();
  inline void set_has_happy_mid();
  inline void clear_has_happy_mid();
  inline void set_has_happy_hight();
  inline void clear_has_happy_hight();
  inline void set_has_dailydata();
  inline void clear_has_dailydata();
  inline void set_has_dress();
  inline void clear_has_dress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::HappyData* happy_low_;
  ::HelloKittyMsgData::HappyData* happy_mid_;
  ::HelloKittyMsgData::HappyData* happy_hight_;
  ::HelloKittyMsgData::DailyData* dailydata_;
  ::HelloKittyMsgData::DressData* dress_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static CharBin* default_instance_;
};
// -------------------------------------------------------------------

class Serialize : public ::google::protobuf::Message {
 public:
  Serialize();
  virtual ~Serialize();

  Serialize(const Serialize& from);

  inline Serialize& operator=(const Serialize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Serialize& default_instance();

  void Swap(Serialize* other);

  // implements Message ----------------------------------------------

  Serialize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Serialize& from);
  void MergeFrom(const Serialize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.CharBin charbin = 1;
  inline bool has_charbin() const;
  inline void clear_charbin();
  static const int kCharbinFieldNumber = 1;
  inline const ::HelloKittyMsgData::CharBin& charbin() const;
  inline ::HelloKittyMsgData::CharBin* mutable_charbin();
  inline ::HelloKittyMsgData::CharBin* release_charbin();
  inline void set_allocated_charbin(::HelloKittyMsgData::CharBin* charbin);

  // repeated .HelloKittyMsgData.PbStoreItem store_items = 2;
  inline int store_items_size() const;
  inline void clear_store_items();
  static const int kStoreItemsFieldNumber = 2;
  inline const ::HelloKittyMsgData::PbStoreItem& store_items(int index) const;
  inline ::HelloKittyMsgData::PbStoreItem* mutable_store_items(int index);
  inline ::HelloKittyMsgData::PbStoreItem* add_store_items();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem >&
      store_items() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem >*
      mutable_store_items();

  // required .HelloKittyMsgData.PbSaleBooth saleBooth = 3;
  inline bool has_salebooth() const;
  inline void clear_salebooth();
  static const int kSaleBoothFieldNumber = 3;
  inline const ::HelloKittyMsgData::PbSaleBooth& salebooth() const;
  inline ::HelloKittyMsgData::PbSaleBooth* mutable_salebooth();
  inline ::HelloKittyMsgData::PbSaleBooth* release_salebooth();
  inline void set_allocated_salebooth(::HelloKittyMsgData::PbSaleBooth* salebooth);

  // repeated .HelloKittyMsgData.SellPaper sellpaper = 4;
  inline int sellpaper_size() const;
  inline void clear_sellpaper();
  static const int kSellpaperFieldNumber = 4;
  inline const ::HelloKittyMsgData::SellPaper& sellpaper(int index) const;
  inline ::HelloKittyMsgData::SellPaper* mutable_sellpaper(int index);
  inline ::HelloKittyMsgData::SellPaper* add_sellpaper();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SellPaper >&
      sellpaper() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SellPaper >*
      mutable_sellpaper();

  // required .HelloKittyMsgData.KittyGarden kittygarden = 5;
  inline bool has_kittygarden() const;
  inline void clear_kittygarden();
  static const int kKittygardenFieldNumber = 5;
  inline const ::HelloKittyMsgData::KittyGarden& kittygarden() const;
  inline ::HelloKittyMsgData::KittyGarden* mutable_kittygarden();
  inline ::HelloKittyMsgData::KittyGarden* release_kittygarden();
  inline void set_allocated_kittygarden(::HelloKittyMsgData::KittyGarden* kittygarden);

  // repeated .HelloKittyMsgData.BuildBase buildbase = 6;
  inline int buildbase_size() const;
  inline void clear_buildbase();
  static const int kBuildbaseFieldNumber = 6;
  inline const ::HelloKittyMsgData::BuildBase& buildbase(int index) const;
  inline ::HelloKittyMsgData::BuildBase* mutable_buildbase(int index);
  inline ::HelloKittyMsgData::BuildBase* add_buildbase();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase >&
      buildbase() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase >*
      mutable_buildbase();

  // repeated .HelloKittyMsgData.BuildProduce buildproduce = 7;
  inline int buildproduce_size() const;
  inline void clear_buildproduce();
  static const int kBuildproduceFieldNumber = 7;
  inline const ::HelloKittyMsgData::BuildProduce& buildproduce(int index) const;
  inline ::HelloKittyMsgData::BuildProduce* mutable_buildproduce(int index);
  inline ::HelloKittyMsgData::BuildProduce* add_buildproduce();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce >&
      buildproduce() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce >*
      mutable_buildproduce();

  // repeated .HelloKittyMsgData.StoreFunctionCell functioncell = 8;
  inline int functioncell_size() const;
  inline void clear_functioncell();
  static const int kFunctioncellFieldNumber = 8;
  inline const ::HelloKittyMsgData::StoreFunctionCell& functioncell(int index) const;
  inline ::HelloKittyMsgData::StoreFunctionCell* mutable_functioncell(int index);
  inline ::HelloKittyMsgData::StoreFunctionCell* add_functioncell();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::StoreFunctionCell >&
      functioncell() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::StoreFunctionCell >*
      mutable_functioncell();

  // repeated .HelloKittyMsgData.UseCardInfo usecard = 9;
  inline int usecard_size() const;
  inline void clear_usecard();
  static const int kUsecardFieldNumber = 9;
  inline const ::HelloKittyMsgData::UseCardInfo& usecard(int index) const;
  inline ::HelloKittyMsgData::UseCardInfo* mutable_usecard(int index);
  inline ::HelloKittyMsgData::UseCardInfo* add_usecard();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::UseCardInfo >&
      usecard() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::UseCardInfo >*
      mutable_usecard();

  // repeated .HelloKittyMsgData.WareHouseBuildBase warebuild = 10;
  inline int warebuild_size() const;
  inline void clear_warebuild();
  static const int kWarebuildFieldNumber = 10;
  inline const ::HelloKittyMsgData::WareHouseBuildBase& warebuild(int index) const;
  inline ::HelloKittyMsgData::WareHouseBuildBase* mutable_warebuild(int index);
  inline ::HelloKittyMsgData::WareHouseBuildBase* add_warebuild();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase >&
      warebuild() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase >*
      mutable_warebuild();

  // repeated .HelloKittyMsgData.Worker worker = 11;
  inline int worker_size() const;
  inline void clear_worker();
  static const int kWorkerFieldNumber = 11;
  inline const ::HelloKittyMsgData::Worker& worker(int index) const;
  inline ::HelloKittyMsgData::Worker* mutable_worker(int index);
  inline ::HelloKittyMsgData::Worker* add_worker();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker >&
      worker() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker >*
      mutable_worker();

  // repeated .HelloKittyMsgData.Task task = 12;
  inline int task_size() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 12;
  inline const ::HelloKittyMsgData::Task& task(int index) const;
  inline ::HelloKittyMsgData::Task* mutable_task(int index);
  inline ::HelloKittyMsgData::Task* add_task();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Task >&
      task() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Task >*
      mutable_task();

  // repeated uint32 atlas = 13;
  inline int atlas_size() const;
  inline void clear_atlas();
  static const int kAtlasFieldNumber = 13;
  inline ::google::protobuf::uint32 atlas(int index) const;
  inline void set_atlas(int index, ::google::protobuf::uint32 value);
  inline void add_atlas(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      atlas() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_atlas();

  // repeated .HelloKittyMsgData.AchieveMent achievement = 14;
  inline int achievement_size() const;
  inline void clear_achievement();
  static const int kAchievementFieldNumber = 14;
  inline const ::HelloKittyMsgData::AchieveMent& achievement(int index) const;
  inline ::HelloKittyMsgData::AchieveMent* mutable_achievement(int index);
  inline ::HelloKittyMsgData::AchieveMent* add_achievement();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::AchieveMent >&
      achievement() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::AchieveMent >*
      mutable_achievement();

  // repeated .HelloKittyMsgData.SaveForEvent event = 15;
  inline int event_size() const;
  inline void clear_event();
  static const int kEventFieldNumber = 15;
  inline const ::HelloKittyMsgData::SaveForEvent& event(int index) const;
  inline ::HelloKittyMsgData::SaveForEvent* mutable_event(int index);
  inline ::HelloKittyMsgData::SaveForEvent* add_event();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SaveForEvent >&
      event() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SaveForEvent >*
      mutable_event();

  // repeated .HelloKittyMsgData.EmailInfo email = 16;
  inline int email_size() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 16;
  inline const ::HelloKittyMsgData::EmailInfo& email(int index) const;
  inline ::HelloKittyMsgData::EmailInfo* mutable_email(int index);
  inline ::HelloKittyMsgData::EmailInfo* add_email();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EmailInfo >&
      email() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EmailInfo >*
      mutable_email();

  // repeated .HelloKittyMsgData.DressData dress = 17;
  inline int dress_size() const;
  inline void clear_dress();
  static const int kDressFieldNumber = 17;
  inline const ::HelloKittyMsgData::DressData& dress(int index) const;
  inline ::HelloKittyMsgData::DressData* mutable_dress(int index);
  inline ::HelloKittyMsgData::DressData* add_dress();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::DressData >&
      dress() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::DressData >*
      mutable_dress();

  // repeated .HelloKittyMsgData.PaperData paper = 18;
  inline int paper_size() const;
  inline void clear_paper();
  static const int kPaperFieldNumber = 18;
  inline const ::HelloKittyMsgData::PaperData& paper(int index) const;
  inline ::HelloKittyMsgData::PaperData* mutable_paper(int index);
  inline ::HelloKittyMsgData::PaperData* add_paper();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PaperData >&
      paper() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PaperData >*
      mutable_paper();

  // repeated .HelloKittyMsgData.BurstEvent burstevent = 19;
  inline int burstevent_size() const;
  inline void clear_burstevent();
  static const int kBursteventFieldNumber = 19;
  inline const ::HelloKittyMsgData::BurstEvent& burstevent(int index) const;
  inline ::HelloKittyMsgData::BurstEvent* mutable_burstevent(int index);
  inline ::HelloKittyMsgData::BurstEvent* add_burstevent();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BurstEvent >&
      burstevent() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BurstEvent >*
      mutable_burstevent();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.Serialize)
 private:
  inline void set_has_charbin();
  inline void clear_has_charbin();
  inline void set_has_salebooth();
  inline void clear_has_salebooth();
  inline void set_has_kittygarden();
  inline void clear_has_kittygarden();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::CharBin* charbin_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem > store_items_;
  ::HelloKittyMsgData::PbSaleBooth* salebooth_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SellPaper > sellpaper_;
  ::HelloKittyMsgData::KittyGarden* kittygarden_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase > buildbase_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce > buildproduce_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::StoreFunctionCell > functioncell_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::UseCardInfo > usecard_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase > warebuild_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker > worker_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Task > task_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > atlas_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::AchieveMent > achievement_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SaveForEvent > event_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EmailInfo > email_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::DressData > dress_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PaperData > paper_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BurstEvent > burstevent_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];

  friend void  protobuf_AddDesc_serialize_2eproto();
  friend void protobuf_AssignDesc_serialize_2eproto();
  friend void protobuf_ShutdownFile_serialize_2eproto();

  void InitAsDefaultInstance();
  static Serialize* default_instance_;
};
// ===================================================================


// ===================================================================

// HappyData

// required uint32 grade = 1 [default = 0];
inline bool HappyData::has_grade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HappyData::set_has_grade() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HappyData::clear_has_grade() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HappyData::clear_grade() {
  grade_ = 0u;
  clear_has_grade();
}
inline ::google::protobuf::uint32 HappyData::grade() const {
  return grade_;
}
inline void HappyData::set_grade(::google::protobuf::uint32 value) {
  set_has_grade();
  grade_ = value;
}

// required uint32 frequency = 2 [default = 0];
inline bool HappyData::has_frequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HappyData::set_has_frequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HappyData::clear_has_frequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HappyData::clear_frequency() {
  frequency_ = 0u;
  clear_has_frequency();
}
inline ::google::protobuf::uint32 HappyData::frequency() const {
  return frequency_;
}
inline void HappyData::set_frequency(::google::protobuf::uint32 value) {
  set_has_frequency();
  frequency_ = value;
}

// required uint32 time = 3 [default = 0];
inline bool HappyData::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HappyData::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HappyData::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HappyData::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 HappyData::time() const {
  return time_;
}
inline void HappyData::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// DailyData

// required uint32 dailydatatime = 1;
inline bool DailyData::has_dailydatatime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DailyData::set_has_dailydatatime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DailyData::clear_has_dailydatatime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DailyData::clear_dailydatatime() {
  dailydatatime_ = 0u;
  clear_has_dailydatatime();
}
inline ::google::protobuf::uint32 DailyData::dailydatatime() const {
  return dailydatatime_;
}
inline void DailyData::set_dailydatatime(::google::protobuf::uint32 value) {
  set_has_dailydatatime();
  dailydatatime_ = value;
}

// required uint32 addgold = 2;
inline bool DailyData::has_addgold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DailyData::set_has_addgold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DailyData::clear_has_addgold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DailyData::clear_addgold() {
  addgold_ = 0u;
  clear_has_addgold();
}
inline ::google::protobuf::uint32 DailyData::addgold() const {
  return addgold_;
}
inline void DailyData::set_addgold(::google::protobuf::uint32 value) {
  set_has_addgold();
  addgold_ = value;
}

// required uint32 addgem = 3;
inline bool DailyData::has_addgem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DailyData::set_has_addgem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DailyData::clear_has_addgem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DailyData::clear_addgem() {
  addgem_ = 0u;
  clear_has_addgem();
}
inline ::google::protobuf::uint32 DailyData::addgem() const {
  return addgem_;
}
inline void DailyData::set_addgem(::google::protobuf::uint32 value) {
  set_has_addgem();
  addgem_ = value;
}

// required uint32 addexp = 4;
inline bool DailyData::has_addexp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DailyData::set_has_addexp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DailyData::clear_has_addexp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DailyData::clear_addexp() {
  addexp_ = 0u;
  clear_has_addexp();
}
inline ::google::protobuf::uint32 DailyData::addexp() const {
  return addexp_;
}
inline void DailyData::set_addexp(::google::protobuf::uint32 value) {
  set_has_addexp();
  addexp_ = value;
}

// required uint32 addhappy = 5;
inline bool DailyData::has_addhappy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DailyData::set_has_addhappy() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DailyData::clear_has_addhappy() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DailyData::clear_addhappy() {
  addhappy_ = 0u;
  clear_has_addhappy();
}
inline ::google::protobuf::uint32 DailyData::addhappy() const {
  return addhappy_;
}
inline void DailyData::set_addhappy(::google::protobuf::uint32 value) {
  set_has_addhappy();
  addhappy_ = value;
}

// required uint32 addfriend = 6;
inline bool DailyData::has_addfriend() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DailyData::set_has_addfriend() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DailyData::clear_has_addfriend() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DailyData::clear_addfriend() {
  addfriend_ = 0u;
  clear_has_addfriend();
}
inline ::google::protobuf::uint32 DailyData::addfriend() const {
  return addfriend_;
}
inline void DailyData::set_addfriend(::google::protobuf::uint32 value) {
  set_has_addfriend();
  addfriend_ = value;
}

// required uint32 vistorother = 7;
inline bool DailyData::has_vistorother() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DailyData::set_has_vistorother() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DailyData::clear_has_vistorother() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DailyData::clear_vistorother() {
  vistorother_ = 0u;
  clear_has_vistorother();
}
inline ::google::protobuf::uint32 DailyData::vistorother() const {
  return vistorother_;
}
inline void DailyData::set_vistorother(::google::protobuf::uint32 value) {
  set_has_vistorother();
  vistorother_ = value;
}

// required uint32 addatlas = 8;
inline bool DailyData::has_addatlas() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DailyData::set_has_addatlas() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DailyData::clear_has_addatlas() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DailyData::clear_addatlas() {
  addatlas_ = 0u;
  clear_has_addatlas();
}
inline ::google::protobuf::uint32 DailyData::addatlas() const {
  return addatlas_;
}
inline void DailyData::set_addatlas(::google::protobuf::uint32 value) {
  set_has_addatlas();
  addatlas_ = value;
}

// required uint32 finishburstevent = 9;
inline bool DailyData::has_finishburstevent() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DailyData::set_has_finishburstevent() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DailyData::clear_has_finishburstevent() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DailyData::clear_finishburstevent() {
  finishburstevent_ = 0u;
  clear_has_finishburstevent();
}
inline ::google::protobuf::uint32 DailyData::finishburstevent() const {
  return finishburstevent_;
}
inline void DailyData::set_finishburstevent(::google::protobuf::uint32 value) {
  set_has_finishburstevent();
  finishburstevent_ = value;
}

// required uint32 buildorlevel = 10;
inline bool DailyData::has_buildorlevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DailyData::set_has_buildorlevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DailyData::clear_has_buildorlevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DailyData::clear_buildorlevel() {
  buildorlevel_ = 0u;
  clear_has_buildorlevel();
}
inline ::google::protobuf::uint32 DailyData::buildorlevel() const {
  return buildorlevel_;
}
inline void DailyData::set_buildorlevel(::google::protobuf::uint32 value) {
  set_has_buildorlevel();
  buildorlevel_ = value;
}

// required uint32 randtoy = 11;
inline bool DailyData::has_randtoy() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DailyData::set_has_randtoy() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DailyData::clear_has_randtoy() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DailyData::clear_randtoy() {
  randtoy_ = 0u;
  clear_has_randtoy();
}
inline ::google::protobuf::uint32 DailyData::randtoy() const {
  return randtoy_;
}
inline void DailyData::set_randtoy(::google::protobuf::uint32 value) {
  set_has_randtoy();
  randtoy_ = value;
}

// required .HelloKittyMsgData.DivineData divine = 12;
inline bool DailyData::has_divine() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DailyData::set_has_divine() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DailyData::clear_has_divine() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DailyData::clear_divine() {
  if (divine_ != NULL) divine_->::HelloKittyMsgData::DivineData::Clear();
  clear_has_divine();
}
inline const ::HelloKittyMsgData::DivineData& DailyData::divine() const {
  return divine_ != NULL ? *divine_ : *default_instance_->divine_;
}
inline ::HelloKittyMsgData::DivineData* DailyData::mutable_divine() {
  set_has_divine();
  if (divine_ == NULL) divine_ = new ::HelloKittyMsgData::DivineData;
  return divine_;
}
inline ::HelloKittyMsgData::DivineData* DailyData::release_divine() {
  clear_has_divine();
  ::HelloKittyMsgData::DivineData* temp = divine_;
  divine_ = NULL;
  return temp;
}
inline void DailyData::set_allocated_divine(::HelloKittyMsgData::DivineData* divine) {
  delete divine_;
  divine_ = divine;
  if (divine) {
    set_has_divine();
  } else {
    clear_has_divine();
  }
}

// -------------------------------------------------------------------

// CharBin

// required .HelloKittyMsgData.HappyData happy_low = 1;
inline bool CharBin::has_happy_low() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CharBin::set_has_happy_low() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CharBin::clear_has_happy_low() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CharBin::clear_happy_low() {
  if (happy_low_ != NULL) happy_low_->::HelloKittyMsgData::HappyData::Clear();
  clear_has_happy_low();
}
inline const ::HelloKittyMsgData::HappyData& CharBin::happy_low() const {
  return happy_low_ != NULL ? *happy_low_ : *default_instance_->happy_low_;
}
inline ::HelloKittyMsgData::HappyData* CharBin::mutable_happy_low() {
  set_has_happy_low();
  if (happy_low_ == NULL) happy_low_ = new ::HelloKittyMsgData::HappyData;
  return happy_low_;
}
inline ::HelloKittyMsgData::HappyData* CharBin::release_happy_low() {
  clear_has_happy_low();
  ::HelloKittyMsgData::HappyData* temp = happy_low_;
  happy_low_ = NULL;
  return temp;
}
inline void CharBin::set_allocated_happy_low(::HelloKittyMsgData::HappyData* happy_low) {
  delete happy_low_;
  happy_low_ = happy_low;
  if (happy_low) {
    set_has_happy_low();
  } else {
    clear_has_happy_low();
  }
}

// required .HelloKittyMsgData.HappyData happy_mid = 2;
inline bool CharBin::has_happy_mid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CharBin::set_has_happy_mid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CharBin::clear_has_happy_mid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CharBin::clear_happy_mid() {
  if (happy_mid_ != NULL) happy_mid_->::HelloKittyMsgData::HappyData::Clear();
  clear_has_happy_mid();
}
inline const ::HelloKittyMsgData::HappyData& CharBin::happy_mid() const {
  return happy_mid_ != NULL ? *happy_mid_ : *default_instance_->happy_mid_;
}
inline ::HelloKittyMsgData::HappyData* CharBin::mutable_happy_mid() {
  set_has_happy_mid();
  if (happy_mid_ == NULL) happy_mid_ = new ::HelloKittyMsgData::HappyData;
  return happy_mid_;
}
inline ::HelloKittyMsgData::HappyData* CharBin::release_happy_mid() {
  clear_has_happy_mid();
  ::HelloKittyMsgData::HappyData* temp = happy_mid_;
  happy_mid_ = NULL;
  return temp;
}
inline void CharBin::set_allocated_happy_mid(::HelloKittyMsgData::HappyData* happy_mid) {
  delete happy_mid_;
  happy_mid_ = happy_mid;
  if (happy_mid) {
    set_has_happy_mid();
  } else {
    clear_has_happy_mid();
  }
}

// required .HelloKittyMsgData.HappyData happy_hight = 3;
inline bool CharBin::has_happy_hight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CharBin::set_has_happy_hight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CharBin::clear_has_happy_hight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CharBin::clear_happy_hight() {
  if (happy_hight_ != NULL) happy_hight_->::HelloKittyMsgData::HappyData::Clear();
  clear_has_happy_hight();
}
inline const ::HelloKittyMsgData::HappyData& CharBin::happy_hight() const {
  return happy_hight_ != NULL ? *happy_hight_ : *default_instance_->happy_hight_;
}
inline ::HelloKittyMsgData::HappyData* CharBin::mutable_happy_hight() {
  set_has_happy_hight();
  if (happy_hight_ == NULL) happy_hight_ = new ::HelloKittyMsgData::HappyData;
  return happy_hight_;
}
inline ::HelloKittyMsgData::HappyData* CharBin::release_happy_hight() {
  clear_has_happy_hight();
  ::HelloKittyMsgData::HappyData* temp = happy_hight_;
  happy_hight_ = NULL;
  return temp;
}
inline void CharBin::set_allocated_happy_hight(::HelloKittyMsgData::HappyData* happy_hight) {
  delete happy_hight_;
  happy_hight_ = happy_hight;
  if (happy_hight) {
    set_has_happy_hight();
  } else {
    clear_has_happy_hight();
  }
}

// required .HelloKittyMsgData.DailyData dailydata = 4;
inline bool CharBin::has_dailydata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CharBin::set_has_dailydata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CharBin::clear_has_dailydata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CharBin::clear_dailydata() {
  if (dailydata_ != NULL) dailydata_->::HelloKittyMsgData::DailyData::Clear();
  clear_has_dailydata();
}
inline const ::HelloKittyMsgData::DailyData& CharBin::dailydata() const {
  return dailydata_ != NULL ? *dailydata_ : *default_instance_->dailydata_;
}
inline ::HelloKittyMsgData::DailyData* CharBin::mutable_dailydata() {
  set_has_dailydata();
  if (dailydata_ == NULL) dailydata_ = new ::HelloKittyMsgData::DailyData;
  return dailydata_;
}
inline ::HelloKittyMsgData::DailyData* CharBin::release_dailydata() {
  clear_has_dailydata();
  ::HelloKittyMsgData::DailyData* temp = dailydata_;
  dailydata_ = NULL;
  return temp;
}
inline void CharBin::set_allocated_dailydata(::HelloKittyMsgData::DailyData* dailydata) {
  delete dailydata_;
  dailydata_ = dailydata;
  if (dailydata) {
    set_has_dailydata();
  } else {
    clear_has_dailydata();
  }
}

// required .HelloKittyMsgData.DressData dress = 5;
inline bool CharBin::has_dress() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CharBin::set_has_dress() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CharBin::clear_has_dress() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CharBin::clear_dress() {
  if (dress_ != NULL) dress_->::HelloKittyMsgData::DressData::Clear();
  clear_has_dress();
}
inline const ::HelloKittyMsgData::DressData& CharBin::dress() const {
  return dress_ != NULL ? *dress_ : *default_instance_->dress_;
}
inline ::HelloKittyMsgData::DressData* CharBin::mutable_dress() {
  set_has_dress();
  if (dress_ == NULL) dress_ = new ::HelloKittyMsgData::DressData;
  return dress_;
}
inline ::HelloKittyMsgData::DressData* CharBin::release_dress() {
  clear_has_dress();
  ::HelloKittyMsgData::DressData* temp = dress_;
  dress_ = NULL;
  return temp;
}
inline void CharBin::set_allocated_dress(::HelloKittyMsgData::DressData* dress) {
  delete dress_;
  dress_ = dress;
  if (dress) {
    set_has_dress();
  } else {
    clear_has_dress();
  }
}

// -------------------------------------------------------------------

// Serialize

// required .HelloKittyMsgData.CharBin charbin = 1;
inline bool Serialize::has_charbin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Serialize::set_has_charbin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Serialize::clear_has_charbin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Serialize::clear_charbin() {
  if (charbin_ != NULL) charbin_->::HelloKittyMsgData::CharBin::Clear();
  clear_has_charbin();
}
inline const ::HelloKittyMsgData::CharBin& Serialize::charbin() const {
  return charbin_ != NULL ? *charbin_ : *default_instance_->charbin_;
}
inline ::HelloKittyMsgData::CharBin* Serialize::mutable_charbin() {
  set_has_charbin();
  if (charbin_ == NULL) charbin_ = new ::HelloKittyMsgData::CharBin;
  return charbin_;
}
inline ::HelloKittyMsgData::CharBin* Serialize::release_charbin() {
  clear_has_charbin();
  ::HelloKittyMsgData::CharBin* temp = charbin_;
  charbin_ = NULL;
  return temp;
}
inline void Serialize::set_allocated_charbin(::HelloKittyMsgData::CharBin* charbin) {
  delete charbin_;
  charbin_ = charbin;
  if (charbin) {
    set_has_charbin();
  } else {
    clear_has_charbin();
  }
}

// repeated .HelloKittyMsgData.PbStoreItem store_items = 2;
inline int Serialize::store_items_size() const {
  return store_items_.size();
}
inline void Serialize::clear_store_items() {
  store_items_.Clear();
}
inline const ::HelloKittyMsgData::PbStoreItem& Serialize::store_items(int index) const {
  return store_items_.Get(index);
}
inline ::HelloKittyMsgData::PbStoreItem* Serialize::mutable_store_items(int index) {
  return store_items_.Mutable(index);
}
inline ::HelloKittyMsgData::PbStoreItem* Serialize::add_store_items() {
  return store_items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem >&
Serialize::store_items() const {
  return store_items_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PbStoreItem >*
Serialize::mutable_store_items() {
  return &store_items_;
}

// required .HelloKittyMsgData.PbSaleBooth saleBooth = 3;
inline bool Serialize::has_salebooth() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Serialize::set_has_salebooth() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Serialize::clear_has_salebooth() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Serialize::clear_salebooth() {
  if (salebooth_ != NULL) salebooth_->::HelloKittyMsgData::PbSaleBooth::Clear();
  clear_has_salebooth();
}
inline const ::HelloKittyMsgData::PbSaleBooth& Serialize::salebooth() const {
  return salebooth_ != NULL ? *salebooth_ : *default_instance_->salebooth_;
}
inline ::HelloKittyMsgData::PbSaleBooth* Serialize::mutable_salebooth() {
  set_has_salebooth();
  if (salebooth_ == NULL) salebooth_ = new ::HelloKittyMsgData::PbSaleBooth;
  return salebooth_;
}
inline ::HelloKittyMsgData::PbSaleBooth* Serialize::release_salebooth() {
  clear_has_salebooth();
  ::HelloKittyMsgData::PbSaleBooth* temp = salebooth_;
  salebooth_ = NULL;
  return temp;
}
inline void Serialize::set_allocated_salebooth(::HelloKittyMsgData::PbSaleBooth* salebooth) {
  delete salebooth_;
  salebooth_ = salebooth;
  if (salebooth) {
    set_has_salebooth();
  } else {
    clear_has_salebooth();
  }
}

// repeated .HelloKittyMsgData.SellPaper sellpaper = 4;
inline int Serialize::sellpaper_size() const {
  return sellpaper_.size();
}
inline void Serialize::clear_sellpaper() {
  sellpaper_.Clear();
}
inline const ::HelloKittyMsgData::SellPaper& Serialize::sellpaper(int index) const {
  return sellpaper_.Get(index);
}
inline ::HelloKittyMsgData::SellPaper* Serialize::mutable_sellpaper(int index) {
  return sellpaper_.Mutable(index);
}
inline ::HelloKittyMsgData::SellPaper* Serialize::add_sellpaper() {
  return sellpaper_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SellPaper >&
Serialize::sellpaper() const {
  return sellpaper_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SellPaper >*
Serialize::mutable_sellpaper() {
  return &sellpaper_;
}

// required .HelloKittyMsgData.KittyGarden kittygarden = 5;
inline bool Serialize::has_kittygarden() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Serialize::set_has_kittygarden() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Serialize::clear_has_kittygarden() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Serialize::clear_kittygarden() {
  if (kittygarden_ != NULL) kittygarden_->::HelloKittyMsgData::KittyGarden::Clear();
  clear_has_kittygarden();
}
inline const ::HelloKittyMsgData::KittyGarden& Serialize::kittygarden() const {
  return kittygarden_ != NULL ? *kittygarden_ : *default_instance_->kittygarden_;
}
inline ::HelloKittyMsgData::KittyGarden* Serialize::mutable_kittygarden() {
  set_has_kittygarden();
  if (kittygarden_ == NULL) kittygarden_ = new ::HelloKittyMsgData::KittyGarden;
  return kittygarden_;
}
inline ::HelloKittyMsgData::KittyGarden* Serialize::release_kittygarden() {
  clear_has_kittygarden();
  ::HelloKittyMsgData::KittyGarden* temp = kittygarden_;
  kittygarden_ = NULL;
  return temp;
}
inline void Serialize::set_allocated_kittygarden(::HelloKittyMsgData::KittyGarden* kittygarden) {
  delete kittygarden_;
  kittygarden_ = kittygarden;
  if (kittygarden) {
    set_has_kittygarden();
  } else {
    clear_has_kittygarden();
  }
}

// repeated .HelloKittyMsgData.BuildBase buildbase = 6;
inline int Serialize::buildbase_size() const {
  return buildbase_.size();
}
inline void Serialize::clear_buildbase() {
  buildbase_.Clear();
}
inline const ::HelloKittyMsgData::BuildBase& Serialize::buildbase(int index) const {
  return buildbase_.Get(index);
}
inline ::HelloKittyMsgData::BuildBase* Serialize::mutable_buildbase(int index) {
  return buildbase_.Mutable(index);
}
inline ::HelloKittyMsgData::BuildBase* Serialize::add_buildbase() {
  return buildbase_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase >&
Serialize::buildbase() const {
  return buildbase_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildBase >*
Serialize::mutable_buildbase() {
  return &buildbase_;
}

// repeated .HelloKittyMsgData.BuildProduce buildproduce = 7;
inline int Serialize::buildproduce_size() const {
  return buildproduce_.size();
}
inline void Serialize::clear_buildproduce() {
  buildproduce_.Clear();
}
inline const ::HelloKittyMsgData::BuildProduce& Serialize::buildproduce(int index) const {
  return buildproduce_.Get(index);
}
inline ::HelloKittyMsgData::BuildProduce* Serialize::mutable_buildproduce(int index) {
  return buildproduce_.Mutable(index);
}
inline ::HelloKittyMsgData::BuildProduce* Serialize::add_buildproduce() {
  return buildproduce_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce >&
Serialize::buildproduce() const {
  return buildproduce_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BuildProduce >*
Serialize::mutable_buildproduce() {
  return &buildproduce_;
}

// repeated .HelloKittyMsgData.StoreFunctionCell functioncell = 8;
inline int Serialize::functioncell_size() const {
  return functioncell_.size();
}
inline void Serialize::clear_functioncell() {
  functioncell_.Clear();
}
inline const ::HelloKittyMsgData::StoreFunctionCell& Serialize::functioncell(int index) const {
  return functioncell_.Get(index);
}
inline ::HelloKittyMsgData::StoreFunctionCell* Serialize::mutable_functioncell(int index) {
  return functioncell_.Mutable(index);
}
inline ::HelloKittyMsgData::StoreFunctionCell* Serialize::add_functioncell() {
  return functioncell_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::StoreFunctionCell >&
Serialize::functioncell() const {
  return functioncell_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::StoreFunctionCell >*
Serialize::mutable_functioncell() {
  return &functioncell_;
}

// repeated .HelloKittyMsgData.UseCardInfo usecard = 9;
inline int Serialize::usecard_size() const {
  return usecard_.size();
}
inline void Serialize::clear_usecard() {
  usecard_.Clear();
}
inline const ::HelloKittyMsgData::UseCardInfo& Serialize::usecard(int index) const {
  return usecard_.Get(index);
}
inline ::HelloKittyMsgData::UseCardInfo* Serialize::mutable_usecard(int index) {
  return usecard_.Mutable(index);
}
inline ::HelloKittyMsgData::UseCardInfo* Serialize::add_usecard() {
  return usecard_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::UseCardInfo >&
Serialize::usecard() const {
  return usecard_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::UseCardInfo >*
Serialize::mutable_usecard() {
  return &usecard_;
}

// repeated .HelloKittyMsgData.WareHouseBuildBase warebuild = 10;
inline int Serialize::warebuild_size() const {
  return warebuild_.size();
}
inline void Serialize::clear_warebuild() {
  warebuild_.Clear();
}
inline const ::HelloKittyMsgData::WareHouseBuildBase& Serialize::warebuild(int index) const {
  return warebuild_.Get(index);
}
inline ::HelloKittyMsgData::WareHouseBuildBase* Serialize::mutable_warebuild(int index) {
  return warebuild_.Mutable(index);
}
inline ::HelloKittyMsgData::WareHouseBuildBase* Serialize::add_warebuild() {
  return warebuild_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase >&
Serialize::warebuild() const {
  return warebuild_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::WareHouseBuildBase >*
Serialize::mutable_warebuild() {
  return &warebuild_;
}

// repeated .HelloKittyMsgData.Worker worker = 11;
inline int Serialize::worker_size() const {
  return worker_.size();
}
inline void Serialize::clear_worker() {
  worker_.Clear();
}
inline const ::HelloKittyMsgData::Worker& Serialize::worker(int index) const {
  return worker_.Get(index);
}
inline ::HelloKittyMsgData::Worker* Serialize::mutable_worker(int index) {
  return worker_.Mutable(index);
}
inline ::HelloKittyMsgData::Worker* Serialize::add_worker() {
  return worker_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker >&
Serialize::worker() const {
  return worker_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Worker >*
Serialize::mutable_worker() {
  return &worker_;
}

// repeated .HelloKittyMsgData.Task task = 12;
inline int Serialize::task_size() const {
  return task_.size();
}
inline void Serialize::clear_task() {
  task_.Clear();
}
inline const ::HelloKittyMsgData::Task& Serialize::task(int index) const {
  return task_.Get(index);
}
inline ::HelloKittyMsgData::Task* Serialize::mutable_task(int index) {
  return task_.Mutable(index);
}
inline ::HelloKittyMsgData::Task* Serialize::add_task() {
  return task_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Task >&
Serialize::task() const {
  return task_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::Task >*
Serialize::mutable_task() {
  return &task_;
}

// repeated uint32 atlas = 13;
inline int Serialize::atlas_size() const {
  return atlas_.size();
}
inline void Serialize::clear_atlas() {
  atlas_.Clear();
}
inline ::google::protobuf::uint32 Serialize::atlas(int index) const {
  return atlas_.Get(index);
}
inline void Serialize::set_atlas(int index, ::google::protobuf::uint32 value) {
  atlas_.Set(index, value);
}
inline void Serialize::add_atlas(::google::protobuf::uint32 value) {
  atlas_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Serialize::atlas() const {
  return atlas_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Serialize::mutable_atlas() {
  return &atlas_;
}

// repeated .HelloKittyMsgData.AchieveMent achievement = 14;
inline int Serialize::achievement_size() const {
  return achievement_.size();
}
inline void Serialize::clear_achievement() {
  achievement_.Clear();
}
inline const ::HelloKittyMsgData::AchieveMent& Serialize::achievement(int index) const {
  return achievement_.Get(index);
}
inline ::HelloKittyMsgData::AchieveMent* Serialize::mutable_achievement(int index) {
  return achievement_.Mutable(index);
}
inline ::HelloKittyMsgData::AchieveMent* Serialize::add_achievement() {
  return achievement_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::AchieveMent >&
Serialize::achievement() const {
  return achievement_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::AchieveMent >*
Serialize::mutable_achievement() {
  return &achievement_;
}

// repeated .HelloKittyMsgData.SaveForEvent event = 15;
inline int Serialize::event_size() const {
  return event_.size();
}
inline void Serialize::clear_event() {
  event_.Clear();
}
inline const ::HelloKittyMsgData::SaveForEvent& Serialize::event(int index) const {
  return event_.Get(index);
}
inline ::HelloKittyMsgData::SaveForEvent* Serialize::mutable_event(int index) {
  return event_.Mutable(index);
}
inline ::HelloKittyMsgData::SaveForEvent* Serialize::add_event() {
  return event_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SaveForEvent >&
Serialize::event() const {
  return event_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::SaveForEvent >*
Serialize::mutable_event() {
  return &event_;
}

// repeated .HelloKittyMsgData.EmailInfo email = 16;
inline int Serialize::email_size() const {
  return email_.size();
}
inline void Serialize::clear_email() {
  email_.Clear();
}
inline const ::HelloKittyMsgData::EmailInfo& Serialize::email(int index) const {
  return email_.Get(index);
}
inline ::HelloKittyMsgData::EmailInfo* Serialize::mutable_email(int index) {
  return email_.Mutable(index);
}
inline ::HelloKittyMsgData::EmailInfo* Serialize::add_email() {
  return email_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EmailInfo >&
Serialize::email() const {
  return email_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::EmailInfo >*
Serialize::mutable_email() {
  return &email_;
}

// repeated .HelloKittyMsgData.DressData dress = 17;
inline int Serialize::dress_size() const {
  return dress_.size();
}
inline void Serialize::clear_dress() {
  dress_.Clear();
}
inline const ::HelloKittyMsgData::DressData& Serialize::dress(int index) const {
  return dress_.Get(index);
}
inline ::HelloKittyMsgData::DressData* Serialize::mutable_dress(int index) {
  return dress_.Mutable(index);
}
inline ::HelloKittyMsgData::DressData* Serialize::add_dress() {
  return dress_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::DressData >&
Serialize::dress() const {
  return dress_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::DressData >*
Serialize::mutable_dress() {
  return &dress_;
}

// repeated .HelloKittyMsgData.PaperData paper = 18;
inline int Serialize::paper_size() const {
  return paper_.size();
}
inline void Serialize::clear_paper() {
  paper_.Clear();
}
inline const ::HelloKittyMsgData::PaperData& Serialize::paper(int index) const {
  return paper_.Get(index);
}
inline ::HelloKittyMsgData::PaperData* Serialize::mutable_paper(int index) {
  return paper_.Mutable(index);
}
inline ::HelloKittyMsgData::PaperData* Serialize::add_paper() {
  return paper_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PaperData >&
Serialize::paper() const {
  return paper_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::PaperData >*
Serialize::mutable_paper() {
  return &paper_;
}

// repeated .HelloKittyMsgData.BurstEvent burstevent = 19;
inline int Serialize::burstevent_size() const {
  return burstevent_.size();
}
inline void Serialize::clear_burstevent() {
  burstevent_.Clear();
}
inline const ::HelloKittyMsgData::BurstEvent& Serialize::burstevent(int index) const {
  return burstevent_.Get(index);
}
inline ::HelloKittyMsgData::BurstEvent* Serialize::mutable_burstevent(int index) {
  return burstevent_.Mutable(index);
}
inline ::HelloKittyMsgData::BurstEvent* Serialize::add_burstevent() {
  return burstevent_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BurstEvent >&
Serialize::burstevent() const {
  return burstevent_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BurstEvent >*
Serialize::mutable_burstevent() {
  return &burstevent_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_serialize_2eproto__INCLUDED
