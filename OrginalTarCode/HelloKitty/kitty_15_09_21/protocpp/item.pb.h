// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto

#ifndef PROTOBUF_item_2eproto__INCLUDED
#define PROTOBUF_item_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_item_2eproto();
void protobuf_AssignDesc_item_2eproto();
void protobuf_ShutdownFile_item_2eproto();

class ReqUseItem;
class AckUseItemReturn;

enum UseItemFailType {
  Fail_Item_Illeay = 0,
  Fail_Item_Not_Enough = 1,
  Fail_Item_Level_Limited = 2,
  Fail_Item_Premise_Limited = 3
};
bool UseItemFailType_IsValid(int value);
const UseItemFailType UseItemFailType_MIN = Fail_Item_Illeay;
const UseItemFailType UseItemFailType_MAX = Fail_Item_Premise_Limited;
const int UseItemFailType_ARRAYSIZE = UseItemFailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UseItemFailType_descriptor();
inline const ::std::string& UseItemFailType_Name(UseItemFailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UseItemFailType_descriptor(), value);
}
inline bool UseItemFailType_Parse(
    const ::std::string& name, UseItemFailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UseItemFailType>(
    UseItemFailType_descriptor(), name, value);
}
// ===================================================================

class ReqUseItem : public ::google::protobuf::Message {
 public:
  ReqUseItem();
  virtual ~ReqUseItem();

  ReqUseItem(const ReqUseItem& from);

  inline ReqUseItem& operator=(const ReqUseItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqUseItem& default_instance();

  void Swap(ReqUseItem* other);

  // implements Message ----------------------------------------------

  ReqUseItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqUseItem& from);
  void MergeFrom(const ReqUseItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 itemID = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 1;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 num = 2;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 2;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqUseItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_item_2eproto();
  friend void protobuf_AssignDesc_item_2eproto();
  friend void protobuf_ShutdownFile_item_2eproto();

  void InitAsDefaultInstance();
  static ReqUseItem* default_instance_;
};
// -------------------------------------------------------------------

class AckUseItemReturn : public ::google::protobuf::Message {
 public:
  AckUseItemReturn();
  virtual ~AckUseItemReturn();

  AckUseItemReturn(const AckUseItemReturn& from);

  inline AckUseItemReturn& operator=(const AckUseItemReturn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUseItemReturn& default_instance();

  void Swap(AckUseItemReturn* other);

  // implements Message ----------------------------------------------

  AckUseItemReturn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUseItemReturn& from);
  void MergeFrom(const AckUseItemReturn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bool ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline bool ret() const;
  inline void set_ret(bool value);

  // required .HelloKittyMsgData.UseItemFailType reason = 2;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 2;
  inline ::HelloKittyMsgData::UseItemFailType reason() const;
  inline void set_reason(::HelloKittyMsgData::UseItemFailType value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckUseItemReturn)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool ret_;
  int reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_item_2eproto();
  friend void protobuf_AssignDesc_item_2eproto();
  friend void protobuf_ShutdownFile_item_2eproto();

  void InitAsDefaultInstance();
  static AckUseItemReturn* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqUseItem

// required uint32 itemID = 1;
inline bool ReqUseItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqUseItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqUseItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqUseItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 ReqUseItem::itemid() const {
  return itemid_;
}
inline void ReqUseItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 num = 2;
inline bool ReqUseItem::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqUseItem::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqUseItem::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqUseItem::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 ReqUseItem::num() const {
  return num_;
}
inline void ReqUseItem::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// -------------------------------------------------------------------

// AckUseItemReturn

// required bool ret = 1;
inline bool AckUseItemReturn::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUseItemReturn::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUseItemReturn::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUseItemReturn::clear_ret() {
  ret_ = false;
  clear_has_ret();
}
inline bool AckUseItemReturn::ret() const {
  return ret_;
}
inline void AckUseItemReturn::set_ret(bool value) {
  set_has_ret();
  ret_ = value;
}

// required .HelloKittyMsgData.UseItemFailType reason = 2;
inline bool AckUseItemReturn::has_reason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckUseItemReturn::set_has_reason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckUseItemReturn::clear_has_reason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckUseItemReturn::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::HelloKittyMsgData::UseItemFailType AckUseItemReturn::reason() const {
  return static_cast< ::HelloKittyMsgData::UseItemFailType >(reason_);
}
inline void AckUseItemReturn::set_reason(::HelloKittyMsgData::UseItemFailType value) {
  assert(::HelloKittyMsgData::UseItemFailType_IsValid(value));
  set_has_reason();
  reason_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::UseItemFailType>() {
  return ::HelloKittyMsgData::UseItemFailType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_item_2eproto__INCLUDED
