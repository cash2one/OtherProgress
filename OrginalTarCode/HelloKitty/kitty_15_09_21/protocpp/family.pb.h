// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: family.proto

#ifndef PROTOBUF_family_2eproto__INCLUDED
#define PROTOBUF_family_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_family_2eproto();
void protobuf_AssignDesc_family_2eproto();
void protobuf_ShutdownFile_family_2eproto();

class BaseFamilyInfo;
class ReqGetFamilyList;
class AckReqGetFamilyList;
class ReqAddFamily;
class AckReqAddFamily;
class ReqCancelApply;
class AckReqCancelApply;
class ReqCreateFamily;
class AckReqCreateFamily;
class ReqAgreeJoin;
class AckReqAgreeJoin;
class FamilyMember;
class FamilyInfo;
class ReqselfFamilyInfo;
class AckReqselfFamilyInfo;
class ReqQuitFamily;
class AckReqQuitFamily;
class ReqUpdateOtherFamilyJob;
class AckUpdateOtherFamilyJob;
class ReqKickFamilyMember;
class AckReqKickFamilyMember;
class ReqSetFamilyBaseInfo;
class AckReqSetFamilyBaseInfo;
class ReqFamilyRanking;
class AckReqFamilyRanking;

enum FamilyPublicType {
  PublicForAll = 0,
  NoPublic = 1,
  Needapply = 2,
  MAXPublicType = 3
};
bool FamilyPublicType_IsValid(int value);
const FamilyPublicType FamilyPublicType_MIN = PublicForAll;
const FamilyPublicType FamilyPublicType_MAX = MAXPublicType;
const int FamilyPublicType_ARRAYSIZE = FamilyPublicType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FamilyPublicType_descriptor();
inline const ::std::string& FamilyPublicType_Name(FamilyPublicType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FamilyPublicType_descriptor(), value);
}
inline bool FamilyPublicType_Parse(
    const ::std::string& name, FamilyPublicType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FamilyPublicType>(
    FamilyPublicType_descriptor(), name, value);
}
enum FamilyJob {
  Family_Leader = 0,
  Family_Member = 1
};
bool FamilyJob_IsValid(int value);
const FamilyJob FamilyJob_MIN = Family_Leader;
const FamilyJob FamilyJob_MAX = Family_Member;
const int FamilyJob_ARRAYSIZE = FamilyJob_MAX + 1;

const ::google::protobuf::EnumDescriptor* FamilyJob_descriptor();
inline const ::std::string& FamilyJob_Name(FamilyJob value) {
  return ::google::protobuf::internal::NameOfEnum(
    FamilyJob_descriptor(), value);
}
inline bool FamilyJob_Parse(
    const ::std::string& name, FamilyJob* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FamilyJob>(
    FamilyJob_descriptor(), name, value);
}
enum FamilyOpResult {
  FamilyOpResult_Suc = 0,
  FamilyOpResult_Suc2 = 1,
  FamilyOpResult_FamilyNoExist = 2,
  FamilyOpResult_HasFamily = 3,
  FamilyOpResult_ApplyMax = 4,
  FamilyOpResult_NoFamilyBuild = 5,
  FamilyOpResult_HasApply = 6,
  FamilyOpResult_SourceLimit = 7,
  FamilyOpResult_NoLeader = 8,
  FamilyOpResult_NoApply = 9,
  FamilyOpResult_NoFamily = 10,
  FamilyOpResult_LeaderCanNotQuit = 11,
  FamilyOpResult_OpSelf = 12,
  FamilyOpResult_NameTooLong = 13,
  FamilyOpResult_Nameillegal = 14,
  FamilyOpResult_NoticeToLong = 15,
  FamilyOpResult_Noticeillegal = 16,
  FamilyOpResult_LevelLimitErr = 17,
  FamilyOpResult_FamilyFull = 18,
  FamilyOpResult_NoPublic = 19,
  FamilyOpResult_NameTooShort = 20,
  FamilyOpResult_NoIcon = 21,
  FamilyOpResult_PublicSetErr = 22,
  FamilyOpResult_JoinLevelErr = 23,
  FamilyOpResult_ServerBusy = 24,
  FamilyOpResult_OtherErr = 25
};
bool FamilyOpResult_IsValid(int value);
const FamilyOpResult FamilyOpResult_MIN = FamilyOpResult_Suc;
const FamilyOpResult FamilyOpResult_MAX = FamilyOpResult_OtherErr;
const int FamilyOpResult_ARRAYSIZE = FamilyOpResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* FamilyOpResult_descriptor();
inline const ::std::string& FamilyOpResult_Name(FamilyOpResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    FamilyOpResult_descriptor(), value);
}
inline bool FamilyOpResult_Parse(
    const ::std::string& name, FamilyOpResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FamilyOpResult>(
    FamilyOpResult_descriptor(), name, value);
}
// ===================================================================

class BaseFamilyInfo : public ::google::protobuf::Message {
 public:
  BaseFamilyInfo();
  virtual ~BaseFamilyInfo();

  BaseFamilyInfo(const BaseFamilyInfo& from);

  inline BaseFamilyInfo& operator=(const BaseFamilyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseFamilyInfo& default_instance();

  void Swap(BaseFamilyInfo* other);

  // implements Message ----------------------------------------------

  BaseFamilyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseFamilyInfo& from);
  void MergeFrom(const BaseFamilyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 familyid = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyidFieldNumber = 1;
  inline ::google::protobuf::uint64 familyid() const;
  inline void set_familyid(::google::protobuf::uint64 value);

  // required string familyname = 2;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilynameFieldNumber = 2;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  inline ::std::string* release_familyname();
  inline void set_allocated_familyname(::std::string* familyname);

  // required uint32 familyicon = 3;
  inline bool has_familyicon() const;
  inline void clear_familyicon();
  static const int kFamilyiconFieldNumber = 3;
  inline ::google::protobuf::uint32 familyicon() const;
  inline void set_familyicon(::google::protobuf::uint32 value);

  // required uint32 personnum = 4;
  inline bool has_personnum() const;
  inline void clear_personnum();
  static const int kPersonnumFieldNumber = 4;
  inline ::google::protobuf::uint32 personnum() const;
  inline void set_personnum(::google::protobuf::uint32 value);

  // required uint32 relation = 5;
  inline bool has_relation() const;
  inline void clear_relation();
  static const int kRelationFieldNumber = 5;
  inline ::google::protobuf::uint32 relation() const;
  inline void set_relation(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.FamilyPublicType pulictype = 6;
  inline bool has_pulictype() const;
  inline void clear_pulictype();
  static const int kPulictypeFieldNumber = 6;
  inline ::HelloKittyMsgData::FamilyPublicType pulictype() const;
  inline void set_pulictype(::HelloKittyMsgData::FamilyPublicType value);

  // required uint32 lowlevel = 7;
  inline bool has_lowlevel() const;
  inline void clear_lowlevel();
  static const int kLowlevelFieldNumber = 7;
  inline ::google::protobuf::uint32 lowlevel() const;
  inline void set_lowlevel(::google::protobuf::uint32 value);

  // required uint32 highlevel = 8;
  inline bool has_highlevel() const;
  inline void clear_highlevel();
  static const int kHighlevelFieldNumber = 8;
  inline ::google::protobuf::uint32 highlevel() const;
  inline void set_highlevel(::google::protobuf::uint32 value);

  // required uint32 totalscore = 9;
  inline bool has_totalscore() const;
  inline void clear_totalscore();
  static const int kTotalscoreFieldNumber = 9;
  inline ::google::protobuf::uint32 totalscore() const;
  inline void set_totalscore(::google::protobuf::uint32 value);

  // required uint32 familylevel = 10;
  inline bool has_familylevel() const;
  inline void clear_familylevel();
  static const int kFamilylevelFieldNumber = 10;
  inline ::google::protobuf::uint32 familylevel() const;
  inline void set_familylevel(::google::protobuf::uint32 value);

  // required uint32 ranking = 11;
  inline bool has_ranking() const;
  inline void clear_ranking();
  static const int kRankingFieldNumber = 11;
  inline ::google::protobuf::uint32 ranking() const;
  inline void set_ranking(::google::protobuf::uint32 value);

  // required uint32 lastranking = 12;
  inline bool has_lastranking() const;
  inline void clear_lastranking();
  static const int kLastrankingFieldNumber = 12;
  inline ::google::protobuf::uint32 lastranking() const;
  inline void set_lastranking(::google::protobuf::uint32 value);

  // required string familynotice = 13;
  inline bool has_familynotice() const;
  inline void clear_familynotice();
  static const int kFamilynoticeFieldNumber = 13;
  inline const ::std::string& familynotice() const;
  inline void set_familynotice(const ::std::string& value);
  inline void set_familynotice(const char* value);
  inline void set_familynotice(const char* value, size_t size);
  inline ::std::string* mutable_familynotice();
  inline ::std::string* release_familynotice();
  inline void set_allocated_familynotice(::std::string* familynotice);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.BaseFamilyInfo)
 private:
  inline void set_has_familyid();
  inline void clear_has_familyid();
  inline void set_has_familyname();
  inline void clear_has_familyname();
  inline void set_has_familyicon();
  inline void clear_has_familyicon();
  inline void set_has_personnum();
  inline void clear_has_personnum();
  inline void set_has_relation();
  inline void clear_has_relation();
  inline void set_has_pulictype();
  inline void clear_has_pulictype();
  inline void set_has_lowlevel();
  inline void clear_has_lowlevel();
  inline void set_has_highlevel();
  inline void clear_has_highlevel();
  inline void set_has_totalscore();
  inline void clear_has_totalscore();
  inline void set_has_familylevel();
  inline void clear_has_familylevel();
  inline void set_has_ranking();
  inline void clear_has_ranking();
  inline void set_has_lastranking();
  inline void clear_has_lastranking();
  inline void set_has_familynotice();
  inline void clear_has_familynotice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 familyid_;
  ::std::string* familyname_;
  ::google::protobuf::uint32 familyicon_;
  ::google::protobuf::uint32 personnum_;
  ::google::protobuf::uint32 relation_;
  int pulictype_;
  ::google::protobuf::uint32 lowlevel_;
  ::google::protobuf::uint32 highlevel_;
  ::google::protobuf::uint32 totalscore_;
  ::google::protobuf::uint32 familylevel_;
  ::google::protobuf::uint32 ranking_;
  ::google::protobuf::uint32 lastranking_;
  ::std::string* familynotice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static BaseFamilyInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqGetFamilyList : public ::google::protobuf::Message {
 public:
  ReqGetFamilyList();
  virtual ~ReqGetFamilyList();

  ReqGetFamilyList(const ReqGetFamilyList& from);

  inline ReqGetFamilyList& operator=(const ReqGetFamilyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqGetFamilyList& default_instance();

  void Swap(ReqGetFamilyList* other);

  // implements Message ----------------------------------------------

  ReqGetFamilyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqGetFamilyList& from);
  void MergeFrom(const ReqGetFamilyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 familyid = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyidFieldNumber = 1;
  inline ::google::protobuf::uint64 familyid() const;
  inline void set_familyid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqGetFamilyList)
 private:
  inline void set_has_familyid();
  inline void clear_has_familyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 familyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqGetFamilyList* default_instance_;
};
// -------------------------------------------------------------------

class AckReqGetFamilyList : public ::google::protobuf::Message {
 public:
  AckReqGetFamilyList();
  virtual ~AckReqGetFamilyList();

  AckReqGetFamilyList(const AckReqGetFamilyList& from);

  inline AckReqGetFamilyList& operator=(const AckReqGetFamilyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqGetFamilyList& default_instance();

  void Swap(AckReqGetFamilyList* other);

  // implements Message ----------------------------------------------

  AckReqGetFamilyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqGetFamilyList& from);
  void MergeFrom(const AckReqGetFamilyList& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 familyid = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyidFieldNumber = 1;
  inline ::google::protobuf::uint64 familyid() const;
  inline void set_familyid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FamilyOpResult Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // repeated .HelloKittyMsgData.BaseFamilyInfo vecfamily = 3;
  inline int vecfamily_size() const;
  inline void clear_vecfamily();
  static const int kVecfamilyFieldNumber = 3;
  inline const ::HelloKittyMsgData::BaseFamilyInfo& vecfamily(int index) const;
  inline ::HelloKittyMsgData::BaseFamilyInfo* mutable_vecfamily(int index);
  inline ::HelloKittyMsgData::BaseFamilyInfo* add_vecfamily();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo >&
      vecfamily() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo >*
      mutable_vecfamily();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqGetFamilyList)
 private:
  inline void set_has_familyid();
  inline void clear_has_familyid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 familyid_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo > vecfamily_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqGetFamilyList* default_instance_;
};
// -------------------------------------------------------------------

class ReqAddFamily : public ::google::protobuf::Message {
 public:
  ReqAddFamily();
  virtual ~ReqAddFamily();

  ReqAddFamily(const ReqAddFamily& from);

  inline ReqAddFamily& operator=(const ReqAddFamily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAddFamily& default_instance();

  void Swap(ReqAddFamily* other);

  // implements Message ----------------------------------------------

  ReqAddFamily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAddFamily& from);
  void MergeFrom(const ReqAddFamily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 familyid = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyidFieldNumber = 1;
  inline ::google::protobuf::uint64 familyid() const;
  inline void set_familyid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqAddFamily)
 private:
  inline void set_has_familyid();
  inline void clear_has_familyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 familyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqAddFamily* default_instance_;
};
// -------------------------------------------------------------------

class AckReqAddFamily : public ::google::protobuf::Message {
 public:
  AckReqAddFamily();
  virtual ~AckReqAddFamily();

  AckReqAddFamily(const AckReqAddFamily& from);

  inline AckReqAddFamily& operator=(const AckReqAddFamily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqAddFamily& default_instance();

  void Swap(AckReqAddFamily* other);

  // implements Message ----------------------------------------------

  AckReqAddFamily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqAddFamily& from);
  void MergeFrom(const AckReqAddFamily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 familyid = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyidFieldNumber = 1;
  inline ::google::protobuf::uint64 familyid() const;
  inline void set_familyid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FamilyOpResult Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // optional string familyname = 3 [default = ""];
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilynameFieldNumber = 3;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  inline ::std::string* release_familyname();
  inline void set_allocated_familyname(::std::string* familyname);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqAddFamily)
 private:
  inline void set_has_familyid();
  inline void clear_has_familyid();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_familyname();
  inline void clear_has_familyname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 familyid_;
  ::std::string* familyname_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqAddFamily* default_instance_;
};
// -------------------------------------------------------------------

class ReqCancelApply : public ::google::protobuf::Message {
 public:
  ReqCancelApply();
  virtual ~ReqCancelApply();

  ReqCancelApply(const ReqCancelApply& from);

  inline ReqCancelApply& operator=(const ReqCancelApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCancelApply& default_instance();

  void Swap(ReqCancelApply* other);

  // implements Message ----------------------------------------------

  ReqCancelApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCancelApply& from);
  void MergeFrom(const ReqCancelApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 familyid = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyidFieldNumber = 1;
  inline ::google::protobuf::uint64 familyid() const;
  inline void set_familyid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqCancelApply)
 private:
  inline void set_has_familyid();
  inline void clear_has_familyid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 familyid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqCancelApply* default_instance_;
};
// -------------------------------------------------------------------

class AckReqCancelApply : public ::google::protobuf::Message {
 public:
  AckReqCancelApply();
  virtual ~AckReqCancelApply();

  AckReqCancelApply(const AckReqCancelApply& from);

  inline AckReqCancelApply& operator=(const AckReqCancelApply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqCancelApply& default_instance();

  void Swap(AckReqCancelApply* other);

  // implements Message ----------------------------------------------

  AckReqCancelApply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqCancelApply& from);
  void MergeFrom(const AckReqCancelApply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 familyid = 1;
  inline bool has_familyid() const;
  inline void clear_familyid();
  static const int kFamilyidFieldNumber = 1;
  inline ::google::protobuf::uint64 familyid() const;
  inline void set_familyid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FamilyOpResult Result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqCancelApply)
 private:
  inline void set_has_familyid();
  inline void clear_has_familyid();
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 familyid_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqCancelApply* default_instance_;
};
// -------------------------------------------------------------------

class ReqCreateFamily : public ::google::protobuf::Message {
 public:
  ReqCreateFamily();
  virtual ~ReqCreateFamily();

  ReqCreateFamily(const ReqCreateFamily& from);

  inline ReqCreateFamily& operator=(const ReqCreateFamily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqCreateFamily& default_instance();

  void Swap(ReqCreateFamily* other);

  // implements Message ----------------------------------------------

  ReqCreateFamily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqCreateFamily& from);
  void MergeFrom(const ReqCreateFamily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string familyname = 1;
  inline bool has_familyname() const;
  inline void clear_familyname();
  static const int kFamilynameFieldNumber = 1;
  inline const ::std::string& familyname() const;
  inline void set_familyname(const ::std::string& value);
  inline void set_familyname(const char* value);
  inline void set_familyname(const char* value, size_t size);
  inline ::std::string* mutable_familyname();
  inline ::std::string* release_familyname();
  inline void set_allocated_familyname(::std::string* familyname);

  // required uint32 familyicon = 2;
  inline bool has_familyicon() const;
  inline void clear_familyicon();
  static const int kFamilyiconFieldNumber = 2;
  inline ::google::protobuf::uint32 familyicon() const;
  inline void set_familyicon(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.FamilyPublicType pulictype = 3;
  inline bool has_pulictype() const;
  inline void clear_pulictype();
  static const int kPulictypeFieldNumber = 3;
  inline ::HelloKittyMsgData::FamilyPublicType pulictype() const;
  inline void set_pulictype(::HelloKittyMsgData::FamilyPublicType value);

  // required uint32 lowlevel = 4;
  inline bool has_lowlevel() const;
  inline void clear_lowlevel();
  static const int kLowlevelFieldNumber = 4;
  inline ::google::protobuf::uint32 lowlevel() const;
  inline void set_lowlevel(::google::protobuf::uint32 value);

  // required uint32 highlevel = 5;
  inline bool has_highlevel() const;
  inline void clear_highlevel();
  static const int kHighlevelFieldNumber = 5;
  inline ::google::protobuf::uint32 highlevel() const;
  inline void set_highlevel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqCreateFamily)
 private:
  inline void set_has_familyname();
  inline void clear_has_familyname();
  inline void set_has_familyicon();
  inline void clear_has_familyicon();
  inline void set_has_pulictype();
  inline void clear_has_pulictype();
  inline void set_has_lowlevel();
  inline void clear_has_lowlevel();
  inline void set_has_highlevel();
  inline void clear_has_highlevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* familyname_;
  ::google::protobuf::uint32 familyicon_;
  int pulictype_;
  ::google::protobuf::uint32 lowlevel_;
  ::google::protobuf::uint32 highlevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqCreateFamily* default_instance_;
};
// -------------------------------------------------------------------

class AckReqCreateFamily : public ::google::protobuf::Message {
 public:
  AckReqCreateFamily();
  virtual ~AckReqCreateFamily();

  AckReqCreateFamily(const AckReqCreateFamily& from);

  inline AckReqCreateFamily& operator=(const AckReqCreateFamily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqCreateFamily& default_instance();

  void Swap(AckReqCreateFamily* other);

  // implements Message ----------------------------------------------

  AckReqCreateFamily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqCreateFamily& from);
  void MergeFrom(const AckReqCreateFamily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.FamilyOpResult Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqCreateFamily)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqCreateFamily* default_instance_;
};
// -------------------------------------------------------------------

class ReqAgreeJoin : public ::google::protobuf::Message {
 public:
  ReqAgreeJoin();
  virtual ~ReqAgreeJoin();

  ReqAgreeJoin(const ReqAgreeJoin& from);

  inline ReqAgreeJoin& operator=(const ReqAgreeJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqAgreeJoin& default_instance();

  void Swap(ReqAgreeJoin* other);

  // implements Message ----------------------------------------------

  ReqAgreeJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqAgreeJoin& from);
  void MergeFrom(const ReqAgreeJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 isagree = 2;
  inline bool has_isagree() const;
  inline void clear_isagree();
  static const int kIsagreeFieldNumber = 2;
  inline ::google::protobuf::uint32 isagree() const;
  inline void set_isagree(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqAgreeJoin)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_isagree();
  inline void clear_has_isagree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::google::protobuf::uint32 isagree_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqAgreeJoin* default_instance_;
};
// -------------------------------------------------------------------

class AckReqAgreeJoin : public ::google::protobuf::Message {
 public:
  AckReqAgreeJoin();
  virtual ~AckReqAgreeJoin();

  AckReqAgreeJoin(const AckReqAgreeJoin& from);

  inline AckReqAgreeJoin& operator=(const AckReqAgreeJoin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqAgreeJoin& default_instance();

  void Swap(AckReqAgreeJoin* other);

  // implements Message ----------------------------------------------

  AckReqAgreeJoin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqAgreeJoin& from);
  void MergeFrom(const AckReqAgreeJoin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.FamilyOpResult Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // required uint64 charid = 2;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 2;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required uint32 isagree = 3;
  inline bool has_isagree() const;
  inline void clear_isagree();
  static const int kIsagreeFieldNumber = 3;
  inline ::google::protobuf::uint32 isagree() const;
  inline void set_isagree(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqAgreeJoin)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_isagree();
  inline void clear_has_isagree();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  int result_;
  ::google::protobuf::uint32 isagree_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqAgreeJoin* default_instance_;
};
// -------------------------------------------------------------------

class FamilyMember : public ::google::protobuf::Message {
 public:
  FamilyMember();
  virtual ~FamilyMember();

  FamilyMember(const FamilyMember& from);

  inline FamilyMember& operator=(const FamilyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FamilyMember& default_instance();

  void Swap(FamilyMember* other);

  // implements Message ----------------------------------------------

  FamilyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FamilyMember& from);
  void MergeFrom(const FamilyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional .HelloKittyMsgData.FamilyJob job = 4 [default = Family_Member];
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 4;
  inline ::HelloKittyMsgData::FamilyJob job() const;
  inline void set_job(::HelloKittyMsgData::FamilyJob value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.FamilyMember)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  int job_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static FamilyMember* default_instance_;
};
// -------------------------------------------------------------------

class FamilyInfo : public ::google::protobuf::Message {
 public:
  FamilyInfo();
  virtual ~FamilyInfo();

  FamilyInfo(const FamilyInfo& from);

  inline FamilyInfo& operator=(const FamilyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FamilyInfo& default_instance();

  void Swap(FamilyInfo* other);

  // implements Message ----------------------------------------------

  FamilyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FamilyInfo& from);
  void MergeFrom(const FamilyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.BaseFamilyInfo baseinfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseinfoFieldNumber = 1;
  inline const ::HelloKittyMsgData::BaseFamilyInfo& baseinfo() const;
  inline ::HelloKittyMsgData::BaseFamilyInfo* mutable_baseinfo();
  inline ::HelloKittyMsgData::BaseFamilyInfo* release_baseinfo();
  inline void set_allocated_baseinfo(::HelloKittyMsgData::BaseFamilyInfo* baseinfo);

  // repeated .HelloKittyMsgData.FamilyMember vecmember = 2;
  inline int vecmember_size() const;
  inline void clear_vecmember();
  static const int kVecmemberFieldNumber = 2;
  inline const ::HelloKittyMsgData::FamilyMember& vecmember(int index) const;
  inline ::HelloKittyMsgData::FamilyMember* mutable_vecmember(int index);
  inline ::HelloKittyMsgData::FamilyMember* add_vecmember();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember >&
      vecmember() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember >*
      mutable_vecmember();

  // repeated .HelloKittyMsgData.FamilyMember vecappy = 3;
  inline int vecappy_size() const;
  inline void clear_vecappy();
  static const int kVecappyFieldNumber = 3;
  inline const ::HelloKittyMsgData::FamilyMember& vecappy(int index) const;
  inline ::HelloKittyMsgData::FamilyMember* mutable_vecappy(int index);
  inline ::HelloKittyMsgData::FamilyMember* add_vecappy();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember >&
      vecappy() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember >*
      mutable_vecappy();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.FamilyInfo)
 private:
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::BaseFamilyInfo* baseinfo_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember > vecmember_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember > vecappy_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static FamilyInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqselfFamilyInfo : public ::google::protobuf::Message {
 public:
  ReqselfFamilyInfo();
  virtual ~ReqselfFamilyInfo();

  ReqselfFamilyInfo(const ReqselfFamilyInfo& from);

  inline ReqselfFamilyInfo& operator=(const ReqselfFamilyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqselfFamilyInfo& default_instance();

  void Swap(ReqselfFamilyInfo* other);

  // implements Message ----------------------------------------------

  ReqselfFamilyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqselfFamilyInfo& from);
  void MergeFrom(const ReqselfFamilyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqselfFamilyInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqselfFamilyInfo* default_instance_;
};
// -------------------------------------------------------------------

class AckReqselfFamilyInfo : public ::google::protobuf::Message {
 public:
  AckReqselfFamilyInfo();
  virtual ~AckReqselfFamilyInfo();

  AckReqselfFamilyInfo(const AckReqselfFamilyInfo& from);

  inline AckReqselfFamilyInfo& operator=(const AckReqselfFamilyInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqselfFamilyInfo& default_instance();

  void Swap(AckReqselfFamilyInfo* other);

  // implements Message ----------------------------------------------

  AckReqselfFamilyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqselfFamilyInfo& from);
  void MergeFrom(const AckReqselfFamilyInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.FamilyOpResult Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // optional .HelloKittyMsgData.FamilyInfo selfinfo = 2;
  inline bool has_selfinfo() const;
  inline void clear_selfinfo();
  static const int kSelfinfoFieldNumber = 2;
  inline const ::HelloKittyMsgData::FamilyInfo& selfinfo() const;
  inline ::HelloKittyMsgData::FamilyInfo* mutable_selfinfo();
  inline ::HelloKittyMsgData::FamilyInfo* release_selfinfo();
  inline void set_allocated_selfinfo(::HelloKittyMsgData::FamilyInfo* selfinfo);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqselfFamilyInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_selfinfo();
  inline void clear_has_selfinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::FamilyInfo* selfinfo_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqselfFamilyInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqQuitFamily : public ::google::protobuf::Message {
 public:
  ReqQuitFamily();
  virtual ~ReqQuitFamily();

  ReqQuitFamily(const ReqQuitFamily& from);

  inline ReqQuitFamily& operator=(const ReqQuitFamily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqQuitFamily& default_instance();

  void Swap(ReqQuitFamily* other);

  // implements Message ----------------------------------------------

  ReqQuitFamily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqQuitFamily& from);
  void MergeFrom(const ReqQuitFamily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqQuitFamily)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqQuitFamily* default_instance_;
};
// -------------------------------------------------------------------

class AckReqQuitFamily : public ::google::protobuf::Message {
 public:
  AckReqQuitFamily();
  virtual ~AckReqQuitFamily();

  AckReqQuitFamily(const AckReqQuitFamily& from);

  inline AckReqQuitFamily& operator=(const AckReqQuitFamily& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqQuitFamily& default_instance();

  void Swap(AckReqQuitFamily* other);

  // implements Message ----------------------------------------------

  AckReqQuitFamily* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqQuitFamily& from);
  void MergeFrom(const AckReqQuitFamily& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.FamilyOpResult Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqQuitFamily)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqQuitFamily* default_instance_;
};
// -------------------------------------------------------------------

class ReqUpdateOtherFamilyJob : public ::google::protobuf::Message {
 public:
  ReqUpdateOtherFamilyJob();
  virtual ~ReqUpdateOtherFamilyJob();

  ReqUpdateOtherFamilyJob(const ReqUpdateOtherFamilyJob& from);

  inline ReqUpdateOtherFamilyJob& operator=(const ReqUpdateOtherFamilyJob& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqUpdateOtherFamilyJob& default_instance();

  void Swap(ReqUpdateOtherFamilyJob* other);

  // implements Message ----------------------------------------------

  ReqUpdateOtherFamilyJob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqUpdateOtherFamilyJob& from);
  void MergeFrom(const ReqUpdateOtherFamilyJob& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqUpdateOtherFamilyJob)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqUpdateOtherFamilyJob* default_instance_;
};
// -------------------------------------------------------------------

class AckUpdateOtherFamilyJob : public ::google::protobuf::Message {
 public:
  AckUpdateOtherFamilyJob();
  virtual ~AckUpdateOtherFamilyJob();

  AckUpdateOtherFamilyJob(const AckUpdateOtherFamilyJob& from);

  inline AckUpdateOtherFamilyJob& operator=(const AckUpdateOtherFamilyJob& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckUpdateOtherFamilyJob& default_instance();

  void Swap(AckUpdateOtherFamilyJob* other);

  // implements Message ----------------------------------------------

  AckUpdateOtherFamilyJob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckUpdateOtherFamilyJob& from);
  void MergeFrom(const AckUpdateOtherFamilyJob& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.FamilyOpResult Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckUpdateOtherFamilyJob)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckUpdateOtherFamilyJob* default_instance_;
};
// -------------------------------------------------------------------

class ReqKickFamilyMember : public ::google::protobuf::Message {
 public:
  ReqKickFamilyMember();
  virtual ~ReqKickFamilyMember();

  ReqKickFamilyMember(const ReqKickFamilyMember& from);

  inline ReqKickFamilyMember& operator=(const ReqKickFamilyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqKickFamilyMember& default_instance();

  void Swap(ReqKickFamilyMember* other);

  // implements Message ----------------------------------------------

  ReqKickFamilyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqKickFamilyMember& from);
  void MergeFrom(const ReqKickFamilyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 charid = 1;
  inline bool has_charid() const;
  inline void clear_charid();
  static const int kCharidFieldNumber = 1;
  inline ::google::protobuf::uint64 charid() const;
  inline void set_charid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqKickFamilyMember)
 private:
  inline void set_has_charid();
  inline void clear_has_charid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 charid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqKickFamilyMember* default_instance_;
};
// -------------------------------------------------------------------

class AckReqKickFamilyMember : public ::google::protobuf::Message {
 public:
  AckReqKickFamilyMember();
  virtual ~AckReqKickFamilyMember();

  AckReqKickFamilyMember(const AckReqKickFamilyMember& from);

  inline AckReqKickFamilyMember& operator=(const AckReqKickFamilyMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqKickFamilyMember& default_instance();

  void Swap(AckReqKickFamilyMember* other);

  // implements Message ----------------------------------------------

  AckReqKickFamilyMember* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqKickFamilyMember& from);
  void MergeFrom(const AckReqKickFamilyMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.FamilyOpResult Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqKickFamilyMember)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqKickFamilyMember* default_instance_;
};
// -------------------------------------------------------------------

class ReqSetFamilyBaseInfo : public ::google::protobuf::Message {
 public:
  ReqSetFamilyBaseInfo();
  virtual ~ReqSetFamilyBaseInfo();

  ReqSetFamilyBaseInfo(const ReqSetFamilyBaseInfo& from);

  inline ReqSetFamilyBaseInfo& operator=(const ReqSetFamilyBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqSetFamilyBaseInfo& default_instance();

  void Swap(ReqSetFamilyBaseInfo* other);

  // implements Message ----------------------------------------------

  ReqSetFamilyBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqSetFamilyBaseInfo& from);
  void MergeFrom(const ReqSetFamilyBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 familyicon = 1;
  inline bool has_familyicon() const;
  inline void clear_familyicon();
  static const int kFamilyiconFieldNumber = 1;
  inline ::google::protobuf::uint32 familyicon() const;
  inline void set_familyicon(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.FamilyPublicType pulictype = 2;
  inline bool has_pulictype() const;
  inline void clear_pulictype();
  static const int kPulictypeFieldNumber = 2;
  inline ::HelloKittyMsgData::FamilyPublicType pulictype() const;
  inline void set_pulictype(::HelloKittyMsgData::FamilyPublicType value);

  // required uint32 lowlevel = 3;
  inline bool has_lowlevel() const;
  inline void clear_lowlevel();
  static const int kLowlevelFieldNumber = 3;
  inline ::google::protobuf::uint32 lowlevel() const;
  inline void set_lowlevel(::google::protobuf::uint32 value);

  // required uint32 highlevel = 4;
  inline bool has_highlevel() const;
  inline void clear_highlevel();
  static const int kHighlevelFieldNumber = 4;
  inline ::google::protobuf::uint32 highlevel() const;
  inline void set_highlevel(::google::protobuf::uint32 value);

  // required string familynotice = 5;
  inline bool has_familynotice() const;
  inline void clear_familynotice();
  static const int kFamilynoticeFieldNumber = 5;
  inline const ::std::string& familynotice() const;
  inline void set_familynotice(const ::std::string& value);
  inline void set_familynotice(const char* value);
  inline void set_familynotice(const char* value, size_t size);
  inline ::std::string* mutable_familynotice();
  inline ::std::string* release_familynotice();
  inline void set_allocated_familynotice(::std::string* familynotice);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqSetFamilyBaseInfo)
 private:
  inline void set_has_familyicon();
  inline void clear_has_familyicon();
  inline void set_has_pulictype();
  inline void clear_has_pulictype();
  inline void set_has_lowlevel();
  inline void clear_has_lowlevel();
  inline void set_has_highlevel();
  inline void clear_has_highlevel();
  inline void set_has_familynotice();
  inline void clear_has_familynotice();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 familyicon_;
  int pulictype_;
  ::google::protobuf::uint32 lowlevel_;
  ::google::protobuf::uint32 highlevel_;
  ::std::string* familynotice_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqSetFamilyBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class AckReqSetFamilyBaseInfo : public ::google::protobuf::Message {
 public:
  AckReqSetFamilyBaseInfo();
  virtual ~AckReqSetFamilyBaseInfo();

  AckReqSetFamilyBaseInfo(const AckReqSetFamilyBaseInfo& from);

  inline AckReqSetFamilyBaseInfo& operator=(const AckReqSetFamilyBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqSetFamilyBaseInfo& default_instance();

  void Swap(AckReqSetFamilyBaseInfo* other);

  // implements Message ----------------------------------------------

  AckReqSetFamilyBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqSetFamilyBaseInfo& from);
  void MergeFrom(const AckReqSetFamilyBaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.FamilyOpResult Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqSetFamilyBaseInfo)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqSetFamilyBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class ReqFamilyRanking : public ::google::protobuf::Message {
 public:
  ReqFamilyRanking();
  virtual ~ReqFamilyRanking();

  ReqFamilyRanking(const ReqFamilyRanking& from);

  inline ReqFamilyRanking& operator=(const ReqFamilyRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqFamilyRanking& default_instance();

  void Swap(ReqFamilyRanking* other);

  // implements Message ----------------------------------------------

  ReqFamilyRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqFamilyRanking& from);
  void MergeFrom(const ReqFamilyRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqFamilyRanking)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static ReqFamilyRanking* default_instance_;
};
// -------------------------------------------------------------------

class AckReqFamilyRanking : public ::google::protobuf::Message {
 public:
  AckReqFamilyRanking();
  virtual ~AckReqFamilyRanking();

  AckReqFamilyRanking(const AckReqFamilyRanking& from);

  inline AckReqFamilyRanking& operator=(const AckReqFamilyRanking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckReqFamilyRanking& default_instance();

  void Swap(AckReqFamilyRanking* other);

  // implements Message ----------------------------------------------

  AckReqFamilyRanking* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckReqFamilyRanking& from);
  void MergeFrom(const AckReqFamilyRanking& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.FamilyOpResult Result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::HelloKittyMsgData::FamilyOpResult result() const;
  inline void set_result(::HelloKittyMsgData::FamilyOpResult value);

  // repeated .HelloKittyMsgData.BaseFamilyInfo vecfamily = 2;
  inline int vecfamily_size() const;
  inline void clear_vecfamily();
  static const int kVecfamilyFieldNumber = 2;
  inline const ::HelloKittyMsgData::BaseFamilyInfo& vecfamily(int index) const;
  inline ::HelloKittyMsgData::BaseFamilyInfo* mutable_vecfamily(int index);
  inline ::HelloKittyMsgData::BaseFamilyInfo* add_vecfamily();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo >&
      vecfamily() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo >*
      mutable_vecfamily();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckReqFamilyRanking)
 private:
  inline void set_has_result();
  inline void clear_has_result();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo > vecfamily_;
  int result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_family_2eproto();
  friend void protobuf_AssignDesc_family_2eproto();
  friend void protobuf_ShutdownFile_family_2eproto();

  void InitAsDefaultInstance();
  static AckReqFamilyRanking* default_instance_;
};
// ===================================================================


// ===================================================================

// BaseFamilyInfo

// required uint64 familyid = 1;
inline bool BaseFamilyInfo::has_familyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseFamilyInfo::set_has_familyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseFamilyInfo::clear_has_familyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseFamilyInfo::clear_familyid() {
  familyid_ = GOOGLE_ULONGLONG(0);
  clear_has_familyid();
}
inline ::google::protobuf::uint64 BaseFamilyInfo::familyid() const {
  return familyid_;
}
inline void BaseFamilyInfo::set_familyid(::google::protobuf::uint64 value) {
  set_has_familyid();
  familyid_ = value;
}

// required string familyname = 2;
inline bool BaseFamilyInfo::has_familyname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseFamilyInfo::set_has_familyname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseFamilyInfo::clear_has_familyname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseFamilyInfo::clear_familyname() {
  if (familyname_ != &::google::protobuf::internal::kEmptyString) {
    familyname_->clear();
  }
  clear_has_familyname();
}
inline const ::std::string& BaseFamilyInfo::familyname() const {
  return *familyname_;
}
inline void BaseFamilyInfo::set_familyname(const ::std::string& value) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void BaseFamilyInfo::set_familyname(const char* value) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void BaseFamilyInfo::set_familyname(const char* value, size_t size) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BaseFamilyInfo::mutable_familyname() {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}
inline ::std::string* BaseFamilyInfo::release_familyname() {
  clear_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = familyname_;
    familyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BaseFamilyInfo::set_allocated_familyname(::std::string* familyname) {
  if (familyname_ != &::google::protobuf::internal::kEmptyString) {
    delete familyname_;
  }
  if (familyname) {
    set_has_familyname();
    familyname_ = familyname;
  } else {
    clear_has_familyname();
    familyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 familyicon = 3;
inline bool BaseFamilyInfo::has_familyicon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BaseFamilyInfo::set_has_familyicon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BaseFamilyInfo::clear_has_familyicon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BaseFamilyInfo::clear_familyicon() {
  familyicon_ = 0u;
  clear_has_familyicon();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::familyicon() const {
  return familyicon_;
}
inline void BaseFamilyInfo::set_familyicon(::google::protobuf::uint32 value) {
  set_has_familyicon();
  familyicon_ = value;
}

// required uint32 personnum = 4;
inline bool BaseFamilyInfo::has_personnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BaseFamilyInfo::set_has_personnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BaseFamilyInfo::clear_has_personnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BaseFamilyInfo::clear_personnum() {
  personnum_ = 0u;
  clear_has_personnum();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::personnum() const {
  return personnum_;
}
inline void BaseFamilyInfo::set_personnum(::google::protobuf::uint32 value) {
  set_has_personnum();
  personnum_ = value;
}

// required uint32 relation = 5;
inline bool BaseFamilyInfo::has_relation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BaseFamilyInfo::set_has_relation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BaseFamilyInfo::clear_has_relation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BaseFamilyInfo::clear_relation() {
  relation_ = 0u;
  clear_has_relation();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::relation() const {
  return relation_;
}
inline void BaseFamilyInfo::set_relation(::google::protobuf::uint32 value) {
  set_has_relation();
  relation_ = value;
}

// required .HelloKittyMsgData.FamilyPublicType pulictype = 6;
inline bool BaseFamilyInfo::has_pulictype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BaseFamilyInfo::set_has_pulictype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BaseFamilyInfo::clear_has_pulictype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BaseFamilyInfo::clear_pulictype() {
  pulictype_ = 0;
  clear_has_pulictype();
}
inline ::HelloKittyMsgData::FamilyPublicType BaseFamilyInfo::pulictype() const {
  return static_cast< ::HelloKittyMsgData::FamilyPublicType >(pulictype_);
}
inline void BaseFamilyInfo::set_pulictype(::HelloKittyMsgData::FamilyPublicType value) {
  assert(::HelloKittyMsgData::FamilyPublicType_IsValid(value));
  set_has_pulictype();
  pulictype_ = value;
}

// required uint32 lowlevel = 7;
inline bool BaseFamilyInfo::has_lowlevel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BaseFamilyInfo::set_has_lowlevel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BaseFamilyInfo::clear_has_lowlevel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BaseFamilyInfo::clear_lowlevel() {
  lowlevel_ = 0u;
  clear_has_lowlevel();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::lowlevel() const {
  return lowlevel_;
}
inline void BaseFamilyInfo::set_lowlevel(::google::protobuf::uint32 value) {
  set_has_lowlevel();
  lowlevel_ = value;
}

// required uint32 highlevel = 8;
inline bool BaseFamilyInfo::has_highlevel() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BaseFamilyInfo::set_has_highlevel() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BaseFamilyInfo::clear_has_highlevel() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BaseFamilyInfo::clear_highlevel() {
  highlevel_ = 0u;
  clear_has_highlevel();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::highlevel() const {
  return highlevel_;
}
inline void BaseFamilyInfo::set_highlevel(::google::protobuf::uint32 value) {
  set_has_highlevel();
  highlevel_ = value;
}

// required uint32 totalscore = 9;
inline bool BaseFamilyInfo::has_totalscore() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BaseFamilyInfo::set_has_totalscore() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BaseFamilyInfo::clear_has_totalscore() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BaseFamilyInfo::clear_totalscore() {
  totalscore_ = 0u;
  clear_has_totalscore();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::totalscore() const {
  return totalscore_;
}
inline void BaseFamilyInfo::set_totalscore(::google::protobuf::uint32 value) {
  set_has_totalscore();
  totalscore_ = value;
}

// required uint32 familylevel = 10;
inline bool BaseFamilyInfo::has_familylevel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BaseFamilyInfo::set_has_familylevel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BaseFamilyInfo::clear_has_familylevel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BaseFamilyInfo::clear_familylevel() {
  familylevel_ = 0u;
  clear_has_familylevel();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::familylevel() const {
  return familylevel_;
}
inline void BaseFamilyInfo::set_familylevel(::google::protobuf::uint32 value) {
  set_has_familylevel();
  familylevel_ = value;
}

// required uint32 ranking = 11;
inline bool BaseFamilyInfo::has_ranking() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BaseFamilyInfo::set_has_ranking() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BaseFamilyInfo::clear_has_ranking() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BaseFamilyInfo::clear_ranking() {
  ranking_ = 0u;
  clear_has_ranking();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::ranking() const {
  return ranking_;
}
inline void BaseFamilyInfo::set_ranking(::google::protobuf::uint32 value) {
  set_has_ranking();
  ranking_ = value;
}

// required uint32 lastranking = 12;
inline bool BaseFamilyInfo::has_lastranking() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BaseFamilyInfo::set_has_lastranking() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BaseFamilyInfo::clear_has_lastranking() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BaseFamilyInfo::clear_lastranking() {
  lastranking_ = 0u;
  clear_has_lastranking();
}
inline ::google::protobuf::uint32 BaseFamilyInfo::lastranking() const {
  return lastranking_;
}
inline void BaseFamilyInfo::set_lastranking(::google::protobuf::uint32 value) {
  set_has_lastranking();
  lastranking_ = value;
}

// required string familynotice = 13;
inline bool BaseFamilyInfo::has_familynotice() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BaseFamilyInfo::set_has_familynotice() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BaseFamilyInfo::clear_has_familynotice() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BaseFamilyInfo::clear_familynotice() {
  if (familynotice_ != &::google::protobuf::internal::kEmptyString) {
    familynotice_->clear();
  }
  clear_has_familynotice();
}
inline const ::std::string& BaseFamilyInfo::familynotice() const {
  return *familynotice_;
}
inline void BaseFamilyInfo::set_familynotice(const ::std::string& value) {
  set_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    familynotice_ = new ::std::string;
  }
  familynotice_->assign(value);
}
inline void BaseFamilyInfo::set_familynotice(const char* value) {
  set_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    familynotice_ = new ::std::string;
  }
  familynotice_->assign(value);
}
inline void BaseFamilyInfo::set_familynotice(const char* value, size_t size) {
  set_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    familynotice_ = new ::std::string;
  }
  familynotice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BaseFamilyInfo::mutable_familynotice() {
  set_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    familynotice_ = new ::std::string;
  }
  return familynotice_;
}
inline ::std::string* BaseFamilyInfo::release_familynotice() {
  clear_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = familynotice_;
    familynotice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BaseFamilyInfo::set_allocated_familynotice(::std::string* familynotice) {
  if (familynotice_ != &::google::protobuf::internal::kEmptyString) {
    delete familynotice_;
  }
  if (familynotice) {
    set_has_familynotice();
    familynotice_ = familynotice;
  } else {
    clear_has_familynotice();
    familynotice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ReqGetFamilyList

// required uint64 familyid = 1;
inline bool ReqGetFamilyList::has_familyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqGetFamilyList::set_has_familyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqGetFamilyList::clear_has_familyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqGetFamilyList::clear_familyid() {
  familyid_ = GOOGLE_ULONGLONG(0);
  clear_has_familyid();
}
inline ::google::protobuf::uint64 ReqGetFamilyList::familyid() const {
  return familyid_;
}
inline void ReqGetFamilyList::set_familyid(::google::protobuf::uint64 value) {
  set_has_familyid();
  familyid_ = value;
}

// -------------------------------------------------------------------

// AckReqGetFamilyList

// required uint64 familyid = 1;
inline bool AckReqGetFamilyList::has_familyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqGetFamilyList::set_has_familyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqGetFamilyList::clear_has_familyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqGetFamilyList::clear_familyid() {
  familyid_ = GOOGLE_ULONGLONG(0);
  clear_has_familyid();
}
inline ::google::protobuf::uint64 AckReqGetFamilyList::familyid() const {
  return familyid_;
}
inline void AckReqGetFamilyList::set_familyid(::google::protobuf::uint64 value) {
  set_has_familyid();
  familyid_ = value;
}

// required .HelloKittyMsgData.FamilyOpResult Result = 2;
inline bool AckReqGetFamilyList::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckReqGetFamilyList::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckReqGetFamilyList::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckReqGetFamilyList::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqGetFamilyList::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqGetFamilyList::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// repeated .HelloKittyMsgData.BaseFamilyInfo vecfamily = 3;
inline int AckReqGetFamilyList::vecfamily_size() const {
  return vecfamily_.size();
}
inline void AckReqGetFamilyList::clear_vecfamily() {
  vecfamily_.Clear();
}
inline const ::HelloKittyMsgData::BaseFamilyInfo& AckReqGetFamilyList::vecfamily(int index) const {
  return vecfamily_.Get(index);
}
inline ::HelloKittyMsgData::BaseFamilyInfo* AckReqGetFamilyList::mutable_vecfamily(int index) {
  return vecfamily_.Mutable(index);
}
inline ::HelloKittyMsgData::BaseFamilyInfo* AckReqGetFamilyList::add_vecfamily() {
  return vecfamily_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo >&
AckReqGetFamilyList::vecfamily() const {
  return vecfamily_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo >*
AckReqGetFamilyList::mutable_vecfamily() {
  return &vecfamily_;
}

// -------------------------------------------------------------------

// ReqAddFamily

// required uint64 familyid = 1;
inline bool ReqAddFamily::has_familyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqAddFamily::set_has_familyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqAddFamily::clear_has_familyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqAddFamily::clear_familyid() {
  familyid_ = GOOGLE_ULONGLONG(0);
  clear_has_familyid();
}
inline ::google::protobuf::uint64 ReqAddFamily::familyid() const {
  return familyid_;
}
inline void ReqAddFamily::set_familyid(::google::protobuf::uint64 value) {
  set_has_familyid();
  familyid_ = value;
}

// -------------------------------------------------------------------

// AckReqAddFamily

// required uint64 familyid = 1;
inline bool AckReqAddFamily::has_familyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqAddFamily::set_has_familyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqAddFamily::clear_has_familyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqAddFamily::clear_familyid() {
  familyid_ = GOOGLE_ULONGLONG(0);
  clear_has_familyid();
}
inline ::google::protobuf::uint64 AckReqAddFamily::familyid() const {
  return familyid_;
}
inline void AckReqAddFamily::set_familyid(::google::protobuf::uint64 value) {
  set_has_familyid();
  familyid_ = value;
}

// required .HelloKittyMsgData.FamilyOpResult Result = 2;
inline bool AckReqAddFamily::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckReqAddFamily::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckReqAddFamily::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckReqAddFamily::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqAddFamily::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqAddFamily::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional string familyname = 3 [default = ""];
inline bool AckReqAddFamily::has_familyname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckReqAddFamily::set_has_familyname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckReqAddFamily::clear_has_familyname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckReqAddFamily::clear_familyname() {
  if (familyname_ != &::google::protobuf::internal::kEmptyString) {
    familyname_->clear();
  }
  clear_has_familyname();
}
inline const ::std::string& AckReqAddFamily::familyname() const {
  return *familyname_;
}
inline void AckReqAddFamily::set_familyname(const ::std::string& value) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void AckReqAddFamily::set_familyname(const char* value) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void AckReqAddFamily::set_familyname(const char* value, size_t size) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AckReqAddFamily::mutable_familyname() {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}
inline ::std::string* AckReqAddFamily::release_familyname() {
  clear_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = familyname_;
    familyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AckReqAddFamily::set_allocated_familyname(::std::string* familyname) {
  if (familyname_ != &::google::protobuf::internal::kEmptyString) {
    delete familyname_;
  }
  if (familyname) {
    set_has_familyname();
    familyname_ = familyname;
  } else {
    clear_has_familyname();
    familyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ReqCancelApply

// required uint64 familyid = 1;
inline bool ReqCancelApply::has_familyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCancelApply::set_has_familyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqCancelApply::clear_has_familyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqCancelApply::clear_familyid() {
  familyid_ = GOOGLE_ULONGLONG(0);
  clear_has_familyid();
}
inline ::google::protobuf::uint64 ReqCancelApply::familyid() const {
  return familyid_;
}
inline void ReqCancelApply::set_familyid(::google::protobuf::uint64 value) {
  set_has_familyid();
  familyid_ = value;
}

// -------------------------------------------------------------------

// AckReqCancelApply

// required uint64 familyid = 1;
inline bool AckReqCancelApply::has_familyid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqCancelApply::set_has_familyid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqCancelApply::clear_has_familyid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqCancelApply::clear_familyid() {
  familyid_ = GOOGLE_ULONGLONG(0);
  clear_has_familyid();
}
inline ::google::protobuf::uint64 AckReqCancelApply::familyid() const {
  return familyid_;
}
inline void AckReqCancelApply::set_familyid(::google::protobuf::uint64 value) {
  set_has_familyid();
  familyid_ = value;
}

// required .HelloKittyMsgData.FamilyOpResult Result = 2;
inline bool AckReqCancelApply::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckReqCancelApply::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckReqCancelApply::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckReqCancelApply::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqCancelApply::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqCancelApply::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ReqCreateFamily

// required string familyname = 1;
inline bool ReqCreateFamily::has_familyname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqCreateFamily::set_has_familyname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqCreateFamily::clear_has_familyname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqCreateFamily::clear_familyname() {
  if (familyname_ != &::google::protobuf::internal::kEmptyString) {
    familyname_->clear();
  }
  clear_has_familyname();
}
inline const ::std::string& ReqCreateFamily::familyname() const {
  return *familyname_;
}
inline void ReqCreateFamily::set_familyname(const ::std::string& value) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void ReqCreateFamily::set_familyname(const char* value) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(value);
}
inline void ReqCreateFamily::set_familyname(const char* value, size_t size) {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  familyname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqCreateFamily::mutable_familyname() {
  set_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    familyname_ = new ::std::string;
  }
  return familyname_;
}
inline ::std::string* ReqCreateFamily::release_familyname() {
  clear_has_familyname();
  if (familyname_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = familyname_;
    familyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ReqCreateFamily::set_allocated_familyname(::std::string* familyname) {
  if (familyname_ != &::google::protobuf::internal::kEmptyString) {
    delete familyname_;
  }
  if (familyname) {
    set_has_familyname();
    familyname_ = familyname;
  } else {
    clear_has_familyname();
    familyname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 familyicon = 2;
inline bool ReqCreateFamily::has_familyicon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqCreateFamily::set_has_familyicon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqCreateFamily::clear_has_familyicon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqCreateFamily::clear_familyicon() {
  familyicon_ = 0u;
  clear_has_familyicon();
}
inline ::google::protobuf::uint32 ReqCreateFamily::familyicon() const {
  return familyicon_;
}
inline void ReqCreateFamily::set_familyicon(::google::protobuf::uint32 value) {
  set_has_familyicon();
  familyicon_ = value;
}

// required .HelloKittyMsgData.FamilyPublicType pulictype = 3;
inline bool ReqCreateFamily::has_pulictype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqCreateFamily::set_has_pulictype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqCreateFamily::clear_has_pulictype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqCreateFamily::clear_pulictype() {
  pulictype_ = 0;
  clear_has_pulictype();
}
inline ::HelloKittyMsgData::FamilyPublicType ReqCreateFamily::pulictype() const {
  return static_cast< ::HelloKittyMsgData::FamilyPublicType >(pulictype_);
}
inline void ReqCreateFamily::set_pulictype(::HelloKittyMsgData::FamilyPublicType value) {
  assert(::HelloKittyMsgData::FamilyPublicType_IsValid(value));
  set_has_pulictype();
  pulictype_ = value;
}

// required uint32 lowlevel = 4;
inline bool ReqCreateFamily::has_lowlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqCreateFamily::set_has_lowlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqCreateFamily::clear_has_lowlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqCreateFamily::clear_lowlevel() {
  lowlevel_ = 0u;
  clear_has_lowlevel();
}
inline ::google::protobuf::uint32 ReqCreateFamily::lowlevel() const {
  return lowlevel_;
}
inline void ReqCreateFamily::set_lowlevel(::google::protobuf::uint32 value) {
  set_has_lowlevel();
  lowlevel_ = value;
}

// required uint32 highlevel = 5;
inline bool ReqCreateFamily::has_highlevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqCreateFamily::set_has_highlevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqCreateFamily::clear_has_highlevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqCreateFamily::clear_highlevel() {
  highlevel_ = 0u;
  clear_has_highlevel();
}
inline ::google::protobuf::uint32 ReqCreateFamily::highlevel() const {
  return highlevel_;
}
inline void ReqCreateFamily::set_highlevel(::google::protobuf::uint32 value) {
  set_has_highlevel();
  highlevel_ = value;
}

// -------------------------------------------------------------------

// AckReqCreateFamily

// required .HelloKittyMsgData.FamilyOpResult Result = 1;
inline bool AckReqCreateFamily::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqCreateFamily::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqCreateFamily::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqCreateFamily::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqCreateFamily::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqCreateFamily::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ReqAgreeJoin

// required uint64 charid = 1;
inline bool ReqAgreeJoin::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqAgreeJoin::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqAgreeJoin::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqAgreeJoin::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReqAgreeJoin::charid() const {
  return charid_;
}
inline void ReqAgreeJoin::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 isagree = 2;
inline bool ReqAgreeJoin::has_isagree() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqAgreeJoin::set_has_isagree() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqAgreeJoin::clear_has_isagree() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqAgreeJoin::clear_isagree() {
  isagree_ = 0u;
  clear_has_isagree();
}
inline ::google::protobuf::uint32 ReqAgreeJoin::isagree() const {
  return isagree_;
}
inline void ReqAgreeJoin::set_isagree(::google::protobuf::uint32 value) {
  set_has_isagree();
  isagree_ = value;
}

// -------------------------------------------------------------------

// AckReqAgreeJoin

// required .HelloKittyMsgData.FamilyOpResult Result = 1;
inline bool AckReqAgreeJoin::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqAgreeJoin::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqAgreeJoin::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqAgreeJoin::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqAgreeJoin::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqAgreeJoin::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// required uint64 charid = 2;
inline bool AckReqAgreeJoin::has_charid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckReqAgreeJoin::set_has_charid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckReqAgreeJoin::clear_has_charid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckReqAgreeJoin::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 AckReqAgreeJoin::charid() const {
  return charid_;
}
inline void AckReqAgreeJoin::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required uint32 isagree = 3;
inline bool AckReqAgreeJoin::has_isagree() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckReqAgreeJoin::set_has_isagree() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckReqAgreeJoin::clear_has_isagree() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckReqAgreeJoin::clear_isagree() {
  isagree_ = 0u;
  clear_has_isagree();
}
inline ::google::protobuf::uint32 AckReqAgreeJoin::isagree() const {
  return isagree_;
}
inline void AckReqAgreeJoin::set_isagree(::google::protobuf::uint32 value) {
  set_has_isagree();
  isagree_ = value;
}

// -------------------------------------------------------------------

// FamilyMember

// required uint64 charid = 1;
inline bool FamilyMember::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FamilyMember::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FamilyMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FamilyMember::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 FamilyMember::charid() const {
  return charid_;
}
inline void FamilyMember::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// required string name = 2;
inline bool FamilyMember::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FamilyMember::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FamilyMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FamilyMember::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& FamilyMember::name() const {
  return *name_;
}
inline void FamilyMember::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FamilyMember::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void FamilyMember::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* FamilyMember::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* FamilyMember::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void FamilyMember::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 level = 3;
inline bool FamilyMember::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FamilyMember::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FamilyMember::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FamilyMember::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 FamilyMember::level() const {
  return level_;
}
inline void FamilyMember::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// optional .HelloKittyMsgData.FamilyJob job = 4 [default = Family_Member];
inline bool FamilyMember::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FamilyMember::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FamilyMember::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FamilyMember::clear_job() {
  job_ = 1;
  clear_has_job();
}
inline ::HelloKittyMsgData::FamilyJob FamilyMember::job() const {
  return static_cast< ::HelloKittyMsgData::FamilyJob >(job_);
}
inline void FamilyMember::set_job(::HelloKittyMsgData::FamilyJob value) {
  assert(::HelloKittyMsgData::FamilyJob_IsValid(value));
  set_has_job();
  job_ = value;
}

// -------------------------------------------------------------------

// FamilyInfo

// required .HelloKittyMsgData.BaseFamilyInfo baseinfo = 1;
inline bool FamilyInfo::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FamilyInfo::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FamilyInfo::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FamilyInfo::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::HelloKittyMsgData::BaseFamilyInfo::Clear();
  clear_has_baseinfo();
}
inline const ::HelloKittyMsgData::BaseFamilyInfo& FamilyInfo::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::HelloKittyMsgData::BaseFamilyInfo* FamilyInfo::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::HelloKittyMsgData::BaseFamilyInfo;
  return baseinfo_;
}
inline ::HelloKittyMsgData::BaseFamilyInfo* FamilyInfo::release_baseinfo() {
  clear_has_baseinfo();
  ::HelloKittyMsgData::BaseFamilyInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void FamilyInfo::set_allocated_baseinfo(::HelloKittyMsgData::BaseFamilyInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
}

// repeated .HelloKittyMsgData.FamilyMember vecmember = 2;
inline int FamilyInfo::vecmember_size() const {
  return vecmember_.size();
}
inline void FamilyInfo::clear_vecmember() {
  vecmember_.Clear();
}
inline const ::HelloKittyMsgData::FamilyMember& FamilyInfo::vecmember(int index) const {
  return vecmember_.Get(index);
}
inline ::HelloKittyMsgData::FamilyMember* FamilyInfo::mutable_vecmember(int index) {
  return vecmember_.Mutable(index);
}
inline ::HelloKittyMsgData::FamilyMember* FamilyInfo::add_vecmember() {
  return vecmember_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember >&
FamilyInfo::vecmember() const {
  return vecmember_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember >*
FamilyInfo::mutable_vecmember() {
  return &vecmember_;
}

// repeated .HelloKittyMsgData.FamilyMember vecappy = 3;
inline int FamilyInfo::vecappy_size() const {
  return vecappy_.size();
}
inline void FamilyInfo::clear_vecappy() {
  vecappy_.Clear();
}
inline const ::HelloKittyMsgData::FamilyMember& FamilyInfo::vecappy(int index) const {
  return vecappy_.Get(index);
}
inline ::HelloKittyMsgData::FamilyMember* FamilyInfo::mutable_vecappy(int index) {
  return vecappy_.Mutable(index);
}
inline ::HelloKittyMsgData::FamilyMember* FamilyInfo::add_vecappy() {
  return vecappy_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember >&
FamilyInfo::vecappy() const {
  return vecappy_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FamilyMember >*
FamilyInfo::mutable_vecappy() {
  return &vecappy_;
}

// -------------------------------------------------------------------

// ReqselfFamilyInfo

// -------------------------------------------------------------------

// AckReqselfFamilyInfo

// required .HelloKittyMsgData.FamilyOpResult Result = 1;
inline bool AckReqselfFamilyInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqselfFamilyInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqselfFamilyInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqselfFamilyInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqselfFamilyInfo::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqselfFamilyInfo::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// optional .HelloKittyMsgData.FamilyInfo selfinfo = 2;
inline bool AckReqselfFamilyInfo::has_selfinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckReqselfFamilyInfo::set_has_selfinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckReqselfFamilyInfo::clear_has_selfinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckReqselfFamilyInfo::clear_selfinfo() {
  if (selfinfo_ != NULL) selfinfo_->::HelloKittyMsgData::FamilyInfo::Clear();
  clear_has_selfinfo();
}
inline const ::HelloKittyMsgData::FamilyInfo& AckReqselfFamilyInfo::selfinfo() const {
  return selfinfo_ != NULL ? *selfinfo_ : *default_instance_->selfinfo_;
}
inline ::HelloKittyMsgData::FamilyInfo* AckReqselfFamilyInfo::mutable_selfinfo() {
  set_has_selfinfo();
  if (selfinfo_ == NULL) selfinfo_ = new ::HelloKittyMsgData::FamilyInfo;
  return selfinfo_;
}
inline ::HelloKittyMsgData::FamilyInfo* AckReqselfFamilyInfo::release_selfinfo() {
  clear_has_selfinfo();
  ::HelloKittyMsgData::FamilyInfo* temp = selfinfo_;
  selfinfo_ = NULL;
  return temp;
}
inline void AckReqselfFamilyInfo::set_allocated_selfinfo(::HelloKittyMsgData::FamilyInfo* selfinfo) {
  delete selfinfo_;
  selfinfo_ = selfinfo;
  if (selfinfo) {
    set_has_selfinfo();
  } else {
    clear_has_selfinfo();
  }
}

// -------------------------------------------------------------------

// ReqQuitFamily

// -------------------------------------------------------------------

// AckReqQuitFamily

// required .HelloKittyMsgData.FamilyOpResult Result = 1;
inline bool AckReqQuitFamily::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqQuitFamily::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqQuitFamily::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqQuitFamily::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqQuitFamily::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqQuitFamily::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ReqUpdateOtherFamilyJob

// required uint64 charid = 1;
inline bool ReqUpdateOtherFamilyJob::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqUpdateOtherFamilyJob::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqUpdateOtherFamilyJob::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqUpdateOtherFamilyJob::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReqUpdateOtherFamilyJob::charid() const {
  return charid_;
}
inline void ReqUpdateOtherFamilyJob::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// AckUpdateOtherFamilyJob

// required .HelloKittyMsgData.FamilyOpResult Result = 1;
inline bool AckUpdateOtherFamilyJob::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckUpdateOtherFamilyJob::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckUpdateOtherFamilyJob::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckUpdateOtherFamilyJob::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckUpdateOtherFamilyJob::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckUpdateOtherFamilyJob::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ReqKickFamilyMember

// required uint64 charid = 1;
inline bool ReqKickFamilyMember::has_charid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqKickFamilyMember::set_has_charid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqKickFamilyMember::clear_has_charid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqKickFamilyMember::clear_charid() {
  charid_ = GOOGLE_ULONGLONG(0);
  clear_has_charid();
}
inline ::google::protobuf::uint64 ReqKickFamilyMember::charid() const {
  return charid_;
}
inline void ReqKickFamilyMember::set_charid(::google::protobuf::uint64 value) {
  set_has_charid();
  charid_ = value;
}

// -------------------------------------------------------------------

// AckReqKickFamilyMember

// required .HelloKittyMsgData.FamilyOpResult Result = 1;
inline bool AckReqKickFamilyMember::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqKickFamilyMember::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqKickFamilyMember::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqKickFamilyMember::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqKickFamilyMember::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqKickFamilyMember::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ReqSetFamilyBaseInfo

// required uint32 familyicon = 1;
inline bool ReqSetFamilyBaseInfo::has_familyicon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqSetFamilyBaseInfo::set_has_familyicon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqSetFamilyBaseInfo::clear_has_familyicon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqSetFamilyBaseInfo::clear_familyicon() {
  familyicon_ = 0u;
  clear_has_familyicon();
}
inline ::google::protobuf::uint32 ReqSetFamilyBaseInfo::familyicon() const {
  return familyicon_;
}
inline void ReqSetFamilyBaseInfo::set_familyicon(::google::protobuf::uint32 value) {
  set_has_familyicon();
  familyicon_ = value;
}

// required .HelloKittyMsgData.FamilyPublicType pulictype = 2;
inline bool ReqSetFamilyBaseInfo::has_pulictype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqSetFamilyBaseInfo::set_has_pulictype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqSetFamilyBaseInfo::clear_has_pulictype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqSetFamilyBaseInfo::clear_pulictype() {
  pulictype_ = 0;
  clear_has_pulictype();
}
inline ::HelloKittyMsgData::FamilyPublicType ReqSetFamilyBaseInfo::pulictype() const {
  return static_cast< ::HelloKittyMsgData::FamilyPublicType >(pulictype_);
}
inline void ReqSetFamilyBaseInfo::set_pulictype(::HelloKittyMsgData::FamilyPublicType value) {
  assert(::HelloKittyMsgData::FamilyPublicType_IsValid(value));
  set_has_pulictype();
  pulictype_ = value;
}

// required uint32 lowlevel = 3;
inline bool ReqSetFamilyBaseInfo::has_lowlevel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqSetFamilyBaseInfo::set_has_lowlevel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqSetFamilyBaseInfo::clear_has_lowlevel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqSetFamilyBaseInfo::clear_lowlevel() {
  lowlevel_ = 0u;
  clear_has_lowlevel();
}
inline ::google::protobuf::uint32 ReqSetFamilyBaseInfo::lowlevel() const {
  return lowlevel_;
}
inline void ReqSetFamilyBaseInfo::set_lowlevel(::google::protobuf::uint32 value) {
  set_has_lowlevel();
  lowlevel_ = value;
}

// required uint32 highlevel = 4;
inline bool ReqSetFamilyBaseInfo::has_highlevel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqSetFamilyBaseInfo::set_has_highlevel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqSetFamilyBaseInfo::clear_has_highlevel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqSetFamilyBaseInfo::clear_highlevel() {
  highlevel_ = 0u;
  clear_has_highlevel();
}
inline ::google::protobuf::uint32 ReqSetFamilyBaseInfo::highlevel() const {
  return highlevel_;
}
inline void ReqSetFamilyBaseInfo::set_highlevel(::google::protobuf::uint32 value) {
  set_has_highlevel();
  highlevel_ = value;
}

// required string familynotice = 5;
inline bool ReqSetFamilyBaseInfo::has_familynotice() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqSetFamilyBaseInfo::set_has_familynotice() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqSetFamilyBaseInfo::clear_has_familynotice() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqSetFamilyBaseInfo::clear_familynotice() {
  if (familynotice_ != &::google::protobuf::internal::kEmptyString) {
    familynotice_->clear();
  }
  clear_has_familynotice();
}
inline const ::std::string& ReqSetFamilyBaseInfo::familynotice() const {
  return *familynotice_;
}
inline void ReqSetFamilyBaseInfo::set_familynotice(const ::std::string& value) {
  set_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    familynotice_ = new ::std::string;
  }
  familynotice_->assign(value);
}
inline void ReqSetFamilyBaseInfo::set_familynotice(const char* value) {
  set_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    familynotice_ = new ::std::string;
  }
  familynotice_->assign(value);
}
inline void ReqSetFamilyBaseInfo::set_familynotice(const char* value, size_t size) {
  set_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    familynotice_ = new ::std::string;
  }
  familynotice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ReqSetFamilyBaseInfo::mutable_familynotice() {
  set_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    familynotice_ = new ::std::string;
  }
  return familynotice_;
}
inline ::std::string* ReqSetFamilyBaseInfo::release_familynotice() {
  clear_has_familynotice();
  if (familynotice_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = familynotice_;
    familynotice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ReqSetFamilyBaseInfo::set_allocated_familynotice(::std::string* familynotice) {
  if (familynotice_ != &::google::protobuf::internal::kEmptyString) {
    delete familynotice_;
  }
  if (familynotice) {
    set_has_familynotice();
    familynotice_ = familynotice;
  } else {
    clear_has_familynotice();
    familynotice_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AckReqSetFamilyBaseInfo

// required .HelloKittyMsgData.FamilyOpResult Result = 1;
inline bool AckReqSetFamilyBaseInfo::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqSetFamilyBaseInfo::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqSetFamilyBaseInfo::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqSetFamilyBaseInfo::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqSetFamilyBaseInfo::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqSetFamilyBaseInfo::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// -------------------------------------------------------------------

// ReqFamilyRanking

// -------------------------------------------------------------------

// AckReqFamilyRanking

// required .HelloKittyMsgData.FamilyOpResult Result = 1;
inline bool AckReqFamilyRanking::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckReqFamilyRanking::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckReqFamilyRanking::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckReqFamilyRanking::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::HelloKittyMsgData::FamilyOpResult AckReqFamilyRanking::result() const {
  return static_cast< ::HelloKittyMsgData::FamilyOpResult >(result_);
}
inline void AckReqFamilyRanking::set_result(::HelloKittyMsgData::FamilyOpResult value) {
  assert(::HelloKittyMsgData::FamilyOpResult_IsValid(value));
  set_has_result();
  result_ = value;
}

// repeated .HelloKittyMsgData.BaseFamilyInfo vecfamily = 2;
inline int AckReqFamilyRanking::vecfamily_size() const {
  return vecfamily_.size();
}
inline void AckReqFamilyRanking::clear_vecfamily() {
  vecfamily_.Clear();
}
inline const ::HelloKittyMsgData::BaseFamilyInfo& AckReqFamilyRanking::vecfamily(int index) const {
  return vecfamily_.Get(index);
}
inline ::HelloKittyMsgData::BaseFamilyInfo* AckReqFamilyRanking::mutable_vecfamily(int index) {
  return vecfamily_.Mutable(index);
}
inline ::HelloKittyMsgData::BaseFamilyInfo* AckReqFamilyRanking::add_vecfamily() {
  return vecfamily_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo >&
AckReqFamilyRanking::vecfamily() const {
  return vecfamily_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::BaseFamilyInfo >*
AckReqFamilyRanking::mutable_vecfamily() {
  return &vecfamily_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::FamilyPublicType>() {
  return ::HelloKittyMsgData::FamilyPublicType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::FamilyJob>() {
  return ::HelloKittyMsgData::FamilyJob_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::FamilyOpResult>() {
  return ::HelloKittyMsgData::FamilyOpResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_family_2eproto__INCLUDED
