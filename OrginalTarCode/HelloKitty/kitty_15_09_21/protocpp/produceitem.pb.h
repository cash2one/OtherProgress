// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: produceitem.proto

#ifndef PROTOBUF_produceitem_2eproto__INCLUDED
#define PROTOBUF_produceitem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)

namespace HelloKittyMsgData {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_produceitem_2eproto();
void protobuf_AssignDesc_produceitem_2eproto();
void protobuf_ShutdownFile_produceitem_2eproto();

class FunctionCell;
class StoreFunctionCell;
class ReqFunctionCell;
class AckProduceItem;
class AckFunctionCell;
class ReqFunctionCellWork;
class AckBTPOpReturnFail;
class ReqFunctionOp;

enum PlaceStatusType {
  Place_Status_Empty = 0,
  Place_Status_Suppend = 1,
  Place_Status_Work = 2,
  Place_Status_Wait = 3,
  Place_Status_Close = 4
};
bool PlaceStatusType_IsValid(int value);
const PlaceStatusType PlaceStatusType_MIN = Place_Status_Empty;
const PlaceStatusType PlaceStatusType_MAX = Place_Status_Close;
const int PlaceStatusType_ARRAYSIZE = PlaceStatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlaceStatusType_descriptor();
inline const ::std::string& PlaceStatusType_Name(PlaceStatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlaceStatusType_descriptor(), value);
}
inline bool PlaceStatusType_Parse(
    const ::std::string& name, PlaceStatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlaceStatusType>(
    PlaceStatusType_descriptor(), name, value);
}
enum FunctionType {
  Function_Type_Produce = 0,
  Function_Type_Composite = 1
};
bool FunctionType_IsValid(int value);
const FunctionType FunctionType_MIN = Function_Type_Produce;
const FunctionType FunctionType_MAX = Function_Type_Composite;
const int FunctionType_ARRAYSIZE = FunctionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FunctionType_descriptor();
inline const ::std::string& FunctionType_Name(FunctionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FunctionType_descriptor(), value);
}
inline bool FunctionType_Parse(
    const ::std::string& name, FunctionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FunctionType>(
    FunctionType_descriptor(), name, value);
}
enum BTPOpFailType {
  BTP_Occcupy = 0,
  BTP_Close = 1,
  BTP_Busy = 2,
  BTP_Not_Produce_Item = 3,
  BTP_Not_Composite_Item = 4,
  BTP_Is_Open = 5,
  BTP_Is_Not_Busy = 6,
  BTP_Is_Not_Wait = 7,
  BTP_Is_Max = 8
};
bool BTPOpFailType_IsValid(int value);
const BTPOpFailType BTPOpFailType_MIN = BTP_Occcupy;
const BTPOpFailType BTPOpFailType_MAX = BTP_Is_Max;
const int BTPOpFailType_ARRAYSIZE = BTPOpFailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BTPOpFailType_descriptor();
inline const ::std::string& BTPOpFailType_Name(BTPOpFailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BTPOpFailType_descriptor(), value);
}
inline bool BTPOpFailType_Parse(
    const ::std::string& name, BTPOpFailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BTPOpFailType>(
    BTPOpFailType_descriptor(), name, value);
}
enum BTPOpType {
  BTP_Op_Purchase = 0,
  BTP_Op_Get_Item = 1,
  BTP_Op_Purchase_Cd = 2
};
bool BTPOpType_IsValid(int value);
const BTPOpType BTPOpType_MIN = BTP_Op_Purchase;
const BTPOpType BTPOpType_MAX = BTP_Op_Purchase_Cd;
const int BTPOpType_ARRAYSIZE = BTPOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BTPOpType_descriptor();
inline const ::std::string& BTPOpType_Name(BTPOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BTPOpType_descriptor(), value);
}
inline bool BTPOpType_Parse(
    const ::std::string& name, BTPOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BTPOpType>(
    BTPOpType_descriptor(), name, value);
}
// ===================================================================

class FunctionCell : public ::google::protobuf::Message {
 public:
  FunctionCell();
  virtual ~FunctionCell();

  FunctionCell(const FunctionCell& from);

  inline FunctionCell& operator=(const FunctionCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionCell& default_instance();

  void Swap(FunctionCell* other);

  // implements Message ----------------------------------------------

  FunctionCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionCell& from);
  void MergeFrom(const FunctionCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 placeid = 1;
  inline bool has_placeid() const;
  inline void clear_placeid();
  static const int kPlaceidFieldNumber = 1;
  inline ::google::protobuf::uint32 placeid() const;
  inline void set_placeid(::google::protobuf::uint32 value);

  // required uint32 produceid = 2;
  inline bool has_produceid() const;
  inline void clear_produceid();
  static const int kProduceidFieldNumber = 2;
  inline ::google::protobuf::uint32 produceid() const;
  inline void set_produceid(::google::protobuf::uint32 value);

  // required uint32 worktime = 3;
  inline bool has_worktime() const;
  inline void clear_worktime();
  static const int kWorktimeFieldNumber = 3;
  inline ::google::protobuf::uint32 worktime() const;
  inline void set_worktime(::google::protobuf::uint32 value);

  // required uint32 lasttime = 4;
  inline bool has_lasttime() const;
  inline void clear_lasttime();
  static const int kLasttimeFieldNumber = 4;
  inline ::google::protobuf::uint32 lasttime() const;
  inline void set_lasttime(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.PlaceStatusType status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::HelloKittyMsgData::PlaceStatusType status() const;
  inline void set_status(::HelloKittyMsgData::PlaceStatusType value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.FunctionCell)
 private:
  inline void set_has_placeid();
  inline void clear_has_placeid();
  inline void set_has_produceid();
  inline void clear_has_produceid();
  inline void set_has_worktime();
  inline void clear_has_worktime();
  inline void set_has_lasttime();
  inline void clear_has_lasttime();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 placeid_;
  ::google::protobuf::uint32 produceid_;
  ::google::protobuf::uint32 worktime_;
  ::google::protobuf::uint32 lasttime_;
  int status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_produceitem_2eproto();
  friend void protobuf_AssignDesc_produceitem_2eproto();
  friend void protobuf_ShutdownFile_produceitem_2eproto();

  void InitAsDefaultInstance();
  static FunctionCell* default_instance_;
};
// -------------------------------------------------------------------

class StoreFunctionCell : public ::google::protobuf::Message {
 public:
  StoreFunctionCell();
  virtual ~StoreFunctionCell();

  StoreFunctionCell(const StoreFunctionCell& from);

  inline StoreFunctionCell& operator=(const StoreFunctionCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreFunctionCell& default_instance();

  void Swap(StoreFunctionCell* other);

  // implements Message ----------------------------------------------

  StoreFunctionCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreFunctionCell& from);
  void MergeFrom(const StoreFunctionCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FunctionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::HelloKittyMsgData::FunctionType type() const;
  inline void set_type(::HelloKittyMsgData::FunctionType value);

  // repeated .HelloKittyMsgData.FunctionCell functioncell = 3;
  inline int functioncell_size() const;
  inline void clear_functioncell();
  static const int kFunctioncellFieldNumber = 3;
  inline const ::HelloKittyMsgData::FunctionCell& functioncell(int index) const;
  inline ::HelloKittyMsgData::FunctionCell* mutable_functioncell(int index);
  inline ::HelloKittyMsgData::FunctionCell* add_functioncell();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell >&
      functioncell() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell >*
      mutable_functioncell();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.StoreFunctionCell)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell > functioncell_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_produceitem_2eproto();
  friend void protobuf_AssignDesc_produceitem_2eproto();
  friend void protobuf_ShutdownFile_produceitem_2eproto();

  void InitAsDefaultInstance();
  static StoreFunctionCell* default_instance_;
};
// -------------------------------------------------------------------

class ReqFunctionCell : public ::google::protobuf::Message {
 public:
  ReqFunctionCell();
  virtual ~ReqFunctionCell();

  ReqFunctionCell(const ReqFunctionCell& from);

  inline ReqFunctionCell& operator=(const ReqFunctionCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqFunctionCell& default_instance();

  void Swap(ReqFunctionCell* other);

  // implements Message ----------------------------------------------

  ReqFunctionCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqFunctionCell& from);
  void MergeFrom(const ReqFunctionCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FunctionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::HelloKittyMsgData::FunctionType type() const;
  inline void set_type(::HelloKittyMsgData::FunctionType value);

  // required uint32 placeid = 3 [default = 0];
  inline bool has_placeid() const;
  inline void clear_placeid();
  static const int kPlaceidFieldNumber = 3;
  inline ::google::protobuf::uint32 placeid() const;
  inline void set_placeid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqFunctionCell)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_placeid();
  inline void clear_has_placeid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  int type_;
  ::google::protobuf::uint32 placeid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_produceitem_2eproto();
  friend void protobuf_AssignDesc_produceitem_2eproto();
  friend void protobuf_ShutdownFile_produceitem_2eproto();

  void InitAsDefaultInstance();
  static ReqFunctionCell* default_instance_;
};
// -------------------------------------------------------------------

class AckProduceItem : public ::google::protobuf::Message {
 public:
  AckProduceItem();
  virtual ~AckProduceItem();

  AckProduceItem(const AckProduceItem& from);

  inline AckProduceItem& operator=(const AckProduceItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckProduceItem& default_instance();

  void Swap(AckProduceItem* other);

  // implements Message ----------------------------------------------

  AckProduceItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckProduceItem& from);
  void MergeFrom(const AckProduceItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .HelloKittyMsgData.StoreFunctionCell produceitem = 1;
  inline bool has_produceitem() const;
  inline void clear_produceitem();
  static const int kProduceitemFieldNumber = 1;
  inline const ::HelloKittyMsgData::StoreFunctionCell& produceitem() const;
  inline ::HelloKittyMsgData::StoreFunctionCell* mutable_produceitem();
  inline ::HelloKittyMsgData::StoreFunctionCell* release_produceitem();
  inline void set_allocated_produceitem(::HelloKittyMsgData::StoreFunctionCell* produceitem);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckProduceItem)
 private:
  inline void set_has_produceitem();
  inline void clear_has_produceitem();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::HelloKittyMsgData::StoreFunctionCell* produceitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_produceitem_2eproto();
  friend void protobuf_AssignDesc_produceitem_2eproto();
  friend void protobuf_ShutdownFile_produceitem_2eproto();

  void InitAsDefaultInstance();
  static AckProduceItem* default_instance_;
};
// -------------------------------------------------------------------

class AckFunctionCell : public ::google::protobuf::Message {
 public:
  AckFunctionCell();
  virtual ~AckFunctionCell();

  AckFunctionCell(const AckFunctionCell& from);

  inline AckFunctionCell& operator=(const AckFunctionCell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckFunctionCell& default_instance();

  void Swap(AckFunctionCell* other);

  // implements Message ----------------------------------------------

  AckFunctionCell* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckFunctionCell& from);
  void MergeFrom(const AckFunctionCell& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FunctionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::HelloKittyMsgData::FunctionType type() const;
  inline void set_type(::HelloKittyMsgData::FunctionType value);

  // repeated .HelloKittyMsgData.FunctionCell functioncell = 3;
  inline int functioncell_size() const;
  inline void clear_functioncell();
  static const int kFunctioncellFieldNumber = 3;
  inline const ::HelloKittyMsgData::FunctionCell& functioncell(int index) const;
  inline ::HelloKittyMsgData::FunctionCell* mutable_functioncell(int index);
  inline ::HelloKittyMsgData::FunctionCell* add_functioncell();
  inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell >&
      functioncell() const;
  inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell >*
      mutable_functioncell();

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckFunctionCell)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell > functioncell_;
  int type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_produceitem_2eproto();
  friend void protobuf_AssignDesc_produceitem_2eproto();
  friend void protobuf_ShutdownFile_produceitem_2eproto();

  void InitAsDefaultInstance();
  static AckFunctionCell* default_instance_;
};
// -------------------------------------------------------------------

class ReqFunctionCellWork : public ::google::protobuf::Message {
 public:
  ReqFunctionCellWork();
  virtual ~ReqFunctionCellWork();

  ReqFunctionCellWork(const ReqFunctionCellWork& from);

  inline ReqFunctionCellWork& operator=(const ReqFunctionCellWork& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqFunctionCellWork& default_instance();

  void Swap(ReqFunctionCellWork* other);

  // implements Message ----------------------------------------------

  ReqFunctionCellWork* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqFunctionCellWork& from);
  void MergeFrom(const ReqFunctionCellWork& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FunctionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::HelloKittyMsgData::FunctionType type() const;
  inline void set_type(::HelloKittyMsgData::FunctionType value);

  // required uint32 placeid = 3 [default = 0];
  inline bool has_placeid() const;
  inline void clear_placeid();
  static const int kPlaceidFieldNumber = 3;
  inline ::google::protobuf::uint32 placeid() const;
  inline void set_placeid(::google::protobuf::uint32 value);

  // required uint32 produceid = 4;
  inline bool has_produceid() const;
  inline void clear_produceid();
  static const int kProduceidFieldNumber = 4;
  inline ::google::protobuf::uint32 produceid() const;
  inline void set_produceid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqFunctionCellWork)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_placeid();
  inline void clear_has_placeid();
  inline void set_has_produceid();
  inline void clear_has_produceid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  int type_;
  ::google::protobuf::uint32 placeid_;
  ::google::protobuf::uint32 produceid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_produceitem_2eproto();
  friend void protobuf_AssignDesc_produceitem_2eproto();
  friend void protobuf_ShutdownFile_produceitem_2eproto();

  void InitAsDefaultInstance();
  static ReqFunctionCellWork* default_instance_;
};
// -------------------------------------------------------------------

class AckBTPOpReturnFail : public ::google::protobuf::Message {
 public:
  AckBTPOpReturnFail();
  virtual ~AckBTPOpReturnFail();

  AckBTPOpReturnFail(const AckBTPOpReturnFail& from);

  inline AckBTPOpReturnFail& operator=(const AckBTPOpReturnFail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckBTPOpReturnFail& default_instance();

  void Swap(AckBTPOpReturnFail* other);

  // implements Message ----------------------------------------------

  AckBTPOpReturnFail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AckBTPOpReturnFail& from);
  void MergeFrom(const AckBTPOpReturnFail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FunctionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::HelloKittyMsgData::FunctionType type() const;
  inline void set_type(::HelloKittyMsgData::FunctionType value);

  // required uint32 placeid = 3;
  inline bool has_placeid() const;
  inline void clear_placeid();
  static const int kPlaceidFieldNumber = 3;
  inline ::google::protobuf::uint32 placeid() const;
  inline void set_placeid(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.ErrorCodeType commoncode = 4;
  inline bool has_commoncode() const;
  inline void clear_commoncode();
  static const int kCommoncodeFieldNumber = 4;
  inline ::HelloKittyMsgData::ErrorCodeType commoncode() const;
  inline void set_commoncode(::HelloKittyMsgData::ErrorCodeType value);

  // required .HelloKittyMsgData.BTPOpFailType code = 5;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 5;
  inline ::HelloKittyMsgData::BTPOpFailType code() const;
  inline void set_code(::HelloKittyMsgData::BTPOpFailType value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.AckBTPOpReturnFail)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_placeid();
  inline void clear_has_placeid();
  inline void set_has_commoncode();
  inline void clear_has_commoncode();
  inline void set_has_code();
  inline void clear_has_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  int type_;
  ::google::protobuf::uint32 placeid_;
  int commoncode_;
  int code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_produceitem_2eproto();
  friend void protobuf_AssignDesc_produceitem_2eproto();
  friend void protobuf_ShutdownFile_produceitem_2eproto();

  void InitAsDefaultInstance();
  static AckBTPOpReturnFail* default_instance_;
};
// -------------------------------------------------------------------

class ReqFunctionOp : public ::google::protobuf::Message {
 public:
  ReqFunctionOp();
  virtual ~ReqFunctionOp();

  ReqFunctionOp(const ReqFunctionOp& from);

  inline ReqFunctionOp& operator=(const ReqFunctionOp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqFunctionOp& default_instance();

  void Swap(ReqFunctionOp* other);

  // implements Message ----------------------------------------------

  ReqFunctionOp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqFunctionOp& from);
  void MergeFrom(const ReqFunctionOp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 tempid = 1;
  inline bool has_tempid() const;
  inline void clear_tempid();
  static const int kTempidFieldNumber = 1;
  inline ::google::protobuf::uint64 tempid() const;
  inline void set_tempid(::google::protobuf::uint64 value);

  // required .HelloKittyMsgData.FunctionType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::HelloKittyMsgData::FunctionType type() const;
  inline void set_type(::HelloKittyMsgData::FunctionType value);

  // required uint32 placeid = 3;
  inline bool has_placeid() const;
  inline void clear_placeid();
  static const int kPlaceidFieldNumber = 3;
  inline ::google::protobuf::uint32 placeid() const;
  inline void set_placeid(::google::protobuf::uint32 value);

  // required .HelloKittyMsgData.BTPOpType optype = 4;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 4;
  inline ::HelloKittyMsgData::BTPOpType optype() const;
  inline void set_optype(::HelloKittyMsgData::BTPOpType value);

  // @@protoc_insertion_point(class_scope:HelloKittyMsgData.ReqFunctionOp)
 private:
  inline void set_has_tempid();
  inline void clear_has_tempid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_placeid();
  inline void clear_has_placeid();
  inline void set_has_optype();
  inline void clear_has_optype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 tempid_;
  int type_;
  ::google::protobuf::uint32 placeid_;
  int optype_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_produceitem_2eproto();
  friend void protobuf_AssignDesc_produceitem_2eproto();
  friend void protobuf_ShutdownFile_produceitem_2eproto();

  void InitAsDefaultInstance();
  static ReqFunctionOp* default_instance_;
};
// ===================================================================


// ===================================================================

// FunctionCell

// required uint32 placeid = 1;
inline bool FunctionCell::has_placeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionCell::set_has_placeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionCell::clear_has_placeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionCell::clear_placeid() {
  placeid_ = 0u;
  clear_has_placeid();
}
inline ::google::protobuf::uint32 FunctionCell::placeid() const {
  return placeid_;
}
inline void FunctionCell::set_placeid(::google::protobuf::uint32 value) {
  set_has_placeid();
  placeid_ = value;
}

// required uint32 produceid = 2;
inline bool FunctionCell::has_produceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionCell::set_has_produceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionCell::clear_has_produceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionCell::clear_produceid() {
  produceid_ = 0u;
  clear_has_produceid();
}
inline ::google::protobuf::uint32 FunctionCell::produceid() const {
  return produceid_;
}
inline void FunctionCell::set_produceid(::google::protobuf::uint32 value) {
  set_has_produceid();
  produceid_ = value;
}

// required uint32 worktime = 3;
inline bool FunctionCell::has_worktime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FunctionCell::set_has_worktime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FunctionCell::clear_has_worktime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FunctionCell::clear_worktime() {
  worktime_ = 0u;
  clear_has_worktime();
}
inline ::google::protobuf::uint32 FunctionCell::worktime() const {
  return worktime_;
}
inline void FunctionCell::set_worktime(::google::protobuf::uint32 value) {
  set_has_worktime();
  worktime_ = value;
}

// required uint32 lasttime = 4;
inline bool FunctionCell::has_lasttime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FunctionCell::set_has_lasttime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FunctionCell::clear_has_lasttime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FunctionCell::clear_lasttime() {
  lasttime_ = 0u;
  clear_has_lasttime();
}
inline ::google::protobuf::uint32 FunctionCell::lasttime() const {
  return lasttime_;
}
inline void FunctionCell::set_lasttime(::google::protobuf::uint32 value) {
  set_has_lasttime();
  lasttime_ = value;
}

// required .HelloKittyMsgData.PlaceStatusType status = 5;
inline bool FunctionCell::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FunctionCell::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FunctionCell::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FunctionCell::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::HelloKittyMsgData::PlaceStatusType FunctionCell::status() const {
  return static_cast< ::HelloKittyMsgData::PlaceStatusType >(status_);
}
inline void FunctionCell::set_status(::HelloKittyMsgData::PlaceStatusType value) {
  assert(::HelloKittyMsgData::PlaceStatusType_IsValid(value));
  set_has_status();
  status_ = value;
}

// -------------------------------------------------------------------

// StoreFunctionCell

// required uint64 tempid = 1;
inline bool StoreFunctionCell::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreFunctionCell::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreFunctionCell::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreFunctionCell::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 StoreFunctionCell::tempid() const {
  return tempid_;
}
inline void StoreFunctionCell::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.FunctionType type = 2;
inline bool StoreFunctionCell::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoreFunctionCell::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoreFunctionCell::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoreFunctionCell::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::HelloKittyMsgData::FunctionType StoreFunctionCell::type() const {
  return static_cast< ::HelloKittyMsgData::FunctionType >(type_);
}
inline void StoreFunctionCell::set_type(::HelloKittyMsgData::FunctionType value) {
  assert(::HelloKittyMsgData::FunctionType_IsValid(value));
  set_has_type();
  type_ = value;
}

// repeated .HelloKittyMsgData.FunctionCell functioncell = 3;
inline int StoreFunctionCell::functioncell_size() const {
  return functioncell_.size();
}
inline void StoreFunctionCell::clear_functioncell() {
  functioncell_.Clear();
}
inline const ::HelloKittyMsgData::FunctionCell& StoreFunctionCell::functioncell(int index) const {
  return functioncell_.Get(index);
}
inline ::HelloKittyMsgData::FunctionCell* StoreFunctionCell::mutable_functioncell(int index) {
  return functioncell_.Mutable(index);
}
inline ::HelloKittyMsgData::FunctionCell* StoreFunctionCell::add_functioncell() {
  return functioncell_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell >&
StoreFunctionCell::functioncell() const {
  return functioncell_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell >*
StoreFunctionCell::mutable_functioncell() {
  return &functioncell_;
}

// -------------------------------------------------------------------

// ReqFunctionCell

// required uint64 tempid = 1;
inline bool ReqFunctionCell::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqFunctionCell::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqFunctionCell::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqFunctionCell::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqFunctionCell::tempid() const {
  return tempid_;
}
inline void ReqFunctionCell::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.FunctionType type = 2;
inline bool ReqFunctionCell::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqFunctionCell::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqFunctionCell::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqFunctionCell::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::HelloKittyMsgData::FunctionType ReqFunctionCell::type() const {
  return static_cast< ::HelloKittyMsgData::FunctionType >(type_);
}
inline void ReqFunctionCell::set_type(::HelloKittyMsgData::FunctionType value) {
  assert(::HelloKittyMsgData::FunctionType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 placeid = 3 [default = 0];
inline bool ReqFunctionCell::has_placeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqFunctionCell::set_has_placeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqFunctionCell::clear_has_placeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqFunctionCell::clear_placeid() {
  placeid_ = 0u;
  clear_has_placeid();
}
inline ::google::protobuf::uint32 ReqFunctionCell::placeid() const {
  return placeid_;
}
inline void ReqFunctionCell::set_placeid(::google::protobuf::uint32 value) {
  set_has_placeid();
  placeid_ = value;
}

// -------------------------------------------------------------------

// AckProduceItem

// required .HelloKittyMsgData.StoreFunctionCell produceitem = 1;
inline bool AckProduceItem::has_produceitem() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckProduceItem::set_has_produceitem() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckProduceItem::clear_has_produceitem() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckProduceItem::clear_produceitem() {
  if (produceitem_ != NULL) produceitem_->::HelloKittyMsgData::StoreFunctionCell::Clear();
  clear_has_produceitem();
}
inline const ::HelloKittyMsgData::StoreFunctionCell& AckProduceItem::produceitem() const {
  return produceitem_ != NULL ? *produceitem_ : *default_instance_->produceitem_;
}
inline ::HelloKittyMsgData::StoreFunctionCell* AckProduceItem::mutable_produceitem() {
  set_has_produceitem();
  if (produceitem_ == NULL) produceitem_ = new ::HelloKittyMsgData::StoreFunctionCell;
  return produceitem_;
}
inline ::HelloKittyMsgData::StoreFunctionCell* AckProduceItem::release_produceitem() {
  clear_has_produceitem();
  ::HelloKittyMsgData::StoreFunctionCell* temp = produceitem_;
  produceitem_ = NULL;
  return temp;
}
inline void AckProduceItem::set_allocated_produceitem(::HelloKittyMsgData::StoreFunctionCell* produceitem) {
  delete produceitem_;
  produceitem_ = produceitem;
  if (produceitem) {
    set_has_produceitem();
  } else {
    clear_has_produceitem();
  }
}

// -------------------------------------------------------------------

// AckFunctionCell

// required uint64 tempid = 1;
inline bool AckFunctionCell::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckFunctionCell::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckFunctionCell::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckFunctionCell::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 AckFunctionCell::tempid() const {
  return tempid_;
}
inline void AckFunctionCell::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.FunctionType type = 2;
inline bool AckFunctionCell::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckFunctionCell::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckFunctionCell::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckFunctionCell::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::HelloKittyMsgData::FunctionType AckFunctionCell::type() const {
  return static_cast< ::HelloKittyMsgData::FunctionType >(type_);
}
inline void AckFunctionCell::set_type(::HelloKittyMsgData::FunctionType value) {
  assert(::HelloKittyMsgData::FunctionType_IsValid(value));
  set_has_type();
  type_ = value;
}

// repeated .HelloKittyMsgData.FunctionCell functioncell = 3;
inline int AckFunctionCell::functioncell_size() const {
  return functioncell_.size();
}
inline void AckFunctionCell::clear_functioncell() {
  functioncell_.Clear();
}
inline const ::HelloKittyMsgData::FunctionCell& AckFunctionCell::functioncell(int index) const {
  return functioncell_.Get(index);
}
inline ::HelloKittyMsgData::FunctionCell* AckFunctionCell::mutable_functioncell(int index) {
  return functioncell_.Mutable(index);
}
inline ::HelloKittyMsgData::FunctionCell* AckFunctionCell::add_functioncell() {
  return functioncell_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell >&
AckFunctionCell::functioncell() const {
  return functioncell_;
}
inline ::google::protobuf::RepeatedPtrField< ::HelloKittyMsgData::FunctionCell >*
AckFunctionCell::mutable_functioncell() {
  return &functioncell_;
}

// -------------------------------------------------------------------

// ReqFunctionCellWork

// required uint64 tempid = 1;
inline bool ReqFunctionCellWork::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqFunctionCellWork::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqFunctionCellWork::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqFunctionCellWork::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqFunctionCellWork::tempid() const {
  return tempid_;
}
inline void ReqFunctionCellWork::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.FunctionType type = 2;
inline bool ReqFunctionCellWork::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqFunctionCellWork::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqFunctionCellWork::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqFunctionCellWork::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::HelloKittyMsgData::FunctionType ReqFunctionCellWork::type() const {
  return static_cast< ::HelloKittyMsgData::FunctionType >(type_);
}
inline void ReqFunctionCellWork::set_type(::HelloKittyMsgData::FunctionType value) {
  assert(::HelloKittyMsgData::FunctionType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 placeid = 3 [default = 0];
inline bool ReqFunctionCellWork::has_placeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqFunctionCellWork::set_has_placeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqFunctionCellWork::clear_has_placeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqFunctionCellWork::clear_placeid() {
  placeid_ = 0u;
  clear_has_placeid();
}
inline ::google::protobuf::uint32 ReqFunctionCellWork::placeid() const {
  return placeid_;
}
inline void ReqFunctionCellWork::set_placeid(::google::protobuf::uint32 value) {
  set_has_placeid();
  placeid_ = value;
}

// required uint32 produceid = 4;
inline bool ReqFunctionCellWork::has_produceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqFunctionCellWork::set_has_produceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqFunctionCellWork::clear_has_produceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqFunctionCellWork::clear_produceid() {
  produceid_ = 0u;
  clear_has_produceid();
}
inline ::google::protobuf::uint32 ReqFunctionCellWork::produceid() const {
  return produceid_;
}
inline void ReqFunctionCellWork::set_produceid(::google::protobuf::uint32 value) {
  set_has_produceid();
  produceid_ = value;
}

// -------------------------------------------------------------------

// AckBTPOpReturnFail

// required uint64 tempid = 1;
inline bool AckBTPOpReturnFail::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AckBTPOpReturnFail::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AckBTPOpReturnFail::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AckBTPOpReturnFail::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 AckBTPOpReturnFail::tempid() const {
  return tempid_;
}
inline void AckBTPOpReturnFail::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.FunctionType type = 2;
inline bool AckBTPOpReturnFail::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AckBTPOpReturnFail::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AckBTPOpReturnFail::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AckBTPOpReturnFail::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::HelloKittyMsgData::FunctionType AckBTPOpReturnFail::type() const {
  return static_cast< ::HelloKittyMsgData::FunctionType >(type_);
}
inline void AckBTPOpReturnFail::set_type(::HelloKittyMsgData::FunctionType value) {
  assert(::HelloKittyMsgData::FunctionType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 placeid = 3;
inline bool AckBTPOpReturnFail::has_placeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AckBTPOpReturnFail::set_has_placeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AckBTPOpReturnFail::clear_has_placeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AckBTPOpReturnFail::clear_placeid() {
  placeid_ = 0u;
  clear_has_placeid();
}
inline ::google::protobuf::uint32 AckBTPOpReturnFail::placeid() const {
  return placeid_;
}
inline void AckBTPOpReturnFail::set_placeid(::google::protobuf::uint32 value) {
  set_has_placeid();
  placeid_ = value;
}

// required .HelloKittyMsgData.ErrorCodeType commoncode = 4;
inline bool AckBTPOpReturnFail::has_commoncode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AckBTPOpReturnFail::set_has_commoncode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AckBTPOpReturnFail::clear_has_commoncode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AckBTPOpReturnFail::clear_commoncode() {
  commoncode_ = 0;
  clear_has_commoncode();
}
inline ::HelloKittyMsgData::ErrorCodeType AckBTPOpReturnFail::commoncode() const {
  return static_cast< ::HelloKittyMsgData::ErrorCodeType >(commoncode_);
}
inline void AckBTPOpReturnFail::set_commoncode(::HelloKittyMsgData::ErrorCodeType value) {
  assert(::HelloKittyMsgData::ErrorCodeType_IsValid(value));
  set_has_commoncode();
  commoncode_ = value;
}

// required .HelloKittyMsgData.BTPOpFailType code = 5;
inline bool AckBTPOpReturnFail::has_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AckBTPOpReturnFail::set_has_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AckBTPOpReturnFail::clear_has_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AckBTPOpReturnFail::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::HelloKittyMsgData::BTPOpFailType AckBTPOpReturnFail::code() const {
  return static_cast< ::HelloKittyMsgData::BTPOpFailType >(code_);
}
inline void AckBTPOpReturnFail::set_code(::HelloKittyMsgData::BTPOpFailType value) {
  assert(::HelloKittyMsgData::BTPOpFailType_IsValid(value));
  set_has_code();
  code_ = value;
}

// -------------------------------------------------------------------

// ReqFunctionOp

// required uint64 tempid = 1;
inline bool ReqFunctionOp::has_tempid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqFunctionOp::set_has_tempid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqFunctionOp::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqFunctionOp::clear_tempid() {
  tempid_ = GOOGLE_ULONGLONG(0);
  clear_has_tempid();
}
inline ::google::protobuf::uint64 ReqFunctionOp::tempid() const {
  return tempid_;
}
inline void ReqFunctionOp::set_tempid(::google::protobuf::uint64 value) {
  set_has_tempid();
  tempid_ = value;
}

// required .HelloKittyMsgData.FunctionType type = 2;
inline bool ReqFunctionOp::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqFunctionOp::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqFunctionOp::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqFunctionOp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::HelloKittyMsgData::FunctionType ReqFunctionOp::type() const {
  return static_cast< ::HelloKittyMsgData::FunctionType >(type_);
}
inline void ReqFunctionOp::set_type(::HelloKittyMsgData::FunctionType value) {
  assert(::HelloKittyMsgData::FunctionType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required uint32 placeid = 3;
inline bool ReqFunctionOp::has_placeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqFunctionOp::set_has_placeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqFunctionOp::clear_has_placeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqFunctionOp::clear_placeid() {
  placeid_ = 0u;
  clear_has_placeid();
}
inline ::google::protobuf::uint32 ReqFunctionOp::placeid() const {
  return placeid_;
}
inline void ReqFunctionOp::set_placeid(::google::protobuf::uint32 value) {
  set_has_placeid();
  placeid_ = value;
}

// required .HelloKittyMsgData.BTPOpType optype = 4;
inline bool ReqFunctionOp::has_optype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqFunctionOp::set_has_optype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqFunctionOp::clear_has_optype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqFunctionOp::clear_optype() {
  optype_ = 0;
  clear_has_optype();
}
inline ::HelloKittyMsgData::BTPOpType ReqFunctionOp::optype() const {
  return static_cast< ::HelloKittyMsgData::BTPOpType >(optype_);
}
inline void ReqFunctionOp::set_optype(::HelloKittyMsgData::BTPOpType value) {
  assert(::HelloKittyMsgData::BTPOpType_IsValid(value));
  set_has_optype();
  optype_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace HelloKittyMsgData

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::PlaceStatusType>() {
  return ::HelloKittyMsgData::PlaceStatusType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::FunctionType>() {
  return ::HelloKittyMsgData::FunctionType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::BTPOpFailType>() {
  return ::HelloKittyMsgData::BTPOpFailType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HelloKittyMsgData::BTPOpType>() {
  return ::HelloKittyMsgData::BTPOpType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_produceitem_2eproto__INCLUDED
