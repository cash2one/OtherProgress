// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Dress.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Dress.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* Dress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dress_reflection_ = NULL;
const ::google::protobuf::Descriptor* Dress_t_Dress_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Dress_t_Dress_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Dress_2eproto() {
  protobuf_AddDesc_Dress_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Dress.proto");
  GOOGLE_CHECK(file != NULL);
  Dress_descriptor_ = file->message_type(0);
  static const int Dress_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress, datas_),
  };
  Dress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Dress_descriptor_,
      Dress::default_instance_,
      Dress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Dress));
  Dress_t_Dress_descriptor_ = Dress_descriptor_->nested_type(0);
  static const int Dress_t_Dress_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, tbxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, material_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, buffer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, atlas_),
  };
  Dress_t_Dress_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Dress_t_Dress_descriptor_,
      Dress_t_Dress::default_instance_,
      Dress_t_Dress_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dress_t_Dress, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Dress_t_Dress));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Dress_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Dress_descriptor_, &Dress::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Dress_t_Dress_descriptor_, &Dress_t_Dress::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Dress_2eproto() {
  delete Dress::default_instance_;
  delete Dress_reflection_;
  delete Dress_t_Dress::default_instance_;
  delete Dress_t_Dress_reflection_;
}

void protobuf_AddDesc_Dress_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013Dress.proto\022\002pb\"\236\001\n\005Dress\022 \n\005datas\030\001 \003"
    "(\0132\021.pb.Dress.t_Dress\032s\n\007t_Dress\022\r\n\005tbxi"
    "d\030\001 \002(\r\022\n\n\002id\030\002 \002(\r\022\r\n\005level\030\003 \002(\r\022\020\n\010ma"
    "terial\030\004 \002(\t\022\016\n\006buffer\030\005 \002(\t\022\r\n\005price\030\006 "
    "\002(\r\022\r\n\005atlas\030\007 \002(\t", 178);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Dress.proto", &protobuf_RegisterTypes);
  Dress::default_instance_ = new Dress();
  Dress_t_Dress::default_instance_ = new Dress_t_Dress();
  Dress::default_instance_->InitAsDefaultInstance();
  Dress_t_Dress::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Dress_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Dress_2eproto {
  StaticDescriptorInitializer_Dress_2eproto() {
    protobuf_AddDesc_Dress_2eproto();
  }
} static_descriptor_initializer_Dress_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Dress_t_Dress::kTbxidFieldNumber;
const int Dress_t_Dress::kIdFieldNumber;
const int Dress_t_Dress::kLevelFieldNumber;
const int Dress_t_Dress::kMaterialFieldNumber;
const int Dress_t_Dress::kBufferFieldNumber;
const int Dress_t_Dress::kPriceFieldNumber;
const int Dress_t_Dress::kAtlasFieldNumber;
#endif  // !_MSC_VER

Dress_t_Dress::Dress_t_Dress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Dress_t_Dress::InitAsDefaultInstance() {
}

Dress_t_Dress::Dress_t_Dress(const Dress_t_Dress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Dress_t_Dress::SharedCtor() {
  _cached_size_ = 0;
  tbxid_ = 0u;
  id_ = 0u;
  level_ = 0u;
  material_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  buffer_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  price_ = 0u;
  atlas_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Dress_t_Dress::~Dress_t_Dress() {
  SharedDtor();
}

void Dress_t_Dress::SharedDtor() {
  if (material_ != &::google::protobuf::internal::kEmptyString) {
    delete material_;
  }
  if (buffer_ != &::google::protobuf::internal::kEmptyString) {
    delete buffer_;
  }
  if (atlas_ != &::google::protobuf::internal::kEmptyString) {
    delete atlas_;
  }
  if (this != default_instance_) {
  }
}

void Dress_t_Dress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dress_t_Dress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dress_t_Dress_descriptor_;
}

const Dress_t_Dress& Dress_t_Dress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Dress_2eproto();
  return *default_instance_;
}

Dress_t_Dress* Dress_t_Dress::default_instance_ = NULL;

Dress_t_Dress* Dress_t_Dress::New() const {
  return new Dress_t_Dress;
}

void Dress_t_Dress::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tbxid_ = 0u;
    id_ = 0u;
    level_ = 0u;
    if (has_material()) {
      if (material_ != &::google::protobuf::internal::kEmptyString) {
        material_->clear();
      }
    }
    if (has_buffer()) {
      if (buffer_ != &::google::protobuf::internal::kEmptyString) {
        buffer_->clear();
      }
    }
    price_ = 0u;
    if (has_atlas()) {
      if (atlas_ != &::google::protobuf::internal::kEmptyString) {
        atlas_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Dress_t_Dress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tbxid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbxid_)));
          set_has_tbxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_material;
        break;
      }

      // required string material = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_material:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_material()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->material().data(), this->material().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_buffer;
        break;
      }

      // required string buffer = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buffer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buffer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buffer().data(), this->buffer().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_price;
        break;
      }

      // required uint32 price = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_atlas;
        break;
      }

      // required string atlas = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_atlas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_atlas()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->atlas().data(), this->atlas().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Dress_t_Dress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tbxid(), output);
  }

  // required uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required string material = 4;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->material(), output);
  }

  // required string buffer = 5;
  if (has_buffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buffer().data(), this->buffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->buffer(), output);
  }

  // required uint32 price = 6;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->price(), output);
  }

  // required string atlas = 7;
  if (has_atlas()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->atlas().data(), this->atlas().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->atlas(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Dress_t_Dress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tbxid(), target);
  }

  // required uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // required string material = 4;
  if (has_material()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->material().data(), this->material().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->material(), target);
  }

  // required string buffer = 5;
  if (has_buffer()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buffer().data(), this->buffer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->buffer(), target);
  }

  // required uint32 price = 6;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->price(), target);
  }

  // required string atlas = 7;
  if (has_atlas()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->atlas().data(), this->atlas().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->atlas(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Dress_t_Dress::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tbxid = 1;
    if (has_tbxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tbxid());
    }

    // required uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required string material = 4;
    if (has_material()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->material());
    }

    // required string buffer = 5;
    if (has_buffer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buffer());
    }

    // required uint32 price = 6;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

    // required string atlas = 7;
    if (has_atlas()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->atlas());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dress_t_Dress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Dress_t_Dress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Dress_t_Dress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Dress_t_Dress::MergeFrom(const Dress_t_Dress& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tbxid()) {
      set_tbxid(from.tbxid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_material()) {
      set_material(from.material());
    }
    if (from.has_buffer()) {
      set_buffer(from.buffer());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_atlas()) {
      set_atlas(from.atlas());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Dress_t_Dress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dress_t_Dress::CopyFrom(const Dress_t_Dress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dress_t_Dress::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void Dress_t_Dress::Swap(Dress_t_Dress* other) {
  if (other != this) {
    std::swap(tbxid_, other->tbxid_);
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(material_, other->material_);
    std::swap(buffer_, other->buffer_);
    std::swap(price_, other->price_);
    std::swap(atlas_, other->atlas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Dress_t_Dress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dress_t_Dress_descriptor_;
  metadata.reflection = Dress_t_Dress_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Dress::kDatasFieldNumber;
#endif  // !_MSC_VER

Dress::Dress()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Dress::InitAsDefaultInstance() {
}

Dress::Dress(const Dress& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Dress::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Dress::~Dress() {
  SharedDtor();
}

void Dress::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Dress::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dress::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Dress_descriptor_;
}

const Dress& Dress::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Dress_2eproto();
  return *default_instance_;
}

Dress* Dress::default_instance_ = NULL;

Dress* Dress::New() const {
  return new Dress;
}

void Dress::Clear() {
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Dress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.Dress.t_Dress datas = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_datas;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Dress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .pb.Dress.t_Dress datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Dress::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .pb.Dress.t_Dress datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Dress::ByteSize() const {
  int total_size = 0;

  // repeated .pb.Dress.t_Dress datas = 1;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dress::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Dress* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Dress*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Dress::MergeFrom(const Dress& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Dress::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dress::CopyFrom(const Dress& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dress::IsInitialized() const {

  for (int i = 0; i < datas_size(); i++) {
    if (!this->datas(i).IsInitialized()) return false;
  }
  return true;
}

void Dress::Swap(Dress* other) {
  if (other != this) {
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Dress::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Dress_descriptor_;
  metadata.reflection = Dress_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
