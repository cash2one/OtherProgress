// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Buffer.proto

#ifndef PROTOBUF_Buffer_2eproto__INCLUDED
#define PROTOBUF_Buffer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Buffer_2eproto();
void protobuf_AssignDesc_Buffer_2eproto();
void protobuf_ShutdownFile_Buffer_2eproto();

class buffer;
class buffer_t_buffer;

// ===================================================================

class buffer_t_buffer : public ::google::protobuf::Message {
 public:
  buffer_t_buffer();
  virtual ~buffer_t_buffer();

  buffer_t_buffer(const buffer_t_buffer& from);

  inline buffer_t_buffer& operator=(const buffer_t_buffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buffer_t_buffer& default_instance();

  void Swap(buffer_t_buffer* other);

  // implements Message ----------------------------------------------

  buffer_t_buffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buffer_t_buffer& from);
  void MergeFrom(const buffer_t_buffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tbxid = 1;
  inline bool has_tbxid() const;
  inline void clear_tbxid();
  static const int kTbxidFieldNumber = 1;
  inline ::google::protobuf::uint32 tbxid() const;
  inline void set_tbxid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.buffer.t_buffer)
 private:
  inline void set_has_tbxid();
  inline void clear_has_tbxid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 tbxid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Buffer_2eproto();
  friend void protobuf_AssignDesc_Buffer_2eproto();
  friend void protobuf_ShutdownFile_Buffer_2eproto();

  void InitAsDefaultInstance();
  static buffer_t_buffer* default_instance_;
};
// -------------------------------------------------------------------

class buffer : public ::google::protobuf::Message {
 public:
  buffer();
  virtual ~buffer();

  buffer(const buffer& from);

  inline buffer& operator=(const buffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const buffer& default_instance();

  void Swap(buffer* other);

  // implements Message ----------------------------------------------

  buffer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const buffer& from);
  void MergeFrom(const buffer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef buffer_t_buffer t_buffer;

  // accessors -------------------------------------------------------

  // repeated .pb.buffer.t_buffer datas = 1;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 1;
  inline const ::pb::buffer_t_buffer& datas(int index) const;
  inline ::pb::buffer_t_buffer* mutable_datas(int index);
  inline ::pb::buffer_t_buffer* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::buffer_t_buffer >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::buffer_t_buffer >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:pb.buffer)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::buffer_t_buffer > datas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Buffer_2eproto();
  friend void protobuf_AssignDesc_Buffer_2eproto();
  friend void protobuf_ShutdownFile_Buffer_2eproto();

  void InitAsDefaultInstance();
  static buffer* default_instance_;
};
// ===================================================================


// ===================================================================

// buffer_t_buffer

// required uint32 tbxid = 1;
inline bool buffer_t_buffer::has_tbxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void buffer_t_buffer::set_has_tbxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void buffer_t_buffer::clear_has_tbxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void buffer_t_buffer::clear_tbxid() {
  tbxid_ = 0u;
  clear_has_tbxid();
}
inline ::google::protobuf::uint32 buffer_t_buffer::tbxid() const {
  return tbxid_;
}
inline void buffer_t_buffer::set_tbxid(::google::protobuf::uint32 value) {
  set_has_tbxid();
  tbxid_ = value;
}

// required uint32 id = 2;
inline bool buffer_t_buffer::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void buffer_t_buffer::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void buffer_t_buffer::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void buffer_t_buffer::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 buffer_t_buffer::id() const {
  return id_;
}
inline void buffer_t_buffer::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 type = 3;
inline bool buffer_t_buffer::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void buffer_t_buffer::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void buffer_t_buffer::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void buffer_t_buffer::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 buffer_t_buffer::type() const {
  return type_;
}
inline void buffer_t_buffer::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// buffer

// repeated .pb.buffer.t_buffer datas = 1;
inline int buffer::datas_size() const {
  return datas_.size();
}
inline void buffer::clear_datas() {
  datas_.Clear();
}
inline const ::pb::buffer_t_buffer& buffer::datas(int index) const {
  return datas_.Get(index);
}
inline ::pb::buffer_t_buffer* buffer::mutable_datas(int index) {
  return datas_.Mutable(index);
}
inline ::pb::buffer_t_buffer* buffer::add_datas() {
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::buffer_t_buffer >&
buffer::datas() const {
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::buffer_t_buffer >*
buffer::mutable_datas() {
  return &datas_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Buffer_2eproto__INCLUDED
