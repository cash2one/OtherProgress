// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Toy.proto

#ifndef PROTOBUF_Toy_2eproto__INCLUDED
#define PROTOBUF_Toy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Toy_2eproto();
void protobuf_AssignDesc_Toy_2eproto();
void protobuf_ShutdownFile_Toy_2eproto();

class Toy;
class Toy_t_Toy;

// ===================================================================

class Toy_t_Toy : public ::google::protobuf::Message {
 public:
  Toy_t_Toy();
  virtual ~Toy_t_Toy();

  Toy_t_Toy(const Toy_t_Toy& from);

  inline Toy_t_Toy& operator=(const Toy_t_Toy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Toy_t_Toy& default_instance();

  void Swap(Toy_t_Toy* other);

  // implements Message ----------------------------------------------

  Toy_t_Toy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Toy_t_Toy& from);
  void MergeFrom(const Toy_t_Toy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tbxid = 1;
  inline bool has_tbxid() const;
  inline void clear_tbxid();
  static const int kTbxidFieldNumber = 1;
  inline ::google::protobuf::uint32 tbxid() const;
  inline void set_tbxid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 itemid = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 3;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 num = 4;
  inline bool has_num() const;
  inline void clear_num();
  static const int kNumFieldNumber = 4;
  inline ::google::protobuf::uint32 num() const;
  inline void set_num(::google::protobuf::uint32 value);

  // required uint32 weight = 5;
  inline bool has_weight() const;
  inline void clear_weight();
  static const int kWeightFieldNumber = 5;
  inline ::google::protobuf::uint32 weight() const;
  inline void set_weight(::google::protobuf::uint32 value);

  // required uint32 mark = 6;
  inline bool has_mark() const;
  inline void clear_mark();
  static const int kMarkFieldNumber = 6;
  inline ::google::protobuf::uint32 mark() const;
  inline void set_mark(::google::protobuf::uint32 value);

  // required uint32 open = 7;
  inline bool has_open() const;
  inline void clear_open();
  static const int kOpenFieldNumber = 7;
  inline ::google::protobuf::uint32 open() const;
  inline void set_open(::google::protobuf::uint32 value);

  // required uint32 awardCounts = 8;
  inline bool has_awardcounts() const;
  inline void clear_awardcounts();
  static const int kAwardCountsFieldNumber = 8;
  inline ::google::protobuf::uint32 awardcounts() const;
  inline void set_awardcounts(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Toy.t_Toy)
 private:
  inline void set_has_tbxid();
  inline void clear_has_tbxid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_num();
  inline void clear_has_num();
  inline void set_has_weight();
  inline void clear_has_weight();
  inline void set_has_mark();
  inline void clear_has_mark();
  inline void set_has_open();
  inline void clear_has_open();
  inline void set_has_awardcounts();
  inline void clear_has_awardcounts();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 tbxid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 num_;
  ::google::protobuf::uint32 weight_;
  ::google::protobuf::uint32 mark_;
  ::google::protobuf::uint32 open_;
  ::google::protobuf::uint32 awardcounts_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_Toy_2eproto();
  friend void protobuf_AssignDesc_Toy_2eproto();
  friend void protobuf_ShutdownFile_Toy_2eproto();

  void InitAsDefaultInstance();
  static Toy_t_Toy* default_instance_;
};
// -------------------------------------------------------------------

class Toy : public ::google::protobuf::Message {
 public:
  Toy();
  virtual ~Toy();

  Toy(const Toy& from);

  inline Toy& operator=(const Toy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Toy& default_instance();

  void Swap(Toy* other);

  // implements Message ----------------------------------------------

  Toy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Toy& from);
  void MergeFrom(const Toy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Toy_t_Toy t_Toy;

  // accessors -------------------------------------------------------

  // repeated .pb.Toy.t_Toy datas = 1;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 1;
  inline const ::pb::Toy_t_Toy& datas(int index) const;
  inline ::pb::Toy_t_Toy* mutable_datas(int index);
  inline ::pb::Toy_t_Toy* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::Toy_t_Toy >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::Toy_t_Toy >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:pb.Toy)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::Toy_t_Toy > datas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Toy_2eproto();
  friend void protobuf_AssignDesc_Toy_2eproto();
  friend void protobuf_ShutdownFile_Toy_2eproto();

  void InitAsDefaultInstance();
  static Toy* default_instance_;
};
// ===================================================================


// ===================================================================

// Toy_t_Toy

// required uint32 tbxid = 1;
inline bool Toy_t_Toy::has_tbxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Toy_t_Toy::set_has_tbxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Toy_t_Toy::clear_has_tbxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Toy_t_Toy::clear_tbxid() {
  tbxid_ = 0u;
  clear_has_tbxid();
}
inline ::google::protobuf::uint32 Toy_t_Toy::tbxid() const {
  return tbxid_;
}
inline void Toy_t_Toy::set_tbxid(::google::protobuf::uint32 value) {
  set_has_tbxid();
  tbxid_ = value;
}

// required uint32 id = 2;
inline bool Toy_t_Toy::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Toy_t_Toy::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Toy_t_Toy::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Toy_t_Toy::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Toy_t_Toy::id() const {
  return id_;
}
inline void Toy_t_Toy::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 itemid = 3;
inline bool Toy_t_Toy::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Toy_t_Toy::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Toy_t_Toy::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Toy_t_Toy::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 Toy_t_Toy::itemid() const {
  return itemid_;
}
inline void Toy_t_Toy::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 num = 4;
inline bool Toy_t_Toy::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Toy_t_Toy::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Toy_t_Toy::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Toy_t_Toy::clear_num() {
  num_ = 0u;
  clear_has_num();
}
inline ::google::protobuf::uint32 Toy_t_Toy::num() const {
  return num_;
}
inline void Toy_t_Toy::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
}

// required uint32 weight = 5;
inline bool Toy_t_Toy::has_weight() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Toy_t_Toy::set_has_weight() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Toy_t_Toy::clear_has_weight() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Toy_t_Toy::clear_weight() {
  weight_ = 0u;
  clear_has_weight();
}
inline ::google::protobuf::uint32 Toy_t_Toy::weight() const {
  return weight_;
}
inline void Toy_t_Toy::set_weight(::google::protobuf::uint32 value) {
  set_has_weight();
  weight_ = value;
}

// required uint32 mark = 6;
inline bool Toy_t_Toy::has_mark() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Toy_t_Toy::set_has_mark() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Toy_t_Toy::clear_has_mark() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Toy_t_Toy::clear_mark() {
  mark_ = 0u;
  clear_has_mark();
}
inline ::google::protobuf::uint32 Toy_t_Toy::mark() const {
  return mark_;
}
inline void Toy_t_Toy::set_mark(::google::protobuf::uint32 value) {
  set_has_mark();
  mark_ = value;
}

// required uint32 open = 7;
inline bool Toy_t_Toy::has_open() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Toy_t_Toy::set_has_open() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Toy_t_Toy::clear_has_open() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Toy_t_Toy::clear_open() {
  open_ = 0u;
  clear_has_open();
}
inline ::google::protobuf::uint32 Toy_t_Toy::open() const {
  return open_;
}
inline void Toy_t_Toy::set_open(::google::protobuf::uint32 value) {
  set_has_open();
  open_ = value;
}

// required uint32 awardCounts = 8;
inline bool Toy_t_Toy::has_awardcounts() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Toy_t_Toy::set_has_awardcounts() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Toy_t_Toy::clear_has_awardcounts() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Toy_t_Toy::clear_awardcounts() {
  awardcounts_ = 0u;
  clear_has_awardcounts();
}
inline ::google::protobuf::uint32 Toy_t_Toy::awardcounts() const {
  return awardcounts_;
}
inline void Toy_t_Toy::set_awardcounts(::google::protobuf::uint32 value) {
  set_has_awardcounts();
  awardcounts_ = value;
}

// -------------------------------------------------------------------

// Toy

// repeated .pb.Toy.t_Toy datas = 1;
inline int Toy::datas_size() const {
  return datas_.size();
}
inline void Toy::clear_datas() {
  datas_.Clear();
}
inline const ::pb::Toy_t_Toy& Toy::datas(int index) const {
  return datas_.Get(index);
}
inline ::pb::Toy_t_Toy* Toy::mutable_datas(int index) {
  return datas_.Mutable(index);
}
inline ::pb::Toy_t_Toy* Toy::add_datas() {
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Toy_t_Toy >&
Toy::datas() const {
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Toy_t_Toy >*
Toy::mutable_datas() {
  return &datas_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Toy_2eproto__INCLUDED
