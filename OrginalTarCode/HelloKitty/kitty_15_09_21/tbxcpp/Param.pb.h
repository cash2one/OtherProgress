// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Param.proto

#ifndef PROTOBUF_Param_2eproto__INCLUDED
#define PROTOBUF_Param_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Param_2eproto();
void protobuf_AssignDesc_Param_2eproto();
void protobuf_ShutdownFile_Param_2eproto();

class param;
class param_t_param;

// ===================================================================

class param_t_param : public ::google::protobuf::Message {
 public:
  param_t_param();
  virtual ~param_t_param();

  param_t_param(const param_t_param& from);

  inline param_t_param& operator=(const param_t_param& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const param_t_param& default_instance();

  void Swap(param_t_param* other);

  // implements Message ----------------------------------------------

  param_t_param* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const param_t_param& from);
  void MergeFrom(const param_t_param& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tbxid = 1;
  inline bool has_tbxid() const;
  inline void clear_tbxid();
  static const int kTbxidFieldNumber = 1;
  inline ::google::protobuf::uint32 tbxid() const;
  inline void set_tbxid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 intparam = 3;
  inline bool has_intparam() const;
  inline void clear_intparam();
  static const int kIntparamFieldNumber = 3;
  inline ::google::protobuf::uint32 intparam() const;
  inline void set_intparam(::google::protobuf::uint32 value);

  // required string strparam = 4;
  inline bool has_strparam() const;
  inline void clear_strparam();
  static const int kStrparamFieldNumber = 4;
  inline const ::std::string& strparam() const;
  inline void set_strparam(const ::std::string& value);
  inline void set_strparam(const char* value);
  inline void set_strparam(const char* value, size_t size);
  inline ::std::string* mutable_strparam();
  inline ::std::string* release_strparam();
  inline void set_allocated_strparam(::std::string* strparam);

  // required string strdesc = 5;
  inline bool has_strdesc() const;
  inline void clear_strdesc();
  static const int kStrdescFieldNumber = 5;
  inline const ::std::string& strdesc() const;
  inline void set_strdesc(const ::std::string& value);
  inline void set_strdesc(const char* value);
  inline void set_strdesc(const char* value, size_t size);
  inline ::std::string* mutable_strdesc();
  inline ::std::string* release_strdesc();
  inline void set_allocated_strdesc(::std::string* strdesc);

  // @@protoc_insertion_point(class_scope:pb.param.t_param)
 private:
  inline void set_has_tbxid();
  inline void clear_has_tbxid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_intparam();
  inline void clear_has_intparam();
  inline void set_has_strparam();
  inline void clear_has_strparam();
  inline void set_has_strdesc();
  inline void clear_has_strdesc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 tbxid_;
  ::google::protobuf::uint32 id_;
  ::std::string* strparam_;
  ::std::string* strdesc_;
  ::google::protobuf::uint32 intparam_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Param_2eproto();
  friend void protobuf_AssignDesc_Param_2eproto();
  friend void protobuf_ShutdownFile_Param_2eproto();

  void InitAsDefaultInstance();
  static param_t_param* default_instance_;
};
// -------------------------------------------------------------------

class param : public ::google::protobuf::Message {
 public:
  param();
  virtual ~param();

  param(const param& from);

  inline param& operator=(const param& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const param& default_instance();

  void Swap(param* other);

  // implements Message ----------------------------------------------

  param* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const param& from);
  void MergeFrom(const param& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef param_t_param t_param;

  // accessors -------------------------------------------------------

  // repeated .pb.param.t_param datas = 1;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 1;
  inline const ::pb::param_t_param& datas(int index) const;
  inline ::pb::param_t_param* mutable_datas(int index);
  inline ::pb::param_t_param* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::param_t_param >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::param_t_param >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:pb.param)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::param_t_param > datas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Param_2eproto();
  friend void protobuf_AssignDesc_Param_2eproto();
  friend void protobuf_ShutdownFile_Param_2eproto();

  void InitAsDefaultInstance();
  static param* default_instance_;
};
// ===================================================================


// ===================================================================

// param_t_param

// required uint32 tbxid = 1;
inline bool param_t_param::has_tbxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void param_t_param::set_has_tbxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void param_t_param::clear_has_tbxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void param_t_param::clear_tbxid() {
  tbxid_ = 0u;
  clear_has_tbxid();
}
inline ::google::protobuf::uint32 param_t_param::tbxid() const {
  return tbxid_;
}
inline void param_t_param::set_tbxid(::google::protobuf::uint32 value) {
  set_has_tbxid();
  tbxid_ = value;
}

// required uint32 id = 2;
inline bool param_t_param::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void param_t_param::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void param_t_param::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void param_t_param::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 param_t_param::id() const {
  return id_;
}
inline void param_t_param::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 intparam = 3;
inline bool param_t_param::has_intparam() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void param_t_param::set_has_intparam() {
  _has_bits_[0] |= 0x00000004u;
}
inline void param_t_param::clear_has_intparam() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void param_t_param::clear_intparam() {
  intparam_ = 0u;
  clear_has_intparam();
}
inline ::google::protobuf::uint32 param_t_param::intparam() const {
  return intparam_;
}
inline void param_t_param::set_intparam(::google::protobuf::uint32 value) {
  set_has_intparam();
  intparam_ = value;
}

// required string strparam = 4;
inline bool param_t_param::has_strparam() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void param_t_param::set_has_strparam() {
  _has_bits_[0] |= 0x00000008u;
}
inline void param_t_param::clear_has_strparam() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void param_t_param::clear_strparam() {
  if (strparam_ != &::google::protobuf::internal::kEmptyString) {
    strparam_->clear();
  }
  clear_has_strparam();
}
inline const ::std::string& param_t_param::strparam() const {
  return *strparam_;
}
inline void param_t_param::set_strparam(const ::std::string& value) {
  set_has_strparam();
  if (strparam_ == &::google::protobuf::internal::kEmptyString) {
    strparam_ = new ::std::string;
  }
  strparam_->assign(value);
}
inline void param_t_param::set_strparam(const char* value) {
  set_has_strparam();
  if (strparam_ == &::google::protobuf::internal::kEmptyString) {
    strparam_ = new ::std::string;
  }
  strparam_->assign(value);
}
inline void param_t_param::set_strparam(const char* value, size_t size) {
  set_has_strparam();
  if (strparam_ == &::google::protobuf::internal::kEmptyString) {
    strparam_ = new ::std::string;
  }
  strparam_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* param_t_param::mutable_strparam() {
  set_has_strparam();
  if (strparam_ == &::google::protobuf::internal::kEmptyString) {
    strparam_ = new ::std::string;
  }
  return strparam_;
}
inline ::std::string* param_t_param::release_strparam() {
  clear_has_strparam();
  if (strparam_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strparam_;
    strparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void param_t_param::set_allocated_strparam(::std::string* strparam) {
  if (strparam_ != &::google::protobuf::internal::kEmptyString) {
    delete strparam_;
  }
  if (strparam) {
    set_has_strparam();
    strparam_ = strparam;
  } else {
    clear_has_strparam();
    strparam_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string strdesc = 5;
inline bool param_t_param::has_strdesc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void param_t_param::set_has_strdesc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void param_t_param::clear_has_strdesc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void param_t_param::clear_strdesc() {
  if (strdesc_ != &::google::protobuf::internal::kEmptyString) {
    strdesc_->clear();
  }
  clear_has_strdesc();
}
inline const ::std::string& param_t_param::strdesc() const {
  return *strdesc_;
}
inline void param_t_param::set_strdesc(const ::std::string& value) {
  set_has_strdesc();
  if (strdesc_ == &::google::protobuf::internal::kEmptyString) {
    strdesc_ = new ::std::string;
  }
  strdesc_->assign(value);
}
inline void param_t_param::set_strdesc(const char* value) {
  set_has_strdesc();
  if (strdesc_ == &::google::protobuf::internal::kEmptyString) {
    strdesc_ = new ::std::string;
  }
  strdesc_->assign(value);
}
inline void param_t_param::set_strdesc(const char* value, size_t size) {
  set_has_strdesc();
  if (strdesc_ == &::google::protobuf::internal::kEmptyString) {
    strdesc_ = new ::std::string;
  }
  strdesc_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* param_t_param::mutable_strdesc() {
  set_has_strdesc();
  if (strdesc_ == &::google::protobuf::internal::kEmptyString) {
    strdesc_ = new ::std::string;
  }
  return strdesc_;
}
inline ::std::string* param_t_param::release_strdesc() {
  clear_has_strdesc();
  if (strdesc_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = strdesc_;
    strdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void param_t_param::set_allocated_strdesc(::std::string* strdesc) {
  if (strdesc_ != &::google::protobuf::internal::kEmptyString) {
    delete strdesc_;
  }
  if (strdesc) {
    set_has_strdesc();
    strdesc_ = strdesc;
  } else {
    clear_has_strdesc();
    strdesc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// param

// repeated .pb.param.t_param datas = 1;
inline int param::datas_size() const {
  return datas_.size();
}
inline void param::clear_datas() {
  datas_.Clear();
}
inline const ::pb::param_t_param& param::datas(int index) const {
  return datas_.Get(index);
}
inline ::pb::param_t_param* param::mutable_datas(int index) {
  return datas_.Mutable(index);
}
inline ::pb::param_t_param* param::add_datas() {
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::param_t_param >&
param::datas() const {
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::param_t_param >*
param::mutable_datas() {
  return &datas_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Param_2eproto__INCLUDED
