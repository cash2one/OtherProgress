// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Production.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Production.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* produceItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  produceItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* produceItem_t_produceItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  produceItem_t_produceItem_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Production_2eproto() {
  protobuf_AddDesc_Production_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Production.proto");
  GOOGLE_CHECK(file != NULL);
  produceItem_descriptor_ = file->message_type(0);
  static const int produceItem_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem, datas_),
  };
  produceItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      produceItem_descriptor_,
      produceItem::default_instance_,
      produceItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(produceItem));
  produceItem_t_produceItem_descriptor_ = produceItem_descriptor_->nested_type(0);
  static const int produceItem_t_produceItem_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, tbxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, itemid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, buildid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, usetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, clear_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, userprop_),
  };
  produceItem_t_produceItem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      produceItem_t_produceItem_descriptor_,
      produceItem_t_produceItem::default_instance_,
      produceItem_t_produceItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(produceItem_t_produceItem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(produceItem_t_produceItem));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Production_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    produceItem_descriptor_, &produceItem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    produceItem_t_produceItem_descriptor_, &produceItem_t_produceItem::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Production_2eproto() {
  delete produceItem::default_instance_;
  delete produceItem_reflection_;
  delete produceItem_t_produceItem::default_instance_;
  delete produceItem_t_produceItem_reflection_;
}

void protobuf_AddDesc_Production_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020Production.proto\022\002pb\"\327\001\n\013produceItem\022,"
    "\n\005datas\030\001 \003(\0132\035.pb.produceItem.t_produce"
    "Item\032\231\001\n\rt_produceItem\022\r\n\005tbxid\030\001 \002(\r\022\n\n"
    "\002id\030\002 \002(\r\022\016\n\006itemID\030\003 \002(\r\022\017\n\007buildID\030\004 \002"
    "(\r\022\013\n\003pos\030\005 \002(\r\022\r\n\005level\030\006 \002(\r\022\017\n\007useTim"
    "e\030\007 \002(\r\022\r\n\005clear\030\010 \002(\r\022\020\n\010userProp\030\t \002(\t", 240);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Production.proto", &protobuf_RegisterTypes);
  produceItem::default_instance_ = new produceItem();
  produceItem_t_produceItem::default_instance_ = new produceItem_t_produceItem();
  produceItem::default_instance_->InitAsDefaultInstance();
  produceItem_t_produceItem::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Production_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Production_2eproto {
  StaticDescriptorInitializer_Production_2eproto() {
    protobuf_AddDesc_Production_2eproto();
  }
} static_descriptor_initializer_Production_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int produceItem_t_produceItem::kTbxidFieldNumber;
const int produceItem_t_produceItem::kIdFieldNumber;
const int produceItem_t_produceItem::kItemIDFieldNumber;
const int produceItem_t_produceItem::kBuildIDFieldNumber;
const int produceItem_t_produceItem::kPosFieldNumber;
const int produceItem_t_produceItem::kLevelFieldNumber;
const int produceItem_t_produceItem::kUseTimeFieldNumber;
const int produceItem_t_produceItem::kClearFieldNumber;
const int produceItem_t_produceItem::kUserPropFieldNumber;
#endif  // !_MSC_VER

produceItem_t_produceItem::produceItem_t_produceItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void produceItem_t_produceItem::InitAsDefaultInstance() {
}

produceItem_t_produceItem::produceItem_t_produceItem(const produceItem_t_produceItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void produceItem_t_produceItem::SharedCtor() {
  _cached_size_ = 0;
  tbxid_ = 0u;
  id_ = 0u;
  itemid_ = 0u;
  buildid_ = 0u;
  pos_ = 0u;
  level_ = 0u;
  usetime_ = 0u;
  clear_ = 0u;
  userprop_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

produceItem_t_produceItem::~produceItem_t_produceItem() {
  SharedDtor();
}

void produceItem_t_produceItem::SharedDtor() {
  if (userprop_ != &::google::protobuf::internal::kEmptyString) {
    delete userprop_;
  }
  if (this != default_instance_) {
  }
}

void produceItem_t_produceItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* produceItem_t_produceItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return produceItem_t_produceItem_descriptor_;
}

const produceItem_t_produceItem& produceItem_t_produceItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Production_2eproto();
  return *default_instance_;
}

produceItem_t_produceItem* produceItem_t_produceItem::default_instance_ = NULL;

produceItem_t_produceItem* produceItem_t_produceItem::New() const {
  return new produceItem_t_produceItem;
}

void produceItem_t_produceItem::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tbxid_ = 0u;
    id_ = 0u;
    itemid_ = 0u;
    buildid_ = 0u;
    pos_ = 0u;
    level_ = 0u;
    usetime_ = 0u;
    clear_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_userprop()) {
      if (userprop_ != &::google::protobuf::internal::kEmptyString) {
        userprop_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool produceItem_t_produceItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tbxid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbxid_)));
          set_has_tbxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_itemID;
        break;
      }

      // required uint32 itemID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_itemID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &itemid_)));
          set_has_itemid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_buildID;
        break;
      }

      // required uint32 buildID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buildID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildid_)));
          set_has_buildid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_pos;
        break;
      }

      // required uint32 pos = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pos:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
          set_has_pos();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_level;
        break;
      }

      // required uint32 level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_useTime;
        break;
      }

      // required uint32 useTime = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_useTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usetime_)));
          set_has_usetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_clear;
        break;
      }

      // required uint32 clear = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_clear:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &clear_)));
          set_has_clear();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_userProp;
        break;
      }

      // required string userProp = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_userProp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userprop()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->userprop().data(), this->userprop().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void produceItem_t_produceItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tbxid(), output);
  }

  // required uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // required uint32 itemID = 3;
  if (has_itemid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->itemid(), output);
  }

  // required uint32 buildID = 4;
  if (has_buildid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->buildid(), output);
  }

  // required uint32 pos = 5;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pos(), output);
  }

  // required uint32 level = 6;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  // required uint32 useTime = 7;
  if (has_usetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->usetime(), output);
  }

  // required uint32 clear = 8;
  if (has_clear()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->clear(), output);
  }

  // required string userProp = 9;
  if (has_userprop()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userprop().data(), this->userprop().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->userprop(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* produceItem_t_produceItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tbxid(), target);
  }

  // required uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // required uint32 itemID = 3;
  if (has_itemid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->itemid(), target);
  }

  // required uint32 buildID = 4;
  if (has_buildid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->buildid(), target);
  }

  // required uint32 pos = 5;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pos(), target);
  }

  // required uint32 level = 6;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  // required uint32 useTime = 7;
  if (has_usetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->usetime(), target);
  }

  // required uint32 clear = 8;
  if (has_clear()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->clear(), target);
  }

  // required string userProp = 9;
  if (has_userprop()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->userprop().data(), this->userprop().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->userprop(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int produceItem_t_produceItem::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tbxid = 1;
    if (has_tbxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tbxid());
    }

    // required uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 itemID = 3;
    if (has_itemid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->itemid());
    }

    // required uint32 buildID = 4;
    if (has_buildid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildid());
    }

    // required uint32 pos = 5;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // required uint32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 useTime = 7;
    if (has_usetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->usetime());
    }

    // required uint32 clear = 8;
    if (has_clear()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->clear());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string userProp = 9;
    if (has_userprop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->userprop());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void produceItem_t_produceItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const produceItem_t_produceItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const produceItem_t_produceItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void produceItem_t_produceItem::MergeFrom(const produceItem_t_produceItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tbxid()) {
      set_tbxid(from.tbxid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_itemid()) {
      set_itemid(from.itemid());
    }
    if (from.has_buildid()) {
      set_buildid(from.buildid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_usetime()) {
      set_usetime(from.usetime());
    }
    if (from.has_clear()) {
      set_clear(from.clear());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_userprop()) {
      set_userprop(from.userprop());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void produceItem_t_produceItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void produceItem_t_produceItem::CopyFrom(const produceItem_t_produceItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool produceItem_t_produceItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001ff) != 0x000001ff) return false;

  return true;
}

void produceItem_t_produceItem::Swap(produceItem_t_produceItem* other) {
  if (other != this) {
    std::swap(tbxid_, other->tbxid_);
    std::swap(id_, other->id_);
    std::swap(itemid_, other->itemid_);
    std::swap(buildid_, other->buildid_);
    std::swap(pos_, other->pos_);
    std::swap(level_, other->level_);
    std::swap(usetime_, other->usetime_);
    std::swap(clear_, other->clear_);
    std::swap(userprop_, other->userprop_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata produceItem_t_produceItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = produceItem_t_produceItem_descriptor_;
  metadata.reflection = produceItem_t_produceItem_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int produceItem::kDatasFieldNumber;
#endif  // !_MSC_VER

produceItem::produceItem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void produceItem::InitAsDefaultInstance() {
}

produceItem::produceItem(const produceItem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void produceItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

produceItem::~produceItem() {
  SharedDtor();
}

void produceItem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void produceItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* produceItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return produceItem_descriptor_;
}

const produceItem& produceItem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Production_2eproto();
  return *default_instance_;
}

produceItem* produceItem::default_instance_ = NULL;

produceItem* produceItem::New() const {
  return new produceItem;
}

void produceItem::Clear() {
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool produceItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.produceItem.t_produceItem datas = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_datas;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void produceItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .pb.produceItem.t_produceItem datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* produceItem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .pb.produceItem.t_produceItem datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int produceItem::ByteSize() const {
  int total_size = 0;

  // repeated .pb.produceItem.t_produceItem datas = 1;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void produceItem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const produceItem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const produceItem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void produceItem::MergeFrom(const produceItem& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void produceItem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void produceItem::CopyFrom(const produceItem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool produceItem::IsInitialized() const {

  for (int i = 0; i < datas_size(); i++) {
    if (!this->datas(i).IsInitialized()) return false;
  }
  return true;
}

void produceItem::Swap(produceItem* other) {
  if (other != this) {
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata produceItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = produceItem_descriptor_;
  metadata.reflection = produceItem_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
