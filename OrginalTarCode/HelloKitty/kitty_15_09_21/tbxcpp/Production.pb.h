// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Production.proto

#ifndef PROTOBUF_Production_2eproto__INCLUDED
#define PROTOBUF_Production_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace pb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Production_2eproto();
void protobuf_AssignDesc_Production_2eproto();
void protobuf_ShutdownFile_Production_2eproto();

class produceItem;
class produceItem_t_produceItem;

// ===================================================================

class produceItem_t_produceItem : public ::google::protobuf::Message {
 public:
  produceItem_t_produceItem();
  virtual ~produceItem_t_produceItem();

  produceItem_t_produceItem(const produceItem_t_produceItem& from);

  inline produceItem_t_produceItem& operator=(const produceItem_t_produceItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const produceItem_t_produceItem& default_instance();

  void Swap(produceItem_t_produceItem* other);

  // implements Message ----------------------------------------------

  produceItem_t_produceItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const produceItem_t_produceItem& from);
  void MergeFrom(const produceItem_t_produceItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 tbxid = 1;
  inline bool has_tbxid() const;
  inline void clear_tbxid();
  static const int kTbxidFieldNumber = 1;
  inline ::google::protobuf::uint32 tbxid() const;
  inline void set_tbxid(::google::protobuf::uint32 value);

  // required uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);

  // required uint32 itemID = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIDFieldNumber = 3;
  inline ::google::protobuf::uint32 itemid() const;
  inline void set_itemid(::google::protobuf::uint32 value);

  // required uint32 buildID = 4;
  inline bool has_buildid() const;
  inline void clear_buildid();
  static const int kBuildIDFieldNumber = 4;
  inline ::google::protobuf::uint32 buildid() const;
  inline void set_buildid(::google::protobuf::uint32 value);

  // required uint32 pos = 5;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 5;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);

  // required uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // required uint32 useTime = 7;
  inline bool has_usetime() const;
  inline void clear_usetime();
  static const int kUseTimeFieldNumber = 7;
  inline ::google::protobuf::uint32 usetime() const;
  inline void set_usetime(::google::protobuf::uint32 value);

  // required uint32 clear = 8;
  inline bool has_clear() const;
  inline void clear_clear();
  static const int kClearFieldNumber = 8;
  inline ::google::protobuf::uint32 clear() const;
  inline void set_clear(::google::protobuf::uint32 value);

  // required string userProp = 9;
  inline bool has_userprop() const;
  inline void clear_userprop();
  static const int kUserPropFieldNumber = 9;
  inline const ::std::string& userprop() const;
  inline void set_userprop(const ::std::string& value);
  inline void set_userprop(const char* value);
  inline void set_userprop(const char* value, size_t size);
  inline ::std::string* mutable_userprop();
  inline ::std::string* release_userprop();
  inline void set_allocated_userprop(::std::string* userprop);

  // @@protoc_insertion_point(class_scope:pb.produceItem.t_produceItem)
 private:
  inline void set_has_tbxid();
  inline void clear_has_tbxid();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_buildid();
  inline void clear_has_buildid();
  inline void set_has_pos();
  inline void clear_has_pos();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_usetime();
  inline void clear_has_usetime();
  inline void set_has_clear();
  inline void clear_has_clear();
  inline void set_has_userprop();
  inline void clear_has_userprop();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 tbxid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 buildid_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 usetime_;
  ::google::protobuf::uint32 clear_;
  ::std::string* userprop_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Production_2eproto();
  friend void protobuf_AssignDesc_Production_2eproto();
  friend void protobuf_ShutdownFile_Production_2eproto();

  void InitAsDefaultInstance();
  static produceItem_t_produceItem* default_instance_;
};
// -------------------------------------------------------------------

class produceItem : public ::google::protobuf::Message {
 public:
  produceItem();
  virtual ~produceItem();

  produceItem(const produceItem& from);

  inline produceItem& operator=(const produceItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const produceItem& default_instance();

  void Swap(produceItem* other);

  // implements Message ----------------------------------------------

  produceItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const produceItem& from);
  void MergeFrom(const produceItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef produceItem_t_produceItem t_produceItem;

  // accessors -------------------------------------------------------

  // repeated .pb.produceItem.t_produceItem datas = 1;
  inline int datas_size() const;
  inline void clear_datas();
  static const int kDatasFieldNumber = 1;
  inline const ::pb::produceItem_t_produceItem& datas(int index) const;
  inline ::pb::produceItem_t_produceItem* mutable_datas(int index);
  inline ::pb::produceItem_t_produceItem* add_datas();
  inline const ::google::protobuf::RepeatedPtrField< ::pb::produceItem_t_produceItem >&
      datas() const;
  inline ::google::protobuf::RepeatedPtrField< ::pb::produceItem_t_produceItem >*
      mutable_datas();

  // @@protoc_insertion_point(class_scope:pb.produceItem)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::pb::produceItem_t_produceItem > datas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Production_2eproto();
  friend void protobuf_AssignDesc_Production_2eproto();
  friend void protobuf_ShutdownFile_Production_2eproto();

  void InitAsDefaultInstance();
  static produceItem* default_instance_;
};
// ===================================================================


// ===================================================================

// produceItem_t_produceItem

// required uint32 tbxid = 1;
inline bool produceItem_t_produceItem::has_tbxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void produceItem_t_produceItem::set_has_tbxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void produceItem_t_produceItem::clear_has_tbxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void produceItem_t_produceItem::clear_tbxid() {
  tbxid_ = 0u;
  clear_has_tbxid();
}
inline ::google::protobuf::uint32 produceItem_t_produceItem::tbxid() const {
  return tbxid_;
}
inline void produceItem_t_produceItem::set_tbxid(::google::protobuf::uint32 value) {
  set_has_tbxid();
  tbxid_ = value;
}

// required uint32 id = 2;
inline bool produceItem_t_produceItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void produceItem_t_produceItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void produceItem_t_produceItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void produceItem_t_produceItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 produceItem_t_produceItem::id() const {
  return id_;
}
inline void produceItem_t_produceItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
}

// required uint32 itemID = 3;
inline bool produceItem_t_produceItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void produceItem_t_produceItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void produceItem_t_produceItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void produceItem_t_produceItem::clear_itemid() {
  itemid_ = 0u;
  clear_has_itemid();
}
inline ::google::protobuf::uint32 produceItem_t_produceItem::itemid() const {
  return itemid_;
}
inline void produceItem_t_produceItem::set_itemid(::google::protobuf::uint32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required uint32 buildID = 4;
inline bool produceItem_t_produceItem::has_buildid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void produceItem_t_produceItem::set_has_buildid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void produceItem_t_produceItem::clear_has_buildid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void produceItem_t_produceItem::clear_buildid() {
  buildid_ = 0u;
  clear_has_buildid();
}
inline ::google::protobuf::uint32 produceItem_t_produceItem::buildid() const {
  return buildid_;
}
inline void produceItem_t_produceItem::set_buildid(::google::protobuf::uint32 value) {
  set_has_buildid();
  buildid_ = value;
}

// required uint32 pos = 5;
inline bool produceItem_t_produceItem::has_pos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void produceItem_t_produceItem::set_has_pos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void produceItem_t_produceItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void produceItem_t_produceItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 produceItem_t_produceItem::pos() const {
  return pos_;
}
inline void produceItem_t_produceItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
}

// required uint32 level = 6;
inline bool produceItem_t_produceItem::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void produceItem_t_produceItem::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void produceItem_t_produceItem::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void produceItem_t_produceItem::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 produceItem_t_produceItem::level() const {
  return level_;
}
inline void produceItem_t_produceItem::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
}

// required uint32 useTime = 7;
inline bool produceItem_t_produceItem::has_usetime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void produceItem_t_produceItem::set_has_usetime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void produceItem_t_produceItem::clear_has_usetime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void produceItem_t_produceItem::clear_usetime() {
  usetime_ = 0u;
  clear_has_usetime();
}
inline ::google::protobuf::uint32 produceItem_t_produceItem::usetime() const {
  return usetime_;
}
inline void produceItem_t_produceItem::set_usetime(::google::protobuf::uint32 value) {
  set_has_usetime();
  usetime_ = value;
}

// required uint32 clear = 8;
inline bool produceItem_t_produceItem::has_clear() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void produceItem_t_produceItem::set_has_clear() {
  _has_bits_[0] |= 0x00000080u;
}
inline void produceItem_t_produceItem::clear_has_clear() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void produceItem_t_produceItem::clear_clear() {
  clear_ = 0u;
  clear_has_clear();
}
inline ::google::protobuf::uint32 produceItem_t_produceItem::clear() const {
  return clear_;
}
inline void produceItem_t_produceItem::set_clear(::google::protobuf::uint32 value) {
  set_has_clear();
  clear_ = value;
}

// required string userProp = 9;
inline bool produceItem_t_produceItem::has_userprop() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void produceItem_t_produceItem::set_has_userprop() {
  _has_bits_[0] |= 0x00000100u;
}
inline void produceItem_t_produceItem::clear_has_userprop() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void produceItem_t_produceItem::clear_userprop() {
  if (userprop_ != &::google::protobuf::internal::kEmptyString) {
    userprop_->clear();
  }
  clear_has_userprop();
}
inline const ::std::string& produceItem_t_produceItem::userprop() const {
  return *userprop_;
}
inline void produceItem_t_produceItem::set_userprop(const ::std::string& value) {
  set_has_userprop();
  if (userprop_ == &::google::protobuf::internal::kEmptyString) {
    userprop_ = new ::std::string;
  }
  userprop_->assign(value);
}
inline void produceItem_t_produceItem::set_userprop(const char* value) {
  set_has_userprop();
  if (userprop_ == &::google::protobuf::internal::kEmptyString) {
    userprop_ = new ::std::string;
  }
  userprop_->assign(value);
}
inline void produceItem_t_produceItem::set_userprop(const char* value, size_t size) {
  set_has_userprop();
  if (userprop_ == &::google::protobuf::internal::kEmptyString) {
    userprop_ = new ::std::string;
  }
  userprop_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* produceItem_t_produceItem::mutable_userprop() {
  set_has_userprop();
  if (userprop_ == &::google::protobuf::internal::kEmptyString) {
    userprop_ = new ::std::string;
  }
  return userprop_;
}
inline ::std::string* produceItem_t_produceItem::release_userprop() {
  clear_has_userprop();
  if (userprop_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = userprop_;
    userprop_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void produceItem_t_produceItem::set_allocated_userprop(::std::string* userprop) {
  if (userprop_ != &::google::protobuf::internal::kEmptyString) {
    delete userprop_;
  }
  if (userprop) {
    set_has_userprop();
    userprop_ = userprop;
  } else {
    clear_has_userprop();
    userprop_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// produceItem

// repeated .pb.produceItem.t_produceItem datas = 1;
inline int produceItem::datas_size() const {
  return datas_.size();
}
inline void produceItem::clear_datas() {
  datas_.Clear();
}
inline const ::pb::produceItem_t_produceItem& produceItem::datas(int index) const {
  return datas_.Get(index);
}
inline ::pb::produceItem_t_produceItem* produceItem::mutable_datas(int index) {
  return datas_.Mutable(index);
}
inline ::pb::produceItem_t_produceItem* produceItem::add_datas() {
  return datas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::produceItem_t_produceItem >&
produceItem::datas() const {
  return datas_;
}
inline ::google::protobuf::RepeatedPtrField< ::pb::produceItem_t_produceItem >*
produceItem::mutable_datas() {
  return &datas_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Production_2eproto__INCLUDED
