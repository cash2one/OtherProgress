// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Building.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Building.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* building_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  building_reflection_ = NULL;
const ::google::protobuf::Descriptor* building_t_building_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  building_t_building_reflection_ = NULL;
const ::google::protobuf::Descriptor* newRoleAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  newRoleAttr_reflection_ = NULL;
const ::google::protobuf::Descriptor* newRoleAttr_t_newRoleAttr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  newRoleAttr_t_newRoleAttr_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Building_2eproto() {
  protobuf_AddDesc_Building_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Building.proto");
  GOOGLE_CHECK(file != NULL);
  building_descriptor_ = file->message_type(0);
  static const int building_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building, datas_),
  };
  building_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      building_descriptor_,
      building::default_instance_,
      building_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(building));
  building_t_building_descriptor_ = building_descriptor_->nested_type(0);
  static const int building_t_building_offsets_[29] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, tbxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, dependid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, maxcap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, guestproduce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, buildgridinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, infotype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, buildspineres_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, buildkind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, premisebuild_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, effectpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, effectrange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, roadactivetype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, guestreduce_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, happyincrease_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, selltime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, merriness_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, requiregold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, requireitem_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, goldoutput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, goldoutputmax_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, maketime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, effectval_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, personrequire_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, iconpic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, description_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, usecard_),
  };
  building_t_building_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      building_t_building_descriptor_,
      building_t_building::default_instance_,
      building_t_building_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(building_t_building, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(building_t_building));
  newRoleAttr_descriptor_ = file->message_type(1);
  static const int newRoleAttr_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr, datas_),
  };
  newRoleAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      newRoleAttr_descriptor_,
      newRoleAttr::default_instance_,
      newRoleAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(newRoleAttr));
  newRoleAttr_t_newRoleAttr_descriptor_ = newRoleAttr_descriptor_->nested_type(0);
  static const int newRoleAttr_t_newRoleAttr_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, tbxid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, initbuild_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, inititem_),
  };
  newRoleAttr_t_newRoleAttr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      newRoleAttr_t_newRoleAttr_descriptor_,
      newRoleAttr_t_newRoleAttr::default_instance_,
      newRoleAttr_t_newRoleAttr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(newRoleAttr_t_newRoleAttr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(newRoleAttr_t_newRoleAttr));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Building_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    building_descriptor_, &building::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    building_t_building_descriptor_, &building_t_building::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    newRoleAttr_descriptor_, &newRoleAttr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    newRoleAttr_t_newRoleAttr_descriptor_, &newRoleAttr_t_newRoleAttr::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Building_2eproto() {
  delete building::default_instance_;
  delete building_reflection_;
  delete building_t_building::default_instance_;
  delete building_t_building_reflection_;
  delete newRoleAttr::default_instance_;
  delete newRoleAttr_reflection_;
  delete newRoleAttr_t_newRoleAttr::default_instance_;
  delete newRoleAttr_t_newRoleAttr_reflection_;
}

void protobuf_AddDesc_Building_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016Building.proto\022\002pb\"\365\004\n\010building\022&\n\005dat"
    "as\030\001 \003(\0132\027.pb.building.t_building\032\300\004\n\nt_"
    "building\022\r\n\005tbxid\030\001 \002(\r\022\020\n\010dependID\030\002 \002("
    "\r\022\014\n\004name\030\003 \002(\t\022\r\n\005level\030\004 \002(\r\022\016\n\006MaxCap"
    "\030\005 \002(\r\022\024\n\014GuestProduce\030\006 \002(\r\022\025\n\rbuildGri"
    "dInfo\030\007 \002(\t\022\020\n\010infoType\030\010 \002(\r\022\025\n\rbuildSp"
    "ineRes\030\t \002(\t\022\021\n\tbuildKind\030\n \002(\r\022\024\n\014premi"
    "seBuild\030\013 \002(\t\022\021\n\teffectPic\030\014 \002(\t\022\023\n\013effe"
    "ctRange\030\r \002(\t\022\026\n\016RoadActiveType\030\016 \002(\r\022\023\n"
    "\013guestReduce\030\017 \002(\r\022\025\n\rhappyIncrease\030\020 \002("
    "\001\022\020\n\010sellTime\030\021 \002(\r\022\021\n\tmerriness\030\022 \002(\r\022\023"
    "\n\013requireGold\030\023 \002(\r\022\023\n\013requireItem\030\024 \002(\t"
    "\022\022\n\nGoldOutput\030\025 \002(\r\022\025\n\rGoldOutputMax\030\026 "
    "\002(\r\022\020\n\010makeTime\030\027 \002(\r\022\014\n\004time\030\030 \002(\r\022\021\n\te"
    "ffectval\030\031 \002(\t\022\025\n\rpersonRequire\030\032 \002(\t\022\017\n"
    "\007iconPic\030\033 \002(\t\022\023\n\013description\030\034 \002(\t\022\017\n\007u"
    "secard\030\035 \002(\t\"\233\001\n\013newRoleAttr\022,\n\005datas\030\001 "
    "\003(\0132\035.pb.newRoleAttr.t_newRoleAttr\032^\n\rt_"
    "newRoleAttr\022\r\n\005tbxid\030\001 \002(\r\022\n\n\002id\030\002 \002(\r\022\r"
    "\n\005level\030\003 \002(\r\022\021\n\tinitbuild\030\004 \002(\t\022\020\n\010init"
    "item\030\005 \002(\t", 810);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Building.proto", &protobuf_RegisterTypes);
  building::default_instance_ = new building();
  building_t_building::default_instance_ = new building_t_building();
  newRoleAttr::default_instance_ = new newRoleAttr();
  newRoleAttr_t_newRoleAttr::default_instance_ = new newRoleAttr_t_newRoleAttr();
  building::default_instance_->InitAsDefaultInstance();
  building_t_building::default_instance_->InitAsDefaultInstance();
  newRoleAttr::default_instance_->InitAsDefaultInstance();
  newRoleAttr_t_newRoleAttr::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Building_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Building_2eproto {
  StaticDescriptorInitializer_Building_2eproto() {
    protobuf_AddDesc_Building_2eproto();
  }
} static_descriptor_initializer_Building_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int building_t_building::kTbxidFieldNumber;
const int building_t_building::kDependIDFieldNumber;
const int building_t_building::kNameFieldNumber;
const int building_t_building::kLevelFieldNumber;
const int building_t_building::kMaxCapFieldNumber;
const int building_t_building::kGuestProduceFieldNumber;
const int building_t_building::kBuildGridInfoFieldNumber;
const int building_t_building::kInfoTypeFieldNumber;
const int building_t_building::kBuildSpineResFieldNumber;
const int building_t_building::kBuildKindFieldNumber;
const int building_t_building::kPremiseBuildFieldNumber;
const int building_t_building::kEffectPicFieldNumber;
const int building_t_building::kEffectRangeFieldNumber;
const int building_t_building::kRoadActiveTypeFieldNumber;
const int building_t_building::kGuestReduceFieldNumber;
const int building_t_building::kHappyIncreaseFieldNumber;
const int building_t_building::kSellTimeFieldNumber;
const int building_t_building::kMerrinessFieldNumber;
const int building_t_building::kRequireGoldFieldNumber;
const int building_t_building::kRequireItemFieldNumber;
const int building_t_building::kGoldOutputFieldNumber;
const int building_t_building::kGoldOutputMaxFieldNumber;
const int building_t_building::kMakeTimeFieldNumber;
const int building_t_building::kTimeFieldNumber;
const int building_t_building::kEffectvalFieldNumber;
const int building_t_building::kPersonRequireFieldNumber;
const int building_t_building::kIconPicFieldNumber;
const int building_t_building::kDescriptionFieldNumber;
const int building_t_building::kUsecardFieldNumber;
#endif  // !_MSC_VER

building_t_building::building_t_building()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void building_t_building::InitAsDefaultInstance() {
}

building_t_building::building_t_building(const building_t_building& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void building_t_building::SharedCtor() {
  _cached_size_ = 0;
  tbxid_ = 0u;
  dependid_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0u;
  maxcap_ = 0u;
  guestproduce_ = 0u;
  buildgridinfo_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  infotype_ = 0u;
  buildspineres_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  buildkind_ = 0u;
  premisebuild_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  effectpic_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  effectrange_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  roadactivetype_ = 0u;
  guestreduce_ = 0u;
  happyincrease_ = 0;
  selltime_ = 0u;
  merriness_ = 0u;
  requiregold_ = 0u;
  requireitem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  goldoutput_ = 0u;
  goldoutputmax_ = 0u;
  maketime_ = 0u;
  time_ = 0u;
  effectval_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  personrequire_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  iconpic_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  usecard_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

building_t_building::~building_t_building() {
  SharedDtor();
}

void building_t_building::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (buildgridinfo_ != &::google::protobuf::internal::kEmptyString) {
    delete buildgridinfo_;
  }
  if (buildspineres_ != &::google::protobuf::internal::kEmptyString) {
    delete buildspineres_;
  }
  if (premisebuild_ != &::google::protobuf::internal::kEmptyString) {
    delete premisebuild_;
  }
  if (effectpic_ != &::google::protobuf::internal::kEmptyString) {
    delete effectpic_;
  }
  if (effectrange_ != &::google::protobuf::internal::kEmptyString) {
    delete effectrange_;
  }
  if (requireitem_ != &::google::protobuf::internal::kEmptyString) {
    delete requireitem_;
  }
  if (effectval_ != &::google::protobuf::internal::kEmptyString) {
    delete effectval_;
  }
  if (personrequire_ != &::google::protobuf::internal::kEmptyString) {
    delete personrequire_;
  }
  if (iconpic_ != &::google::protobuf::internal::kEmptyString) {
    delete iconpic_;
  }
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (usecard_ != &::google::protobuf::internal::kEmptyString) {
    delete usecard_;
  }
  if (this != default_instance_) {
  }
}

void building_t_building::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* building_t_building::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return building_t_building_descriptor_;
}

const building_t_building& building_t_building::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Building_2eproto();
  return *default_instance_;
}

building_t_building* building_t_building::default_instance_ = NULL;

building_t_building* building_t_building::New() const {
  return new building_t_building;
}

void building_t_building::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tbxid_ = 0u;
    dependid_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    level_ = 0u;
    maxcap_ = 0u;
    guestproduce_ = 0u;
    if (has_buildgridinfo()) {
      if (buildgridinfo_ != &::google::protobuf::internal::kEmptyString) {
        buildgridinfo_->clear();
      }
    }
    infotype_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_buildspineres()) {
      if (buildspineres_ != &::google::protobuf::internal::kEmptyString) {
        buildspineres_->clear();
      }
    }
    buildkind_ = 0u;
    if (has_premisebuild()) {
      if (premisebuild_ != &::google::protobuf::internal::kEmptyString) {
        premisebuild_->clear();
      }
    }
    if (has_effectpic()) {
      if (effectpic_ != &::google::protobuf::internal::kEmptyString) {
        effectpic_->clear();
      }
    }
    if (has_effectrange()) {
      if (effectrange_ != &::google::protobuf::internal::kEmptyString) {
        effectrange_->clear();
      }
    }
    roadactivetype_ = 0u;
    guestreduce_ = 0u;
    happyincrease_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    selltime_ = 0u;
    merriness_ = 0u;
    requiregold_ = 0u;
    if (has_requireitem()) {
      if (requireitem_ != &::google::protobuf::internal::kEmptyString) {
        requireitem_->clear();
      }
    }
    goldoutput_ = 0u;
    goldoutputmax_ = 0u;
    maketime_ = 0u;
    time_ = 0u;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (has_effectval()) {
      if (effectval_ != &::google::protobuf::internal::kEmptyString) {
        effectval_->clear();
      }
    }
    if (has_personrequire()) {
      if (personrequire_ != &::google::protobuf::internal::kEmptyString) {
        personrequire_->clear();
      }
    }
    if (has_iconpic()) {
      if (iconpic_ != &::google::protobuf::internal::kEmptyString) {
        iconpic_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::kEmptyString) {
        description_->clear();
      }
    }
    if (has_usecard()) {
      if (usecard_ != &::google::protobuf::internal::kEmptyString) {
        usecard_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool building_t_building::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tbxid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbxid_)));
          set_has_tbxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_dependID;
        break;
      }

      // required uint32 dependID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dependID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dependid_)));
          set_has_dependid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // required string name = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_level;
        break;
      }

      // required uint32 level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_MaxCap;
        break;
      }

      // required uint32 MaxCap = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_MaxCap:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxcap_)));
          set_has_maxcap();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_GuestProduce;
        break;
      }

      // required uint32 GuestProduce = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GuestProduce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guestproduce_)));
          set_has_guestproduce();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_buildGridInfo;
        break;
      }

      // required string buildGridInfo = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buildGridInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buildgridinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buildgridinfo().data(), this->buildgridinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_infoType;
        break;
      }

      // required uint32 infoType = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_infoType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &infotype_)));
          set_has_infotype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_buildSpineRes;
        break;
      }

      // required string buildSpineRes = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buildSpineRes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buildspineres()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->buildspineres().data(), this->buildspineres().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_buildKind;
        break;
      }

      // required uint32 buildKind = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_buildKind:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &buildkind_)));
          set_has_buildkind();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_premiseBuild;
        break;
      }

      // required string premiseBuild = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_premiseBuild:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_premisebuild()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->premisebuild().data(), this->premisebuild().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_effectPic;
        break;
      }

      // required string effectPic = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effectPic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectpic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effectpic().data(), this->effectpic().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_effectRange;
        break;
      }

      // required string effectRange = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effectRange:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectrange()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effectrange().data(), this->effectrange().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_RoadActiveType;
        break;
      }

      // required uint32 RoadActiveType = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_RoadActiveType:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roadactivetype_)));
          set_has_roadactivetype();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_guestReduce;
        break;
      }

      // required uint32 guestReduce = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guestReduce:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &guestreduce_)));
          set_has_guestreduce();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(129)) goto parse_happyIncrease;
        break;
      }

      // required double happyIncrease = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_happyIncrease:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &happyincrease_)));
          set_has_happyincrease();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_sellTime;
        break;
      }

      // required uint32 sellTime = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sellTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &selltime_)));
          set_has_selltime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_merriness;
        break;
      }

      // required uint32 merriness = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_merriness:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &merriness_)));
          set_has_merriness();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_requireGold;
        break;
      }

      // required uint32 requireGold = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_requireGold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requiregold_)));
          set_has_requiregold();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_requireItem;
        break;
      }

      // required string requireItem = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_requireItem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requireitem()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->requireitem().data(), this->requireitem().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_GoldOutput;
        break;
      }

      // required uint32 GoldOutput = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GoldOutput:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldoutput_)));
          set_has_goldoutput();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_GoldOutputMax;
        break;
      }

      // required uint32 GoldOutputMax = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_GoldOutputMax:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &goldoutputmax_)));
          set_has_goldoutputmax();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_makeTime;
        break;
      }

      // required uint32 makeTime = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_makeTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maketime_)));
          set_has_maketime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_time;
        break;
      }

      // required uint32 time = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_effectval;
        break;
      }

      // required string effectval = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_effectval:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_effectval()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->effectval().data(), this->effectval().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_personRequire;
        break;
      }

      // required string personRequire = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_personRequire:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_personrequire()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->personrequire().data(), this->personrequire().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_iconPic;
        break;
      }

      // required string iconPic = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_iconPic:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconpic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->iconpic().data(), this->iconpic().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_description;
        break;
      }

      // required string description = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_usecard;
        break;
      }

      // required string usecard = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_usecard:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_usecard()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->usecard().data(), this->usecard().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void building_t_building::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tbxid(), output);
  }

  // required uint32 dependID = 2;
  if (has_dependid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dependid(), output);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->name(), output);
  }

  // required uint32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level(), output);
  }

  // required uint32 MaxCap = 5;
  if (has_maxcap()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->maxcap(), output);
  }

  // required uint32 GuestProduce = 6;
  if (has_guestproduce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->guestproduce(), output);
  }

  // required string buildGridInfo = 7;
  if (has_buildgridinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildgridinfo().data(), this->buildgridinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->buildgridinfo(), output);
  }

  // required uint32 infoType = 8;
  if (has_infotype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->infotype(), output);
  }

  // required string buildSpineRes = 9;
  if (has_buildspineres()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildspineres().data(), this->buildspineres().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->buildspineres(), output);
  }

  // required uint32 buildKind = 10;
  if (has_buildkind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->buildkind(), output);
  }

  // required string premiseBuild = 11;
  if (has_premisebuild()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->premisebuild().data(), this->premisebuild().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->premisebuild(), output);
  }

  // required string effectPic = 12;
  if (has_effectpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectpic().data(), this->effectpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->effectpic(), output);
  }

  // required string effectRange = 13;
  if (has_effectrange()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectrange().data(), this->effectrange().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->effectrange(), output);
  }

  // required uint32 RoadActiveType = 14;
  if (has_roadactivetype()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->roadactivetype(), output);
  }

  // required uint32 guestReduce = 15;
  if (has_guestreduce()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->guestreduce(), output);
  }

  // required double happyIncrease = 16;
  if (has_happyincrease()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->happyincrease(), output);
  }

  // required uint32 sellTime = 17;
  if (has_selltime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->selltime(), output);
  }

  // required uint32 merriness = 18;
  if (has_merriness()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->merriness(), output);
  }

  // required uint32 requireGold = 19;
  if (has_requiregold()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->requiregold(), output);
  }

  // required string requireItem = 20;
  if (has_requireitem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->requireitem().data(), this->requireitem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->requireitem(), output);
  }

  // required uint32 GoldOutput = 21;
  if (has_goldoutput()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->goldoutput(), output);
  }

  // required uint32 GoldOutputMax = 22;
  if (has_goldoutputmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->goldoutputmax(), output);
  }

  // required uint32 makeTime = 23;
  if (has_maketime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->maketime(), output);
  }

  // required uint32 time = 24;
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->time(), output);
  }

  // required string effectval = 25;
  if (has_effectval()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectval().data(), this->effectval().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      25, this->effectval(), output);
  }

  // required string personRequire = 26;
  if (has_personrequire()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->personrequire().data(), this->personrequire().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      26, this->personrequire(), output);
  }

  // required string iconPic = 27;
  if (has_iconpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconpic().data(), this->iconpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      27, this->iconpic(), output);
  }

  // required string description = 28;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      28, this->description(), output);
  }

  // required string usecard = 29;
  if (has_usecard()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->usecard().data(), this->usecard().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      29, this->usecard(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* building_t_building::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tbxid(), target);
  }

  // required uint32 dependID = 2;
  if (has_dependid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dependid(), target);
  }

  // required string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // required uint32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level(), target);
  }

  // required uint32 MaxCap = 5;
  if (has_maxcap()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->maxcap(), target);
  }

  // required uint32 GuestProduce = 6;
  if (has_guestproduce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->guestproduce(), target);
  }

  // required string buildGridInfo = 7;
  if (has_buildgridinfo()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildgridinfo().data(), this->buildgridinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->buildgridinfo(), target);
  }

  // required uint32 infoType = 8;
  if (has_infotype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->infotype(), target);
  }

  // required string buildSpineRes = 9;
  if (has_buildspineres()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->buildspineres().data(), this->buildspineres().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->buildspineres(), target);
  }

  // required uint32 buildKind = 10;
  if (has_buildkind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->buildkind(), target);
  }

  // required string premiseBuild = 11;
  if (has_premisebuild()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->premisebuild().data(), this->premisebuild().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->premisebuild(), target);
  }

  // required string effectPic = 12;
  if (has_effectpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectpic().data(), this->effectpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->effectpic(), target);
  }

  // required string effectRange = 13;
  if (has_effectrange()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectrange().data(), this->effectrange().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->effectrange(), target);
  }

  // required uint32 RoadActiveType = 14;
  if (has_roadactivetype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->roadactivetype(), target);
  }

  // required uint32 guestReduce = 15;
  if (has_guestreduce()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->guestreduce(), target);
  }

  // required double happyIncrease = 16;
  if (has_happyincrease()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->happyincrease(), target);
  }

  // required uint32 sellTime = 17;
  if (has_selltime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->selltime(), target);
  }

  // required uint32 merriness = 18;
  if (has_merriness()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->merriness(), target);
  }

  // required uint32 requireGold = 19;
  if (has_requiregold()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->requiregold(), target);
  }

  // required string requireItem = 20;
  if (has_requireitem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->requireitem().data(), this->requireitem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->requireitem(), target);
  }

  // required uint32 GoldOutput = 21;
  if (has_goldoutput()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->goldoutput(), target);
  }

  // required uint32 GoldOutputMax = 22;
  if (has_goldoutputmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(22, this->goldoutputmax(), target);
  }

  // required uint32 makeTime = 23;
  if (has_maketime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(23, this->maketime(), target);
  }

  // required uint32 time = 24;
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->time(), target);
  }

  // required string effectval = 25;
  if (has_effectval()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->effectval().data(), this->effectval().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->effectval(), target);
  }

  // required string personRequire = 26;
  if (has_personrequire()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->personrequire().data(), this->personrequire().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->personrequire(), target);
  }

  // required string iconPic = 27;
  if (has_iconpic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->iconpic().data(), this->iconpic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        27, this->iconpic(), target);
  }

  // required string description = 28;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->description(), target);
  }

  // required string usecard = 29;
  if (has_usecard()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->usecard().data(), this->usecard().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->usecard(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int building_t_building::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tbxid = 1;
    if (has_tbxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tbxid());
    }

    // required uint32 dependID = 2;
    if (has_dependid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->dependid());
    }

    // required string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required uint32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required uint32 MaxCap = 5;
    if (has_maxcap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maxcap());
    }

    // required uint32 GuestProduce = 6;
    if (has_guestproduce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guestproduce());
    }

    // required string buildGridInfo = 7;
    if (has_buildgridinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buildgridinfo());
    }

    // required uint32 infoType = 8;
    if (has_infotype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->infotype());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // required string buildSpineRes = 9;
    if (has_buildspineres()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->buildspineres());
    }

    // required uint32 buildKind = 10;
    if (has_buildkind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->buildkind());
    }

    // required string premiseBuild = 11;
    if (has_premisebuild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->premisebuild());
    }

    // required string effectPic = 12;
    if (has_effectpic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectpic());
    }

    // required string effectRange = 13;
    if (has_effectrange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectrange());
    }

    // required uint32 RoadActiveType = 14;
    if (has_roadactivetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roadactivetype());
    }

    // required uint32 guestReduce = 15;
    if (has_guestreduce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->guestreduce());
    }

    // required double happyIncrease = 16;
    if (has_happyincrease()) {
      total_size += 2 + 8;
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // required uint32 sellTime = 17;
    if (has_selltime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->selltime());
    }

    // required uint32 merriness = 18;
    if (has_merriness()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->merriness());
    }

    // required uint32 requireGold = 19;
    if (has_requiregold()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->requiregold());
    }

    // required string requireItem = 20;
    if (has_requireitem()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requireitem());
    }

    // required uint32 GoldOutput = 21;
    if (has_goldoutput()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goldoutput());
    }

    // required uint32 GoldOutputMax = 22;
    if (has_goldoutputmax()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->goldoutputmax());
    }

    // required uint32 makeTime = 23;
    if (has_maketime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->maketime());
    }

    // required uint32 time = 24;
    if (has_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // required string effectval = 25;
    if (has_effectval()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->effectval());
    }

    // required string personRequire = 26;
    if (has_personrequire()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->personrequire());
    }

    // required string iconPic = 27;
    if (has_iconpic()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconpic());
    }

    // required string description = 28;
    if (has_description()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // required string usecard = 29;
    if (has_usecard()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->usecard());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void building_t_building::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const building_t_building* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const building_t_building*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void building_t_building::MergeFrom(const building_t_building& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tbxid()) {
      set_tbxid(from.tbxid());
    }
    if (from.has_dependid()) {
      set_dependid(from.dependid());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_maxcap()) {
      set_maxcap(from.maxcap());
    }
    if (from.has_guestproduce()) {
      set_guestproduce(from.guestproduce());
    }
    if (from.has_buildgridinfo()) {
      set_buildgridinfo(from.buildgridinfo());
    }
    if (from.has_infotype()) {
      set_infotype(from.infotype());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_buildspineres()) {
      set_buildspineres(from.buildspineres());
    }
    if (from.has_buildkind()) {
      set_buildkind(from.buildkind());
    }
    if (from.has_premisebuild()) {
      set_premisebuild(from.premisebuild());
    }
    if (from.has_effectpic()) {
      set_effectpic(from.effectpic());
    }
    if (from.has_effectrange()) {
      set_effectrange(from.effectrange());
    }
    if (from.has_roadactivetype()) {
      set_roadactivetype(from.roadactivetype());
    }
    if (from.has_guestreduce()) {
      set_guestreduce(from.guestreduce());
    }
    if (from.has_happyincrease()) {
      set_happyincrease(from.happyincrease());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_selltime()) {
      set_selltime(from.selltime());
    }
    if (from.has_merriness()) {
      set_merriness(from.merriness());
    }
    if (from.has_requiregold()) {
      set_requiregold(from.requiregold());
    }
    if (from.has_requireitem()) {
      set_requireitem(from.requireitem());
    }
    if (from.has_goldoutput()) {
      set_goldoutput(from.goldoutput());
    }
    if (from.has_goldoutputmax()) {
      set_goldoutputmax(from.goldoutputmax());
    }
    if (from.has_maketime()) {
      set_maketime(from.maketime());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_effectval()) {
      set_effectval(from.effectval());
    }
    if (from.has_personrequire()) {
      set_personrequire(from.personrequire());
    }
    if (from.has_iconpic()) {
      set_iconpic(from.iconpic());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_usecard()) {
      set_usecard(from.usecard());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void building_t_building::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void building_t_building::CopyFrom(const building_t_building& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool building_t_building::IsInitialized() const {
  if ((_has_bits_[0] & 0x1fffffff) != 0x1fffffff) return false;

  return true;
}

void building_t_building::Swap(building_t_building* other) {
  if (other != this) {
    std::swap(tbxid_, other->tbxid_);
    std::swap(dependid_, other->dependid_);
    std::swap(name_, other->name_);
    std::swap(level_, other->level_);
    std::swap(maxcap_, other->maxcap_);
    std::swap(guestproduce_, other->guestproduce_);
    std::swap(buildgridinfo_, other->buildgridinfo_);
    std::swap(infotype_, other->infotype_);
    std::swap(buildspineres_, other->buildspineres_);
    std::swap(buildkind_, other->buildkind_);
    std::swap(premisebuild_, other->premisebuild_);
    std::swap(effectpic_, other->effectpic_);
    std::swap(effectrange_, other->effectrange_);
    std::swap(roadactivetype_, other->roadactivetype_);
    std::swap(guestreduce_, other->guestreduce_);
    std::swap(happyincrease_, other->happyincrease_);
    std::swap(selltime_, other->selltime_);
    std::swap(merriness_, other->merriness_);
    std::swap(requiregold_, other->requiregold_);
    std::swap(requireitem_, other->requireitem_);
    std::swap(goldoutput_, other->goldoutput_);
    std::swap(goldoutputmax_, other->goldoutputmax_);
    std::swap(maketime_, other->maketime_);
    std::swap(time_, other->time_);
    std::swap(effectval_, other->effectval_);
    std::swap(personrequire_, other->personrequire_);
    std::swap(iconpic_, other->iconpic_);
    std::swap(description_, other->description_);
    std::swap(usecard_, other->usecard_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata building_t_building::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = building_t_building_descriptor_;
  metadata.reflection = building_t_building_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int building::kDatasFieldNumber;
#endif  // !_MSC_VER

building::building()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void building::InitAsDefaultInstance() {
}

building::building(const building& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void building::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

building::~building() {
  SharedDtor();
}

void building::SharedDtor() {
  if (this != default_instance_) {
  }
}

void building::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* building::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return building_descriptor_;
}

const building& building::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Building_2eproto();
  return *default_instance_;
}

building* building::default_instance_ = NULL;

building* building::New() const {
  return new building;
}

void building::Clear() {
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool building::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.building.t_building datas = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_datas;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void building::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .pb.building.t_building datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* building::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .pb.building.t_building datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int building::ByteSize() const {
  int total_size = 0;

  // repeated .pb.building.t_building datas = 1;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void building::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const building* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const building*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void building::MergeFrom(const building& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void building::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void building::CopyFrom(const building& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool building::IsInitialized() const {

  for (int i = 0; i < datas_size(); i++) {
    if (!this->datas(i).IsInitialized()) return false;
  }
  return true;
}

void building::Swap(building* other) {
  if (other != this) {
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata building::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = building_descriptor_;
  metadata.reflection = building_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int newRoleAttr_t_newRoleAttr::kTbxidFieldNumber;
const int newRoleAttr_t_newRoleAttr::kIdFieldNumber;
const int newRoleAttr_t_newRoleAttr::kLevelFieldNumber;
const int newRoleAttr_t_newRoleAttr::kInitbuildFieldNumber;
const int newRoleAttr_t_newRoleAttr::kInititemFieldNumber;
#endif  // !_MSC_VER

newRoleAttr_t_newRoleAttr::newRoleAttr_t_newRoleAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void newRoleAttr_t_newRoleAttr::InitAsDefaultInstance() {
}

newRoleAttr_t_newRoleAttr::newRoleAttr_t_newRoleAttr(const newRoleAttr_t_newRoleAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void newRoleAttr_t_newRoleAttr::SharedCtor() {
  _cached_size_ = 0;
  tbxid_ = 0u;
  id_ = 0u;
  level_ = 0u;
  initbuild_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  inititem_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

newRoleAttr_t_newRoleAttr::~newRoleAttr_t_newRoleAttr() {
  SharedDtor();
}

void newRoleAttr_t_newRoleAttr::SharedDtor() {
  if (initbuild_ != &::google::protobuf::internal::kEmptyString) {
    delete initbuild_;
  }
  if (inititem_ != &::google::protobuf::internal::kEmptyString) {
    delete inititem_;
  }
  if (this != default_instance_) {
  }
}

void newRoleAttr_t_newRoleAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* newRoleAttr_t_newRoleAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return newRoleAttr_t_newRoleAttr_descriptor_;
}

const newRoleAttr_t_newRoleAttr& newRoleAttr_t_newRoleAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Building_2eproto();
  return *default_instance_;
}

newRoleAttr_t_newRoleAttr* newRoleAttr_t_newRoleAttr::default_instance_ = NULL;

newRoleAttr_t_newRoleAttr* newRoleAttr_t_newRoleAttr::New() const {
  return new newRoleAttr_t_newRoleAttr;
}

void newRoleAttr_t_newRoleAttr::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    tbxid_ = 0u;
    id_ = 0u;
    level_ = 0u;
    if (has_initbuild()) {
      if (initbuild_ != &::google::protobuf::internal::kEmptyString) {
        initbuild_->clear();
      }
    }
    if (has_inititem()) {
      if (inititem_ != &::google::protobuf::internal::kEmptyString) {
        inititem_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool newRoleAttr_t_newRoleAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 tbxid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &tbxid_)));
          set_has_tbxid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required uint32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_initbuild;
        break;
      }

      // required string initbuild = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_initbuild:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initbuild()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->initbuild().data(), this->initbuild().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_inititem;
        break;
      }

      // required string inititem = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inititem:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inititem()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->inititem().data(), this->inititem().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void newRoleAttr_t_newRoleAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->tbxid(), output);
  }

  // required uint32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  // required uint32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->level(), output);
  }

  // required string initbuild = 4;
  if (has_initbuild()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->initbuild().data(), this->initbuild().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->initbuild(), output);
  }

  // required string inititem = 5;
  if (has_inititem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inititem().data(), this->inititem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->inititem(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* newRoleAttr_t_newRoleAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 tbxid = 1;
  if (has_tbxid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->tbxid(), target);
  }

  // required uint32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  // required uint32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->level(), target);
  }

  // required string initbuild = 4;
  if (has_initbuild()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->initbuild().data(), this->initbuild().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->initbuild(), target);
  }

  // required string inititem = 5;
  if (has_inititem()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->inititem().data(), this->inititem().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->inititem(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int newRoleAttr_t_newRoleAttr::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 tbxid = 1;
    if (has_tbxid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->tbxid());
    }

    // required uint32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // required uint32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // required string initbuild = 4;
    if (has_initbuild()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initbuild());
    }

    // required string inititem = 5;
    if (has_inititem()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inititem());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void newRoleAttr_t_newRoleAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const newRoleAttr_t_newRoleAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const newRoleAttr_t_newRoleAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void newRoleAttr_t_newRoleAttr::MergeFrom(const newRoleAttr_t_newRoleAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tbxid()) {
      set_tbxid(from.tbxid());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_initbuild()) {
      set_initbuild(from.initbuild());
    }
    if (from.has_inititem()) {
      set_inititem(from.inititem());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void newRoleAttr_t_newRoleAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void newRoleAttr_t_newRoleAttr::CopyFrom(const newRoleAttr_t_newRoleAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool newRoleAttr_t_newRoleAttr::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void newRoleAttr_t_newRoleAttr::Swap(newRoleAttr_t_newRoleAttr* other) {
  if (other != this) {
    std::swap(tbxid_, other->tbxid_);
    std::swap(id_, other->id_);
    std::swap(level_, other->level_);
    std::swap(initbuild_, other->initbuild_);
    std::swap(inititem_, other->inititem_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata newRoleAttr_t_newRoleAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = newRoleAttr_t_newRoleAttr_descriptor_;
  metadata.reflection = newRoleAttr_t_newRoleAttr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int newRoleAttr::kDatasFieldNumber;
#endif  // !_MSC_VER

newRoleAttr::newRoleAttr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void newRoleAttr::InitAsDefaultInstance() {
}

newRoleAttr::newRoleAttr(const newRoleAttr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void newRoleAttr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

newRoleAttr::~newRoleAttr() {
  SharedDtor();
}

void newRoleAttr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void newRoleAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* newRoleAttr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return newRoleAttr_descriptor_;
}

const newRoleAttr& newRoleAttr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Building_2eproto();
  return *default_instance_;
}

newRoleAttr* newRoleAttr::default_instance_ = NULL;

newRoleAttr* newRoleAttr::New() const {
  return new newRoleAttr;
}

void newRoleAttr::Clear() {
  datas_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool newRoleAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.newRoleAttr.t_newRoleAttr datas = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_datas:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_datas()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_datas;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void newRoleAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .pb.newRoleAttr.t_newRoleAttr datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* newRoleAttr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .pb.newRoleAttr.t_newRoleAttr datas = 1;
  for (int i = 0; i < this->datas_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->datas(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int newRoleAttr::ByteSize() const {
  int total_size = 0;

  // repeated .pb.newRoleAttr.t_newRoleAttr datas = 1;
  total_size += 1 * this->datas_size();
  for (int i = 0; i < this->datas_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->datas(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void newRoleAttr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const newRoleAttr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const newRoleAttr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void newRoleAttr::MergeFrom(const newRoleAttr& from) {
  GOOGLE_CHECK_NE(&from, this);
  datas_.MergeFrom(from.datas_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void newRoleAttr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void newRoleAttr::CopyFrom(const newRoleAttr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool newRoleAttr::IsInitialized() const {

  for (int i = 0; i < datas_size(); i++) {
    if (!this->datas(i).IsInitialized()) return false;
  }
  return true;
}

void newRoleAttr::Swap(newRoleAttr* other) {
  if (other != this) {
    datas_.Swap(&other->datas_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata newRoleAttr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = newRoleAttr_descriptor_;
  metadata.reflection = newRoleAttr_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
